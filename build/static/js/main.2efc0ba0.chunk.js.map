{"version":3,"sources":["config.js","components/modelTemplate/observedValues.js","constants/clearance.js","components/modelTemplate/schoolDay.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/userDetails/attendanceService.js","components/userDetails/attendanceAction.js","components/dashboard/dashboard.js","components/user/additionalService.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/auditTrail/auditTrailService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/grade/advisoryService.js","components/grade/advisoryAction.js","components/user/imageUpload.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/user/userSetting.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/clearance/clearanceService.js","components/grade/gradeAction.js","components/userDetails/attendanceTable.js","components/shared/customTable.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/shared/editableTable.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/modelTemplate/subjects.js","components/grade/teacherAction.js","components/grade/gradeInputAction.js","components/grade/gradesInput.js","components/grade/advisoryGrades.js","components/grade/teacherSubjectAssigment.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","components/clearance/clearanceAction.js","components/clearance/clearance.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","DEFINITIONS","Makadiyos","a","b","Makatao","Makakalikasan","Makabansa","OBSERVED_VALUES","values","statement","key","id","q1","q2","q3","q4","dropdownList","isSubField","isEditable","DESCRIPTOR_TABLE","headers","title","field","body","descriptors","scale","remarks","MARKING_TABLE","marking","rating","OBSERVED_VALUES_HEADER","dataIndex","width","withCondition","value","editable","CLEARANCE_HEADERS","CLEARANCE_DROPDOWN","SchoolDaysTmp","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","UserService","userObj","update","_id","findAllUser","findyById","getGenIdNumber","role","updatePassword","obj","updateProfileImg","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","userService","response","parent","data","filter","user","student","teacher","length","useEffect","getAttendance","getSchooldays","saveSchoolDays","AttendanceAction","attendances","setattendances","schoolDays","setSchoolDays","attendanceDatas","AttendanceService","tag","attendedDays","absences","push","getSchoolDays","console","log","DashboardPage","React","visible","setVisible","Form","useForm","form","schoolDaysObj","JSON","parse","stringify","DashboardAtion","onFinish","Object","total","map","monthDays","parseInt","reduce","newValues","assign","setTimeout","className","gutter","xs","span","sm","md","lg","bordered","style","marginTop","type","onClick","marginLeft","marginBottom","onCancel","footer","name","initialValues","children","keys","month","Item","label","placeholder","getFields","textAlign","htmlType","margin","resetFields","getAdvisory","getAdvisoryStudents","level","uploadProfile","file","Option","Select","UserEditForm","selectedUser","selectedParent","isNewData","idNumber","AdditionalService","getId","loading","enableReinitialize","onSubmit","render","touched","setFieldValue","spinning","delay","disabled","sessionStorage","firstName","lastName","CheckCircleFilled","gradesObj","findAllGrades","addUpdateObservedValues","valuesObj","quarterObj","findAllQuarter","auditTrailObj","findAllAudit","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","loggedDate","toISOString","details","auditTrailService","setItem","filterStudent","newArray","action","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","profileImgSrc","loadParent","loadAdmin","getNewGenId","newArrayCredentials","buildStudentList","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","columns","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","EmployeePage","Title","e","target","PlusCircleOutlined","onClose","bodyStyle","paddingBottom","advisoryObj","findAllAdvisory","getAvailableAdvisors","deleteAdvisory","TeacherAction","setSelectedTeacher","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","studentAdvisor","setStudentAdvisor","advisoryStudents","setAdvisoryStudents","availableAdvisors","setAvailableAdvisors","addAdvisor","advisor","advisorTeacher","finalAddValue","advisoryService","advisors","getListOfTeacher","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","loadAdvisoryStudents","userData","advisory","students","UploadImageAction","image","setImage","profileSrc","setProfileSrc","uploadSrc","setUploadSrc","processing","setProcessing","handleChange","input","files","reader","FileReader","onloadend","readAsDataURL","saveUpload","formData","FormData","append","imageUrl","secure_url","setStudentProfile","imgSrc","params","isAdvisory","AdvisoryAction","uploadButton","height","border","float","LoadingOutlined","PlusOutlined","marginRight","src","alt","updates","icon","UploadOutlined","Settings","newPassword","confirmPassword","changePassword","message","error","currentPassword","success","offset","align","GradeTable","grade","props","color","text","pagination","addUpdateClearance","getClearance","renderUnPaidNotif","studentObj","isParent","person","notification","info","description","placement","Grade1Action","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","advisoryGrades","setAdvisoryGrades","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","finalGrade","overAllGrade","setOverAllGrade","observedValues","setObservedValues","upgradeStudent","userCurrentGrade","currentUser","allStudent","result1","currentStudent","toString","editGrade","English","newEnglishGrade","recommendedGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","Values","newValuesGrade","subjectDummy","Music","subjectIndex","findIndex","subject","subjectGrades","updatedGrades","constructSubjectGrades","newSubject","Art","PE","Health","showGrade","loadGrade","getCurrentGradeUser","filterCurrentGradeUser","gradeRec","record","gradeLevelList","unClearedQuarters","clientUser","ClearanceService","responseClearances","clearance","find","item","entries","forEach","includes","buidSubjectRow","mapehIndex","topic","splice","buildObservedValues","buildOverallRemarks","forceHide","finalGradesholder","FinalGrade","average","toFixed","valuesDatas","observedValuesTmp","grades","currentGradeUser","hiddenQuarters","inComplete","recordObj","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","Remarks","loadGrades","finalOffspring","offspring","off","recordIndex","loadStudentGradesPerLevel","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","loadAdvisoryGrades","paramsObj","AttendanceTable","CustomTable","head","GradeAction","loadAttendance","filterChild","child","Collapse","Panel","TeacherForm","selectedTeacherAssgined","AdvisorAction","defaultValue","ghost","DeleteOutlined","EditableCell","editing","inputType","index","restProps","renderMarkings","mark","minWidth","maxWidth","inputNode","EditableTable","setData","editingKey","setEditingKey","isEditing","cancel","save","validateFields","row","newData","operationColumn","_","href","onConfirm","Link","setFieldsValue","mergedColumns","concat","col","onCell","component","components","cell","rowClassName","teacherObj","findAllTeacher","G_1_To_3","G_4_To_10","quartersObj","levelNum","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","updateSubjectTeacher","Subjects","updatedList","hideTeacher","showTeacher","GradeInputAction","isAdviser","teacherSubjects","updatedInputs","setUpdatedInputs","setInput","numVal","Number","updatedInputClone","targetIndex","topicObj","updateGrades","updatedSubjectsRec","activeQuarter","getQuarterName","subjectsHolder","editingSubjects","teacherId","prevRecords","recObj","prevRec","buildInputArr","getQuarterNum","GradesInput","gradeSubjectTeachers","userRole","getValue","autoComplete","renderSubjects","AdvisoryGrades","addGrade","TeacherAssignment","subjectAssignedTeachers","submit","valHolder","getFormInitialVal","rmNum","subjectHolder","GradePage","RiseOutlined","TimeKeepingTable","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","dateString","LoginForm","actions","errors","isSubmitting","Password","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","SubMenu","Menu","SiderMenu","theme","collapsed","mode","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","SettingOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","filterAudit","datas","AuditTrailPage","filterRole","document","getElementById","filterDate","ClearanceAction","levelClearance","setLevelClearance","levelToEdit","setLevelToEdit","getIndividualRec","responseGradeRecords","clearanceService","responseClearance","clearanceData","studentName","addUpdateLvlClearance","ClearancePage","levels","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","overlay","Text","exact","from","path","UserSetting","User","Student","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Timekeeping","AuditTrail","Clearance","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2efc0ba0.chunk.js","sourcesContent":["/**\n * declare all configurations in here\n */\n\n//declare as LOCAL for local and PRODUCTION for production\nconst ENVIRONMENT = 'PRODUCTION';\n\nconst LOCAL_BE = 'http://localhost:14000';\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\n\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE };","const DEFINITIONS = {\n  Makadiyos: {\n    a: `Expres ones's spiritual beliefs while respecting the spriritual beleiefs of others.`,\n    b: `Shows adherence to ethical principles by upholding truth`\n  },\n  Makatao: {\n    a: `Is sensitive to individual, social, and cultural differences`,\n    b: `Demonstrates contributions toward solidarity`\n  },\n  Makakalikasan: {\n    a: `Cares for the environment and utilizes resources wisely, and economically`\n  },\n  Makabansa: {\n    a: `Demonstrates pride in being a Filipino; exercises the rights and responsibilities of Filipino citizen`,\n    b: `Demonstrates appropriate behavior in carrying out activities in the school, community, and country`\n  }\n};\n\nconst OBSERVED_VALUES_HEADER = [\n  {\n    title: 'Core Values',\n    field: 'values',\n    dataIndex: 'values'\n  },\n  {\n    title: 'Behavior Statements',\n    field: 'statement',\n    dataIndex: 'statement',\n    width: '35%'\n  },\n  {\n    title: 'Q1',\n    field: 'q1',\n    dataIndex: 'q1', \n    withCondition: (value) => { if (value === 'NO') return 'red'},\n    isSubField: false,\n    editable: true\n  },\n  {\n    title: 'Q2',\n    field: 'q2',\n    dataIndex: 'q2',\n    withCondition: (value) => { if (value === 'NO') return 'red'},\n    isSubField: false,\n    editable: true\n  },\n  {\n    title: 'Q3',\n    field: 'q3',\n    dataIndex: 'q3',\n    withCondition: (value) => { if (value === 'NO') return 'red'},\n    isSubField: false,\n    editable: true\n  },\n  {\n    title: 'Q4',\n    field: 'q4',\n    dataIndex: 'q4',\n    withCondition: (value) => { if (value === 'NO') return 'red'},\n    isSubField: false,\n    editable: true\n  }\n]\n\nlet OBSERVED_VALUES = [\n  {\n    values: '1. Makadiyos',\n    statement: DEFINITIONS.Makadiyos.a,\n    key: 'Makadiyos.a',\n    id: 'Makadiyos.a',\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\n  },\n  {\n    values: '',\n    statement: DEFINITIONS.Makadiyos.b,\n    key: 'Makadiyos.b',\n    id: 'Makadiyos.b',\n    isSubField: true,\n    isEditable: true,\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\n  },\n  {\n    values: '2. Makatao',\n    statement: DEFINITIONS.Makatao.a,\n    key: 'Makatao.a',\n    id: 'Makatao.a',\n    isSubField: false,\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\n  },\n  {\n    values: '',\n    statement: DEFINITIONS.Makatao.b,\n    key: 'Makatao.b',\n    id: 'Makatao.b',\n    isSubField: true,\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\n  },\n  {\n    values: '3. Makakalikasan',\n    statement: DEFINITIONS.Makakalikasan.a,\n    key: 'Makakalikasan.a',\n    id: 'Makakalikasan.a',\n    isSubField: false,\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\n  },\n  {\n    values: '4. Makabansa',\n    statement: DEFINITIONS.Makabansa.a,\n    key: 'Makabansa.a',\n    id: 'Makabansa.a',\n    isSubField: false,\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\n  },\n  {\n    values: '',\n    statement: DEFINITIONS.Makabansa.a,\n    key: 'Makabansa.b',\n    id: 'Makabansa.b',\n    isSubField: false,\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: ''\n  }\n];\n\nconst DESCRIPTOR_TABLE = {\n  headers: [\n    {\n      title: 'Descriptors',\n      field: 'descriptors'\n    },\n    {\n      title: 'Grading Scale',\n      field: 'scale',\n    },\n    {\n      title: 'Remarks',\n      field: 'remarks'\n    }\n  ],\n\n  body: [\n    {\n      key: 'Outstanding_DT',\n      id: 'Outstanding_DT',\n      descriptors: 'Outstanding',\n      scale: '90-100',\n      remarks: 'Passed'\n    },\n    {\n      key: 'Very_Satisfactory_DT',\n      id: 'Very_Satisfactory_DT',\n      descriptors: 'Very Satisfactory',\n      scale: '85-89',\n      remarks: 'Passed'\n    },\n    {\n      key: 'Satisfactory_DT',\n      id: 'Satisfactory_DT',\n      descriptors: 'Satisfactory',\n      scale: '80-84',\n      remarks: 'Passed'\n    },\n    {\n      key: 'Fairly_Satisfactory_DT',\n      id: 'Fairly_Satisfactory_DT',\n      descriptors: 'Fairly Satisfactory',\n      scale: '75-79',\n      remarks: 'Passed'\n    },\n    {\n      key: 'Did_Not_Meet_DT',\n      id: 'Did_Not_Meet_DT',\n      descriptors: 'Did Not Meet Expectations',\n      scale: 'Below 75',\n      remarks: 'Failed'\n    }\n  ]\n};\n\nconst MARKING_TABLE = {\n  headers: [\n    {\n      title: 'Marking',\n      field: 'marking'\n    }, {\n      title: 'Non-Numerical Rating',\n      field: 'rating'\n    }\n  ],\n  body: [\n    {\n      key:'AO_MT',\n      id: 'AO_MT',\n      marking: 'AO',\n      rating: 'Always Observed'\n    },\n    {\n      key:'SO_MT',\n      id: 'SO_MT',\n      marking: 'SO',\n      rating: 'Sometimes Observed'\n    },\n    {\n      key:'RO_MT',\n      id: 'RO_MT',\n      marking: 'RO',\n      rating: 'Rarely Observed'\n    },\n    {\n      key:'NO_MT',\n      id: 'NO_MT',\n      marking: 'NO',\n      rating: 'Not Observed'\n    }\n  ]\n};\n\n\nmodule.exports = { \n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  DEFINITIONS,\n  OBSERVED_VALUES_HEADER,\n  OBSERVED_VALUES\n};","const CLEARANCE_DROPDOWN = [\n  '',\n  'pending',\n  'complete'\n]\n\nlet CLEARANCE_HEADERS = [\n  {\n    title: 'Student Name',\n    field: 'studentName',\n    dataIndex: 'studentName',\n    width: '35%'\n  },\n  {\n    title: 'First Quarter',\n    field: 'firstQuarter',\n    dataIndex: 'firstQuarter',\n    editable: true\n  },\n  {\n    title: 'Second Quarter',\n    field: 'secondQuarter',\n    dataIndex: 'secondQuarter',\n    editable: true,\n  },\n  {\n    title: 'Third Quarter',\n    field: 'thirdQuarter',\n    dataIndex: 'thirdQuarter',\n    editable: true,\n  },\n  {\n    title: 'Fourth Quarter',\n    field: 'fouthQuarter',\n    dataIndex: 'fourthQuarter',\n    editable: true,\n  }\n];\n\n\nmodule.exports = { CLEARANCE_HEADERS, CLEARANCE_DROPDOWN };","let SchoolDaysTmp = {\n  Jan: 0,\n  Feb: 0,\n  Mar: 0,\n  Apr: 0,\n  May: 0,\n  Jun: 0,\n  Jul: 0,\n  Aug: 0,\n  Sep: 0,\n  Oct: 0,\n  Nov: 0,\n  Dec: 0\n};\n\nmodule.exports = { SchoolDaysTmp };","import axios from 'axios';\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\nclass BaseService {\n  constructor(moduleUrl) {\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\n      PRODUCTION_BE + \"/\" + moduleUrl :\n      LOCAL_BE + \"/\" + moduleUrl;\n    this.axiosInstance = axios.create({\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\n        PRODUCTION_BE + \"/\" + moduleUrl :\n        LOCAL_BE + \"/\" + moduleUrl\n    })\n    \n    // this.axiosInstance.interceptors.request.use(function (config) {\n    //   const token = sessionStorage.getItem('token');\n    //   config.headers[\"x-authorization\"] = token;\n    //   return config;\n    // });\n  }\n\n  edit = newObj => {\n    return this.axiosInstance.put('', newObj);\n  };\n\n  add = newObj => {\n    return this.axiosInstance.post('', newObj);\n  };\n\n  getById = id => {\n    return this.axiosInstance.get('/' + id);\n  };\n\n  delete = crudId => {\n    return this.axiosInstance.delete('/' + crudId);\n  };\n  softDelete = crudId => {\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\n  };\n}\nexport default BaseService;\n","import BaseService from '../../baseService';\nclass UserService extends BaseService {\n  constructor() {\n    super('user');\n  }\n\n  add = userObj => {\n    return this.axiosInstance.post('/create-user', userObj);\n  };\n\n  update = userObj => {\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\n  };\n\n  findAllUser = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-user/' + id);\n  };\n\n  getGenIdNumber = (role) => {\n     return this.axiosInstance.get('/generate-user-id/' + role);\n  };\n\n  updatePassword = (obj) => {\n    return this.axiosInstance.post('/update-password', obj);\n  };\n  \n  updateProfileImg = (obj) => {\n    return this.axiosInstance.post('/update-profile-img', obj);\n  };\n}\n\nexport default new UserService();\n","import React, { useState, useEffect } from 'react';\nimport userService from '../user/userService';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( \n      {numberOfStudents : 0, \n      numberOfTeachers: 0,\n      numberOfParents : 0}\n      );\n\n  const getListOfUsers = async () => {\n    let response = await userService.findAllUser();\n    let parent = response.data.filter(user => user.role === \"Parent\");\n    let student = response.data.filter(user => user.role === \"Student\");\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\n    setUserDetails({\n        numberOfParents: parent.length,\n        numberOfStudents : student.length, \n        numberOfTeachers: teacher.length\n    })\n  };\n\n  useEffect(() => {\n    getListOfUsers();\n  }, []);\n\n\n  return {\n    userDetails\n  }\n};\n\nexport default UserAction;\n","import BaseService from '../../baseService';\nclass AttendanceService extends BaseService {\n  constructor() {\n    super('attendance');\n  }\n\n  getAttendance = id => {\n    return this.axiosInstance.get('/' + id);\n  };\n\n  getSchooldays = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  saveSchoolDays = obj => {\n    return this.axiosInstance.post('/attendance-table-days', obj)\n  };\n}\n\nexport default new AttendanceService();\n","import React, { useState, useEffect } from 'react';\nimport AttendanceService from './attendanceService';\n\nconst AttendanceAction = () => {\n\n  let [ attendances, setattendances ] = useState([]);\n  let [ schoolDays, setSchoolDays ] = useState({});\n\n  const getAttendance = async (id) => {\n    let attendanceDatas = [];\n    let response = await AttendanceService.getAttendance(id);\n    let schoolDays = response.data.schoolDays;\n    schoolDays.key = 'schoolDays123';\n    schoolDays.id = 'schoolDays123';\n    schoolDays.tag = \"No. of School Days\";\n    let attendedDays = response.data.attendedDays;\n    attendedDays.key = 'attendedDays1123';\n    attendedDays.id = 'attendedDays1123';\n    attendedDays.tag= \"No. of School Days Present\";\n    let absences = response.data.absences;\n    absences.key = 'absences1123';\n    absences.id = 'absences1123';\n    absences.tag = 'No. of Days Absent';\n    attendanceDatas.push(schoolDays);\n    attendanceDatas.push(attendedDays);\n    attendanceDatas.push(absences);\n\n    setattendances(attendanceDatas);\n    return attendanceDatas;\n  };\n\n  const getSchoolDays = async () => {\n    let response = await AttendanceService.getSchooldays();\n    setSchoolDays(response.data[0]);\n    return response;\n  };\n\n\n  const saveSchoolDays = async obj => {\n    let response = await AttendanceService.saveSchoolDays(obj);\n    console.log(response);\n  };  \n\n  useEffect(() => {\n  }, []);\n\n  return {\n    getAttendance,\n    attendances,\n    getSchoolDays,\n    schoolDays,\n    saveSchoolDays\n  }\n};\n\nexport default AttendanceAction;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Modal, Form, Input, message } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport DashboardAtion from \"../dashboard/dashboardAction\";\nimport { SchoolDaysTmp } from '../modelTemplate/schoolDay';\nimport AttendanceAction from '../userDetails/attendanceAction';\n\nconst DashboardPage = () => {\n  const [visible, setVisible] = React.useState(false);\n  const [form] = Form.useForm();\n  const { getSchoolDays, schoolDays, saveSchoolDays } = AttendanceAction();\n  let schoolDaysObj = JSON.parse(JSON.stringify(SchoolDaysTmp));\n\n  getSchoolDays();\n\n  const loadSchoolDays = () => { \n    let daysOfSchool = (schoolDays) ?\n      Object.assign(schoolDaysObj, schoolDays) :\n      schoolDaysObj;\n\n      return daysOfSchool;\n  }; \n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  let {\n    userDetails\n  } = DashboardAtion({});\n\n\n  const getFields = () => {\n    const count = 12;\n    const children = [];\n\n    Object.keys(SchoolDaysTmp).map((month, key)=> {\n      children.push(\n        <Col span={8} key={key}>\n          <Form.Item\n            name={month}\n            label={month}\n          >\n            <Input placeholder=\"\"/>\n          </Form.Item>\n        </Col>,\n      );\n    });\n\n    return children;\n  };\n\n  const onFinish = async (values) => {\n    console.log('Received values of form: ', values);\n\n    if (Object.values(values).length > 0) {\n      let total = Object.values(values).map(monthDays => { \n        return parseInt(monthDays)\n      }).reduce((a,b) => a + b, 0);\n      \n      let newValues = Object.assign(values, { total: total });\n      console.log(newValues);\n\n      await saveSchoolDays(newValues);\n      setTimeout(() => {setVisible(false)}, 2000);\n    };\n  };\n\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row gutter={16}>\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\n          <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\n            <span className=\"dashboard-padding\">\n              {userDetails.numberOfStudents}\n            </span>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\n            <span className=\"dashboard-padding\">\n              {userDetails.numberOfParents}\n            </span>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\n            <span className=\"dashboard-padding\">\n              {userDetails.numberOfTeachers}\n            </span>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }} >\n          <Card title=\"School Days\" bordered={false} style={{ width: '98%', marginTop: '20px' }}>\n            <Button type=\"primary\" onClick={showModal} style={{ marginLeft: '10px', marginBottom: '5px', marginTop: '5px' }}>\n              Input School Days\n            </Button>\n            <Modal\n              title=\"School Days\"\n              visible={visible}\n              onCancel={handleCancel}\n              footer={null}\n            >\n              <Form\n                form={form}\n                name=\"advanced_search\"\n                className=\"ant-advanced-search-form\"\n                onFinish={onFinish}\n                initialValues={loadSchoolDays()}\n              >\n                <Row gutter={24}>{getFields()}</Row>\n                <Row>\n                  <Col span={24} style={{textAlign: 'center'}} >\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      Save\n                    </Button>\n                    <Button\n                      style={{ margin: '0 8px'}}\n                      onClick={() => {\n                        form.resetFields();\n                        setVisible(false);\n                      }}\n                    >\n                      Clear\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </Modal>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n\n  );\n}\n\nexport default DashboardPage;\n\n","import BaseService from '../../baseService';\nclass AdditionalService extends BaseService {\n  constructor() {\n    super('');\n  };\n\n  getGenIdNumber = role => {\n     return this.axiosInstance.get('/generate-user-id/' + role);\n  };\n\n  getAdvisory = teacher => {\n    return this.axiosInstance.post('/teacher-advisory', teacher);\n  };\n\n  getAdvisoryStudents = level => {\n    return this.axiosInstance.get('/advisory-students/' + level);\n  };\n\n  uploadProfile = file => {\n    return this.axiosInstance.post('/upload-profile', file);\n  };\n\n}\n\nexport default new AdditionalService();\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nimport AdditionalService from './additionalService';\nconst { Option } = Select;\n\nconst UserEditForm = ({ add, update, selectedUser, selectedParent, role, isNewData = true }) => {\n\n  let getId = async role => {\n    if (selectedUser.idNumber) return;\n\n    let response = await AdditionalService.getGenIdNumber(role);\n    selectedUser.idNumber = response.data;\n  };\n\n  let newGenId = '';\n\n  if (isNewData) {\n    getId(role);\n  };\n\n  let [loading, setLoading] = useState(false);\n  let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\n\n  return (\n    <Formik\n      initialValues={selectedUser}\n      enableReinitialize={true}\n      onSubmit={async (values) => {\n        if (values._id) {\n          console.log(values)\n          update(values)\n        } else {\n          values.role = role;\n          add(values)\n\n          // window.location.reload(false);\n        }\n      }}\n      render={({ values, touched, setFieldValue }) => (\n        <Spin spinning={loading} delay={500}>\n          <Form className=\"p-30\">\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"User ID\" name=\"idNumber\">\n                  <Input disabled=\"true\" name=\"idNumber\" />\n                </Form.Item>\n              </Col>\n              {role === \"Student\" ? (\n                <Col span={12}>\n                  <Form.Item label=\"School Year\" name=\"schoolYear\">\n                    <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\n                  </Form.Item>\n                </Col>\n              ) : (\"\")}\n\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"First Name\" name=\"firstName\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"Middle Name\" name=\"middleName\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"Last Name\" name=\"lastName\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"Gender\" name=\"gender\">\n                  <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\n                    <Option value=\"Male\">Male</Option>\n                    <Option value=\"Female\">Female</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            {role === \"Student\" ? (\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\n                    <Select\n                      disabled={\n                        JSON.parse(sessionStorage.user).role === \"Teacher\"\n                      }\n                      name=\"gradeLevel\"\n                    >\n                      <Option value=\"1\">1</Option>\n                      <Option value=\"2\">2</Option>\n                      <Option value=\"3\">3</Option>\n                      <Option value=\"4\">4</Option>\n                      <Option value=\"5\">5</Option>\n                      <Option value=\"6\">6</Option>\n                      <Option value=\"7\">7</Option>\n                      <Option value=\"8\">8</Option>\n                      <Option value=\"9\">9</Option>\n                      <Option value=\"10\">10</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  {/* <Form.Item label=\"Section\" name=\"section\">\n                           <Input\n                              disabled={\n                                 values.role != \"Student\" ||\n                                 JSON.parse(sessionStorage.user).role === \"Teacher\"\n                              }\n                              name=\"section\"\n                           />\n                        </Form.Item> */}\n                </Col>\n              </Row>\n            ) : (\n              \"\"\n            )}\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"Birth Day\" name=\"birthDate\">\n                  <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"Birth Place\" name=\"birthPlace\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Form.Item label=\"Age\" name=\"age\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\n                </Form.Item>\n              </Col>\n              <Col span={16}>\n                {role === \"Student\" ? (\n                  <Form.Item label=\"Guardian\" name=\"parentId\">\n                    <Select\n                      value={\n                        values.parent\n                          ? values.parent.firstName +\n                          \" \" +\n                          values.parent.lastName\n                          : \"\"\n                      }\n                      name=\"parentId\"\n                    >\n                      {selectedParent.map((parent) => {\n                        return (\n                          <Option value={parent._id}>\n                            {parent.firstName + \" \" + parent.lastName}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  </Form.Item>\n                ) : (\n                  \"\"\n                )}\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"Contact Number\" name=\"contactNumber\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"Email\" name=\"email\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              {/* <Col span={12}>\n                     <Form.Item label=\"Role\" name=\"role\">\n                        <Select\n                           disabled={\n                              JSON.parse(sessionStorage.user).role === \"Teacher\"\n                           }\n                           name=\"role\"\n                        >\n                           <Option value=\"Admin\">Admin</Option>\n                           <Option value=\"Student\">Student</Option>\n                           <Option value=\"Parent\">Parent</Option>\n                           <Option value=\"Teacher\">Teacher</Option>\n                        </Select>\n                     </Form.Item>\n                   </Col> */}\n              {role === 'Student' ? (\n                <Col span={12}>\n                  <Form.Item label=\"BadgeId\" name=\"badgeID\">\n                    <Input name=\"badgeID\" />\n                  </Form.Item>\n                </Col>\n              ) : ('')}\n              <Col span={12}>\n                <Form.Item label=\"Password\" name=\"password\">\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" type=\"password\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"btn-save\" htmlType=\"submit\">\n              <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\n            </Button> : null}\n\n          </Form>\n        </Spin>\n      )}\n    />\n\n  );\n}\n\nexport default UserEditForm;\n","import BaseService from '../../baseService';\nclass GradesService extends BaseService {\n  constructor() {\n    super('grades');\n  }\n\n  add = gradesObj => {\n    return this.axiosInstance.post('/create-grades', gradesObj);\n  };\n\n  update = gradesObj => {\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\n  };\n  \n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-grades/' + id);\n  };\n\n  findAllGrades = (level ='') => {\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\n  };\n\n  addUpdateObservedValues = valuesObj => {\n    return this.axiosInstance.post('/observed-values', valuesObj);\n  };\n\n}\n\nexport default new GradesService();\n","import BaseService from '../../baseService';\nclass TimeKeepingService extends BaseService {\n  constructor() {\n    super('quarter');\n  }\n\n  add = quarterObj => {\n    return this.axiosInstance.post('/create-quarter', quarterObj);\n  };\n\n  update = quarterObj => {\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\n  };\n\n  findAllQuarter = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-quarter/' + id);\n  };\n\n}\n\nexport default new TimeKeepingService();\n","import BaseService from '../../baseService';\nclass AuditTrailService extends BaseService {\n  constructor() {\n    super('auditTrail');\n  }\n\n  add = auditTrailObj => {\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\n  };\n\n  update = auditTrailObj => {\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\n  };\n\n  findAllAudit = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-autditrail/' + id);\n  };\n\n}\n\nexport default new AuditTrailService();\n","import React, { useState, useEffect } from 'react';\nimport userService from './userService';\nimport gradesService from '../grade/gradesService';\nimport quarterService from '../quarter/quarterService'\nimport { Button} from 'antd';\nimport moment from 'moment';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport AdditionalService from './additionalService';\n\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\n  let [adminList, setAdminList] = useState([])\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\n  let [parentList, setParentList] = useState([])\n  let [studentList, setStudentList] = useState([])\n  let [teacherList, setTeacherList] = useState([])\n  let [showUserVisible, setShowUserVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n  let [selectedParent, setSelectedParent] = useState([]);\n\n  let [loginCounter, setLoginCounter] = useState(false);\n\n  const addUser = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Add User\",\n      date:new Date()\n    }\n    if(values.parentId){\n      let parent = await userService.findyById(values.parentId)\n      values.parent = parent.data;\n    }\n    let response = await userService.add(values)\n    .then(function (res) {\n      if(values.role === \"Student\"){\n        let gradeObj = {\n          status: true,\n          student: values,\n          gradeLevel: values.gradeLevel,\n          section: values.section,\n          schoolYear : values.schoolYear,\n          subjects: [{\n              subjectName: \"English\",\n              subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Filipino\",\n              subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Science\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Math\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"MAPEH\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Values\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          }]\n      }\n      let response = gradesService.add(gradeObj)\n      }\n    \n        \n        setSelectedUser({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            employeeNumber: \"\",\n            department: \"\",\n          })\n        setShowUserVisible(false)\n        loadUsers()\n        window.location.reload(false);\n    })\n  };\n\n  const editUser = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Edit User\",\n      date:new Date()}\n    if(values.parentId){\n      let parent = await userService.findyById(values.parentId)\n      values.parent = parent.data;\n    }\n    let response = await userService.update(values)\n    .then(function (res) {\n        setSelectedUser({\n          firstName: \"\",\n          lastName: \"\",\n          middleName: \"\",\n          idNumber: \"\",\n          gender: \"\",\n          birthDate: \"\",\n          birthPlace: \"\",\n          age: \"\",\n          contactNumber: \"\",\n          email: \"\",\n          status: \"\",\n          })\n        setShowUserVisible(false)\n        loadUsers()\n    })\n  };\n\n  const getListOfParent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Parent\");\n    setSelectedParent(result)\n  };\n\n  const showUser = () => {\n    setSelectedUser({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        idNumber: \"\",\n        gender: \"\",\n        birthDate: \"\",\n        birthPlace: \"\",\n        age: \"\",\n        contactNumber: \"\",\n        email: \"\",\n        status: \"\",\n      });\n    setShowUserVisible(true)\n  };\n\n  const loadUser = (userObj) => {\n    setSelectedUser({...userObj});\n    setShowUserVisible(true);\n  };\n\n  const loadQuarter = async () => {\n    let response = await quarterService.findAllQuarter();\n    if (response.data && response.data.length > 0) {\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\n    };\n  }\n\n  const login = async (credentials) => {\n    let ctr = 0;\n    let loggedInUser = {};\n    userDetails.list.map((user) => {\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\n            ctr = ctr + 1;\n            loggedInUser = user;\n        }\n    })\n    if(ctr === 0) {\n        setLoginCounter(false)\n    } else {\n         //if user is parent log in audit trail\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\n          let loggedDate =  new Date().toISOString();\n          let details = {\n            user: loggedInUser,\n            activity: 'Parent logged in',\n            date: loggedDate\n          };\n          await auditTrailService.add(details);\n        };\n    \n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\n        sessionStorage.setItem(\"_id\", quarter._id);\n        window.location.reload(false);\n        setLoginCounter(true);\n    }\n  };\n\n  const filterStudent = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setStudentList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Student\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setStudentList( newArray)\n    }\n  } \n  \n  const filterTeacher = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setTeacherList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Teacher\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setTeacherList( newArray)\n    }\n  }  \n\n  const filterParent = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setParentList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Parent\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setParentList( newArray)\n    }\n  }  \n\n  const filterAdmin = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setAdminList(\n        newArray\n      )\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Admin\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setAdminList(\n      newArray\n    )\n    }\n  }\n\n  const loadTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setTeacherList(newArray)\n\n  }  \n\n  const loadStudent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Student\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        profileImgSrc: (user.profileImgSrc) ? user.profileImgSrc : '',\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setStudentList(newArray)\n\n  }  \n\n  const loadParent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Parent\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setParentList(newArray)\n\n  }\n\n  const loadAdmin = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Admin\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setAdminList(newArray)\n\n  }\n  \nconst getNewGenId = async (role) => {\n      let response = await userService.getGenIdNumber(role);\n      return response;\n    }\n\nconst loadUsers = async () => {\n    let response = await userService.findAllUser();\n    let newArray = response.data.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    let newArrayCredentials = response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          idNumber: user.idNumber,\n          password: user.password,\n        }\n      })\n\n    setUserDetails({\n      list: newArray,\n      credentials: newArrayCredentials\n    })\n  \n    \n\n  };\n  \n  const buildStudentList = (list) => {\n    let newlist = list.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    });\n    return newlist;\n  };\n  \n  useEffect(() => {\n    loadUsers();\n    getListOfParent();\n    loadAdmin();\n    loadStudent();\n    loadTeacher();\n    loadParent();\n    loadQuarter();\n  }, []);\n\n\n  return {\n    loadUsers,\n    addUser,\n    loginCounter,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    userDetails,\n    selectedUser,\n    editUser,\n    login,\n    selectedParent,\n    filterAdmin,\n    filterStudent,\n    filterParent,\n    filterTeacher,\n    adminList,\n    studentList,\n    parentList,\n    teacherList,\n    getNewGenId,\n    buildStudentList,\n    setSelectedUser,\n    loadStudent\n  }\n};\n\nexport default UserAction;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\n    const locale = 'en';\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\n\n  useEffect(() => {\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\n        // This will trigger a rerender every component that uses the useDate hook.\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\n      }, 1000);\n      return () => {\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n      }\n  }, []);\n\n\n  return {\n    today\n  }\n};\n\nexport default TimeKeepingAction;","import React from 'react';\nimport { Table } from 'antd';\n\nconst EmployeeTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: <b>Id Number</b>,\n         dataIndex: 'idNumber',\n      },\n      {\n         title: <b>First Name</b>,\n         dataIndex: 'firstName',\n      },\n      {\n         title: <b>Middle Name</b>,\n         dataIndex: 'middleName',\n      },\n      {\n         title: <b>Last Name</b>,\n         dataIndex: 'lastName',\n      },\n      {\n         title: <b>Gender</b>,\n         dataIndex: 'gender',\n      },\n      {\n        title: <b>Age</b>,\n        dataIndex: 'age',\n      },   \n      {\n        title: <b>Contact Number</b>,\n        dataIndex: 'contactNumber',\n      },  \n      {\n        title: <b>Email</b>,\n        dataIndex: 'email',\n      },   \n      {\n        title: <b>Role</b>,\n        dataIndex: 'role',\n      },   \n      {\n        title: <b>Action</b>,\n        dataIndex: 'action',\n      },                            \n   ];\n\n   const rowUserSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n         console.log(selectedRows)\n      }\n  };\n\n\n   return (\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default EmployeeTable;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    userDetails,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterAdmin,\n    adminList\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        {console.log(adminList)}\n        <UserTable details={adminList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Admin' isNewData=\"false\"/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import BaseService from '../../baseService';\nclass AdvisoryService extends BaseService {\n  constructor() {\n    super('advisory');\n  }\n\n  add = advisoryObj => {\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\n  };\n\n  update = advisoryObj => {\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\n  };\n  \n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-advisory/' + id);\n  };\n\n  findAllAdvisory = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  getAvailableAdvisors = () => {\n    return this.axiosInstance.get('/available-advisors');\n  };\n\n  deleteAdvisory = (id) => {\n    return this.axiosInstance.delete('/delete-advisory/' + id)\n  };\n}\n\nexport default new AdvisoryService();\n","import React, { useState, useEffect } from 'react';\nimport userService from '../user/userService';\nimport AdditionalService from '../user/additionalService';\nimport advisoryService from '../grade/advisoryService';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport UserAction from '../user/userAction';\n\nconst TeacherAction = (initial = { searchRequest: {} }) => {\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\n  let [studentAdvisor, setStudentAdvisor] = useState({});\n  let [advisoryStudents, setAdvisoryStudents] = useState([]);\n  let [availableAdvisors, setAvailableAdvisors] = useState([]);\n  \n  let {\n    buildStudentList\n  } = UserAction({});\n\n  const addAdvisor = async (values, gradeLevel) => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Added Advisor\",\n      date:new Date()}\n    let advisorTeacher = await userService.findyById(values.advisor)\n    let finalAddValue = {\n      gradeLevel: gradeLevel,\n      teacher: advisorTeacher.data\n    }\n    try {\n      let response = await advisoryService.add(finalAddValue);\n      console.log(response);\n       window.location.reload();\n    } catch (error) {\n      console.log(error);\n    };\n  };\n  \n  const getAvailableAdvisors = async () => {\n    let advisors = await advisoryService.getAvailableAdvisors();\n    setAvailableAdvisors(advisors.data);\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result);\n  };\n\n  const getListOfAssignedTeacherGrade1 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\n    setselectedAdvisoryAssignedGrade1(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade2 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\n    setselectedAdvisoryAssignedGrade2(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade3 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\n    setselectedAdvisoryAssignedGrade3(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade4 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\n    setselectedAdvisoryAssignedGrade4(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade5 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\n    setselectedAdvisoryAssignedGrade5(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade6 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\n    setselectedAdvisoryAssignedGrade6(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade7 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\n    setselectedAdvisoryAssignedGrade7(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade8 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\n    setselectedAdvisoryAssignedGrade8(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade9 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\n    setselectedAdvisoryAssignedGrade9(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade10 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\n    setselectedAdvisoryAssignedGrade10(result[0])\n  };\n\n  const hideAdvisor = async () => {\n    setshowAdvisorVisible(false)\n  };\n\n  const showAdvisor = async (gradeLevel) => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\n    if(result.length >= 1){\n        setselectedAdvisoryAssgined(result[0].subjects)\n    } else {\n        setselectedAdvisoryAssgined({})\n    }\n    setshowAdvisorVisible(true)\n  };\n\n  const getStudentAdvisor = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\n    setStudentAdvisor(result[0]);\n  };\n  \n   const loadAdvisoryStudents = async () => {\n     let user = JSON.parse(sessionStorage.user);\n     const userData = {\n       firstName: user.firstName,\n       lastName: user.lastName,\n       middleName: user.middleName\n     };\n     try {\n       let advisory = await AdditionalService.getAdvisory(userData);\n   \n       if (!advisory) return;\n     \n       const students = await AdditionalService.getAdvisoryStudents(advisory.data.gradeLevel);\n       let list = buildStudentList(students.data);\n       await setAdvisoryStudents(list);\n       console.log('YHVH is great', students.data);\n       return list;\n     } catch (error) {\n       return [];\n     };\n    \n  };\n  \n  const deleteAdvisory = async (id) => {\n    let response = await advisoryService.deleteAdvisory(id);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getStudentAdvisor();\n    getListOfTeacher();\n    getListOfAssignedTeacherGrade1();\n    getListOfAssignedTeacherGrade2();\n    getListOfAssignedTeacherGrade3();\n    getListOfAssignedTeacherGrade4();\n    getListOfAssignedTeacherGrade5();\n    getListOfAssignedTeacherGrade6();\n    getListOfAssignedTeacherGrade7();\n    getListOfAssignedTeacherGrade8();\n    getListOfAssignedTeacherGrade9();\n    getListOfAssignedTeacherGrade10();\n    loadAdvisoryStudents();\n    getAvailableAdvisors();\n  }, []);\n\n\n  return {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade1,\n    selectedAdvisoryAssignedGrade2,\n    selectedAdvisoryAssignedGrade3,\n    selectedAdvisoryAssignedGrade4,\n    selectedAdvisoryAssignedGrade5,\n    selectedAdvisoryAssignedGrade6,\n    selectedAdvisoryAssignedGrade7,\n    selectedAdvisoryAssignedGrade8,\n    selectedAdvisoryAssignedGrade9,\n    selectedAdvisoryAssignedGrade10,\n    selectedAdvisoryAssgined,\n    studentAdvisor,\n    advisoryStudents,\n    loadAdvisoryStudents,\n    availableAdvisors,\n    deleteAdvisory\n  }\n};\n\nexport default TeacherAction;\n","import { useState } from 'react';\nimport AdditionalService from './additionalService';\nimport UserService from './userService';\n\nconst UploadImageAction = (initial = {}) => {\n  const [image, setImage] = useState(null);\n  const [profileSrc, setProfileSrc] = useState('');\n  const [uploadSrc, setUploadSrc] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n\n  const handleChange = input => {\n\n    if(input.target.files.length === 0) return;\n\n    let reader = new FileReader();\n    let file = input.target.files[0];\n\n    reader.onloadend = async () => {\n      await setUploadSrc(reader.result);\n      await setImage(file);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const saveUpload = async idNumber => {\n    setProcessing(true);\n    const formData = new FormData();\n    formData.append('image', image);\n    let imageUrl = '';\n\n    try {\n      let response = await AdditionalService.uploadProfile(formData);\n      imageUrl = response.data[0].secure_url;\n      return await setStudentProfile(imageUrl, idNumber);\n    } catch (error) {\n      console.log(error);\n      setProcessing(false);\n    };\n  };\n\n  const setStudentProfile = async (imgSrc = '', idNumber = '') => {\n    try {\n      let params = {\n        idNumber: idNumber,\n        profileImgSrc: imgSrc\n      };\n      let response = await UserService.updateProfileImg(params);\n      setProfileSrc(response.data.profileImgSrc);\n      setUploadSrc('');\n      setProcessing(false);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    };\n  };\n\n  return {\n    saveUpload,\n    handleChange,\n    profileSrc,\n    loading,\n    uploadSrc,\n    processing,\n    setProfileSrc,\n    setUploadSrc\n  }\n};\n\nexport default UploadImageAction;","import React, { useState } from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Upload } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined, PlusOutlined, LoadingOutlined, UploadOutlined } from '@ant-design/icons';\nimport UserForm from './userForm';\nimport AdvisoryAction from '../grade/advisoryAction';\n\nimport UserAction from './userAction';\nimport AdditionalService from './additionalService';\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction';\nimport UploadImageAction from './imageUpload';\n\nimport UserTable from './userTable';\n\nconst EmployeePage = ({ isAdvisory }) => {\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    studentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterStudent,\n    setSelectedUser,\n    loadStudent\n  } = UserAction({});\n\n  let {\n    advisoryStudents,\n    loadAdvisoryStudents\n  } = AdvisoryAction({});\n\n  let {\n    today\n  } = TimeKeepingAction({});\n\n  let {\n    handleChange,\n    saveUpload,\n    profileSrc,\n    uploadSrc,\n    loading,\n    processing,\n    setProfileSrc,\n    setUploadSrc\n  } = UploadImageAction();\n\n  const uploadButton = (\n    <div style={{ height: \"110px\" }}>\n      <div style={{ border: \"0.5px dashed grey\", height: \"100px\", width: \"100px\", textAlign: \"center\", float: \"right\" }}>\n        {loading ? <LoadingOutlined style={{ marginTop: '20px' }} /> : <PlusOutlined style={{ marginTop: '20px' }} />}\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    </div>\n  );\n\n  if (showUserVisible && selectedUser && selectedUser.profileImgSrc) { profileSrc = selectedUser.profileImgSrc };\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Row className=\"mt-15\">\n        <Col lg={{ span: 14 }}>\n          <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\n        </Col>\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n          <>\n            <Col lg={{ span: 6 }}>\n              <Input placeholder=\"Search\" onChange={(e) => filterStudent(e.target.value)} />\n              {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n          </Button> */}\n            </Col>\n            <Button className=\"addUser btn-add\" onClick={() => showUser()}>\n              <PlusCircleOutlined type=\"plus-circle\" /> Add User\n        </Button>\n          </>\n          : null}\n\n      </Row>\n      <Row>\n        <Col lg={{ span: \"24\" }}>\n          <UserTable details={isAdvisory ? advisoryStudents : studentList} />\n        </Col>\n      </Row>\n      <Drawer\n        title={\n          <Typography.Title level={4}>\n            {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n          </Typography.Title>\n        }\n        width={550}\n        visible={showUserVisible}\n        onClose={() => { setShowUserVisible(false); setProfileSrc(''); setUploadSrc(''); loadStudent() }}\n        bodyStyle={{ paddingBottom: 80 }}\n      >\n        {\n          showUserVisible ? (\n            <form style={{ textAlign: \"right\", marginRight: \"23px\" }}>\n              {(uploadSrc || profileSrc) ? <img src={uploadSrc !== '' ? uploadSrc : profileSrc} alt=\"avatar\" style={{ width: '100px', height: '100px' }} /> : uploadButton}\n              <div style={{ textAlign: 'right', marginTop: '5px', marginBottom: '5px' }} >\n                <input style={{ width: '85px', marginRight: '5px' }} id=\"profileImgInput\" type=\"file\" onChange={(e) => handleChange(e)} />\n              </div>\n              <div>\n                {uploadSrc ?\n                  <Button\n                    onClick={async () => { let updates = await saveUpload(selectedUser.idNumber); setSelectedUser(updates) }}\n                    style={{ marginRight: \"7px\" }}\n                    icon={processing ? <LoadingOutlined /> : <UploadOutlined />}\n                  >Save</Button> : ''}\n              </div>\n            </form>\n          ) : ('')\n        }\n        <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Student' isNewData=\"false\" />\n      </Drawer>\n    </Card>\n\n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    parentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterParent\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\n        <UserTable details={parentList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Parent' isNewData=\"false\"/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    teacherList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterTeacher\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <UserTable details={teacherList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Teacher' isNewData=\"false\"/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Space, message } from 'antd';\n\nimport userService from './userService';\n\nconst Settings = () => {\n  let password = '';\n  let newPassword = '';\n  let confirmPassword = '';\n  \n  const changePassword = async () => {\n    if (password === '' || newPassword === '' || confirmPassword === '') {\n      return message.error('All fields are required.', 3);\n    };\n    \n     if (newPassword !== confirmPassword) {\n      return message.error('New password and confirm must match.', 3);\n    };\n    \n    let user = JSON.parse(sessionStorage.user);\n    let body = {\n      idNumber: user.idNumber,\n      currentPassword: password,\n      newPassword: newPassword\n    };\n    try {\n      let response = await userService.updatePassword(body);\n      if (response && response.status === 200) {\n        return message.success('Password updated', 3);\n      };\n    } catch (error) {\n      return message.error('Unable to update password', 3);\n    };\n  };\n  \n  return (\n    <Card className=\"h-82 p-70\" style={{textAlign: 'center'}}>\n     <Row className=\"mt-15\">\n       <Col lg={{ span: 6, offset: 9  }}>\n         <Typography.Title level={3} className=\"ml-15\">Setting</Typography.Title>\n       </Col>\n     </Row>\n      <form onSubmit={() => changePassword()}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 6, offset: 9 }}>\n            <Input placeholder=\"Old Password\" type=\"password\" onChange={(e) => password = e.target.value}/>\n          </Col>\n        </Row>\n        <Row className=\"mt-15\">\n         <Col lg={{ span: 6, offset: 9 }}>\n           <Input placeholder=\"New Password\" type=\"password\" onChange={(e) => newPassword = e.target.value}/>\n         </Col>\n       </Row>\n       <Row className=\"mt-15\">\n         <Col lg={{ span: 6, offset: 9 }}>\n          <Input placeholder=\"Confirm Password\" type=\"password\" onChange={(e) => confirmPassword = e.target.value}/>\n         </Col>\n       </Row>\n       <Row style={{marginTop: '15px'}}>\n        <Col lg={{ span: 6, offset: 9 }}>\n         <Space align=\"center\">\n           <Button  className=\"addUser btn-add\" onClick={()=> changePassword()}>\n            Change Password\n          </Button>\n         </Space>\n        </Col>\n       </Row>\n      </form>\n    </Card>     \n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Table } from 'antd';\n\nconst GradeTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: <b>Subject</b>,\n         dataIndex: 'subject',\n         render (grade) {\n            return {\n             props: {\n                style: { color: grade < 75 ? \"red\" : \"\" }\n              },\n              children: <div>{grade}</div>\n            }\n          }\n      },\n      {\n        title: <b>1st Quarter</b>,\n        dataIndex: 'Quarter1st',\n        render (grade) {\n         return {\n          props: {\n             style: { color: grade < 75 ? \"red\" : \"\" }\n           },\n           children: <div>{grade}</div>\n         }\n       }\n     },\n      {\n         title: <b>2nd Quarter</b>,\n         dataIndex: 'Quarter2nd',\n         render (grade) {\n            return {\n             props: {\n                style: { color: grade < 75 ? \"red\" : \"\" }\n              },\n              children: <div>{grade}</div>\n            }\n          }\n      },\n      {\n         title: <b>3rd Quarter</b>,\n         dataIndex: 'Quarter3rd',\n         render (grade) {\n            return {\n             props: {\n                style: { color: grade < 75 ? \"red\" : \"\" }\n              },\n              children: <div>{grade}</div>\n            }\n          }\n      },\n      {\n        title: <b>4th Quarter</b>,\n        dataIndex: 'Quarter4th',\n        render (grade) {\n         return {\n          props: {\n             style: { color: grade < 75 ? \"red\" : \"\" }\n           },\n           children: <div>{grade}</div>\n         }\n       }\n     },\n     {\n        title: <b>Final Grade</b>,\n        dataIndex: 'FinalGrade',\n        render (grade) {\n         return {\n          props: {\n             style: { color: grade < 75 ? \"red\" : \"\" }\n           },\n           children: <div>{grade}</div>\n         }\n       }\n     },\n     {\n        title: <b>Remarks</b>,\n        dataIndex: 'Remarks',\n        render (text) {\n           return {\n            props: {\n               style: { color: text === 'Failed' ? \"red\" : \"\" }\n             },\n             children: <div>{text}</div>\n           }\n        }\n     }\n                            \n   ];\n\n   return (\n      <Table columns={columns} dataSource={details} pagination={false} />\n   );\n}\n\nexport default GradeTable;","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst UserEditForm = ({ selectedUser }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedUser}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n         }}\n         render={({ values, touched, setFieldValue }) => (\n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n               <Card className=\"p-70\">\n               <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Name\" name=\"name\">\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Section\" name=\"section\">\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n               </Card>\n                <br/>\n                {console.log(values)}\n               \n                <Row gutter={16}>\n\n{/* <Col span={12}>\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n \n   <Col span={12}>\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n   <Col span={12}>\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col> */}\n</Row>\n             \n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default UserEditForm;","import BaseService from '../../baseService';\nclass ClearanceService extends BaseService {\n  constructor() {\n    super('clearance');\n  };\n\n  addUpdateClearance = obj => {\n    return this.axiosInstance.post('/save', obj);\n  };\n\n  getClearance = level => {\n    return this.axiosInstance.get('/level/' + level);\n  };\n}\n\nexport default new ClearanceService();\n","import React, { useState, useEffect } from 'react';\nimport gradesService from './gradesService';\nimport userService from '../user/userService';\nimport advisoryService from '../grade/advisoryService';\nimport { notification } from 'antd';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport AdditionalService from '../user/additionalService';\nimport { Button } from 'antd';\nimport moment from 'moment';\nimport { OBSERVED_VALUES } from '../modelTemplate/observedValues';\nimport ClearanceService from '../clearance/clearanceService';\n\nconst renderUnPaidNotif = (studentObj, isParent = false) => {\n  let person = (isParent) ? `${studentObj.lastName}, ${studentObj.firstName} ${studentObj.middleName}` : 'you';\n  notification.info({\n    message: `Notification`,\n    description:\n      `This is to inform you that ${person} have an unsettled payments.`,\n    placement: 'bottomLeft'\n  });\n};\n\nconst Grade1Action = (initial = { searchRequest: {} }) => {\n  let [studentAdvisor, setStudentAdvisor] = useState({});\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]); //list of grades\n  let [gradeDetails, setGradeDetails] = useState({ list: [] });\n  let [grade1Details, setGrade1Details] = useState({ list: [] });\n  let [grade2Details, setGrade2Details] = useState({ list: [] });\n  let [grade3Details, setGrade3Details] = useState({ list: [] });\n  let [grade4Details, setGrade4Details] = useState({ list: [] });\n  let [grade5Details, setGrade5Details] = useState({ list: [] });\n  let [grade6Details, setGrade6Details] = useState({ list: [] });\n  let [grade7Details, setGrade7Details] = useState({ list: [] });\n  let [grade8Details, setGrade8Details] = useState({ list: [] });\n  let [grade9Details, setGrade9Details] = useState({ list: [] });\n  let [grade10Details, setGrade10Details] = useState({ list: [] });\n  let [advisoryGrades, setAdvisoryGrades] = useState([]);\n\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\n  let [selectedGrade, setSelectedGrade] = useState({}); //student grade record\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\n  let [overAllGrade, setOverAllGrade] = useState({ finalGrade: '', remarks: '' });\n  let [observedValues, setObservedValues] = useState([]);\n  let [showUnpaid, setShowUnpaid] = useState(false);\n\n  const upgradeStudent = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity: \"Upgrade Student\",\n      date: new Date()\n    }\n    auditTrailService.add(auditTrailObj)\n    let ctr = 0;\n    await selectedListOfStudent.map(async student => {\n      setLoading(true)\n      let result = await gradesService.findyById(student.id);\n\n      let userCurrentGrade = (parseInt(result.data.gradeLevel))\n\n\n      if (userCurrentGrade < 10) {\n        let currentUser = result.data\n        let allStudent = await userService.findAllUser();\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n        let currentStudent = result1[0]\n        currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\n        let response = await userService.update(currentStudent)\n\n        currentUser.status = false;\n        let response1 = await gradesService.update(currentUser)\n\n        let gradeObj = {\n          status: true,\n          student: currentUser.student,\n          gradeLevel: (userCurrentGrade + 1).toString(),\n          section: currentUser.student.section,\n          schoolYear: currentStudent.schoolYear,\n          subjects: [{\n            subjectName: \"English\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Filipino\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Science\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Math\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"MAPEH\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Values\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Music\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Art\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"PE\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear: currentUser.schoolYear,\n            subjectName: \"Health\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n            }\n          }]\n        }\n\n        let response2 = gradesService.add(gradeObj)\n\n\n      } else {\n        let currentUser = result.data\n        let allStudent = await userService.findAllUser();\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n        let currentStudent = result1[0]\n        currentStudent.gradeLevel = \"Graduate\"\n        let response = await userService.update(currentStudent)\n\n        currentUser.status = false;\n        let response1 = await gradesService.update(currentUser)\n      }\n      ctr = ctr + 1\n      if (ctr === selectedListOfStudent.length) {\n        setLoading(false)\n        window.location.reload(false)\n      }\n    })\n\n  };\n\n  const editGrade = async (values, isAdvisory = false) => {\n    console.log(values);\n    let result = await gradesService.findyById(values._id);\n    let grade = result.data\n\n    if (values.English) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if (values.English.firstQuarter) {\n        firstQuarter = values.English.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\n      }\n\n      if (values.English.secondQuarter) {\n        secondQuarter = values.English.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\n      }\n\n      if (values.English.thirdQuarter) {\n        thirdQuarter = values.English.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\n      }\n\n      if (values.English.fourthQuarter) {\n        fourthQuarter = values.English.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\n      }\n\n      let newEnglishGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter: secondQuarter,\n        thirdQuarter: thirdQuarter,\n        fourthQuarter: fourthQuarter\n      };\n\n      if (isAdvisory) {\n        grade.subjects[0].subjectGrade = newEnglishGrade;\n        grade.subjects[0].recommendedGrade = {};\n      } else {\n        grade.subjects[0].recommendedGrade = newEnglishGrade;\n      };\n    }\n\n    if (values.Filipino) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if (values.Filipino.firstQuarter) {\n        firstQuarter = values.Filipino.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\n      }\n\n      if (values.Filipino.secondQuarter) {\n        secondQuarter = values.Filipino.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\n      }\n\n      if (values.Filipino.thirdQuarter) {\n        thirdQuarter = values.Filipino.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\n      }\n\n      if (values.Filipino.fourthQuarter) {\n        fourthQuarter = values.Filipino.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\n      }\n\n      let newFilipinoGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter: secondQuarter,\n        thirdQuarter: thirdQuarter,\n        fourthQuarter: fourthQuarter\n      }\n\n      if (isAdvisory) {\n        grade.subjects[1].subjectGrade = newFilipinoGrade;\n        grade.subjects[1].recommendedGrade = {};\n      } else {\n        grade.subjects[1].recommendedGrade = newFilipinoGrade;\n      };\n    }\n\n    if (values.Science) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if (values.Science.firstQuarter) {\n        firstQuarter = values.Science.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\n      }\n\n      if (values.Science.secondQuarter) {\n        secondQuarter = values.Science.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\n      }\n\n      if (values.Science.thirdQuarter) {\n        thirdQuarter = values.Science.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\n      }\n\n      if (values.Science.fourthQuarter) {\n        fourthQuarter = values.Science.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\n      }\n\n      let newScienceGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter: secondQuarter,\n        thirdQuarter: thirdQuarter,\n        fourthQuarter: fourthQuarter\n      };\n\n      if (isAdvisory) {\n        grade.subjects[2].subjectGrade = newScienceGrade;\n        grade.subjects[2].recommendedGrade = {};\n      } else {\n        grade.subjects[2].recommendedGrade = newScienceGrade;\n      };\n    }\n\n    if (values.Math) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if (values.Math.firstQuarter) {\n        firstQuarter = values.Math.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[3].subjectGrade.firstQuarter\n      }\n\n      if (values.Math.secondQuarter) {\n        secondQuarter = values.Math.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\n      }\n\n      if (values.Math.thirdQuarter) {\n        thirdQuarter = values.Math.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\n      }\n\n      if (values.Math.fourthQuarter) {\n        fourthQuarter = values.Math.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\n      }\n\n      let newMathGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter: secondQuarter,\n        thirdQuarter: thirdQuarter,\n        fourthQuarter: fourthQuarter\n      };\n\n      if (isAdvisory) {\n        grade.subjects[3].subjectGrade = newMathGrade;\n        grade.subjects[3].recommendedGrade = {};\n      } else {\n        grade.subjects[3].recommendedGrade = newMathGrade;\n      };\n    }\n\n    // if (values.MAPEH) {\n    //   let firstQuarter = 0;\n    //   let secondQuarter = 0;\n    //   let thirdQuarter = 0;\n    //   let fourthQuarter = 0;\n\n    //   if (values.MAPEH.firstQuarter) {\n    //     firstQuarter = values.MAPEH.firstQuarter\n    //   } else {\n    //     firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\n    //   }\n\n    //   if (values.MAPEH.secondQuarter) {\n    //     secondQuarter = values.MAPEH.secondQuarter\n    //   } else {\n    //     secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\n    //   }\n\n    //   if (values.MAPEH.thirdQuarter) {\n    //     thirdQuarter = values.MAPEH.thirdQuarter\n    //   } else {\n    //     thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\n    //   }\n\n    //   if (values.MAPEH.fourthQuarter) {\n    //     fourthQuarter = values.MAPEH.fourthQuarter\n    //   } else {\n    //     fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\n    //   }\n\n    //   let newMAPEHGrade = {\n    //     firstQuarter: firstQuarter,\n    //     secondQuarter: secondQuarter,\n    //     thirdQuarter: thirdQuarter,\n    //     fourthQuarter: fourthQuarter\n    //   };\n\n    //   if (isAdvisory) {\n    //     grade.subjects[4].subjectGrade = newMAPEHGrade;\n    //     grade.subjects[4].recommendedGrade = {};\n    //   } else {\n    //     grade.subjects[4].recommendedGrade = newMAPEHGrade;\n    //   };\n    // }\n\n    if (values.Values) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if (values.Values.firstQuarter) {\n        firstQuarter = values.Values.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\n      }\n\n      if (values.Values.secondQuarter) {\n        secondQuarter = values.Values.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\n      }\n\n      if (values.Values.thirdQuarter) {\n        thirdQuarter = values.Values.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\n      }\n\n      if (values.Values.fourthQuarter) {\n        fourthQuarter = values.Values.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\n      }\n\n      let newValuesGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter: secondQuarter,\n        thirdQuarter: thirdQuarter,\n        fourthQuarter: fourthQuarter\n      };\n\n      if (isAdvisory) {\n        grade.subjects[5].subjectGrade = newValuesGrade;\n        grade.subjects[5].recommendedGrade = {};\n      } else {\n        grade.subjects[5].recommendedGrade = newValuesGrade;\n      };\n    };\n\n    const subjectDummy = {\n      firstQuarter: 0,\n      secondQuarter: 0,\n      thirdQuarter: 0,\n      fourthQuarter: 0\n    };\n\n    if (values.Music) {\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Music');\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\n      let updatedGrades = constructSubjectGrades(values, 'Music', subjectGrades);\n\n      let newSubject = {\n        schoolYear: grade.subjects[0].schoolYear,\n        subjectName: 'Music',\n        subjectGrade: updatedGrades\n      };\n\n      if (isAdvisory) {\n\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\n          grade.subjects[subjectIndex].recommendedGrade = {};\n        };\n      } else {\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\n        };\n      };\n    };\n\n\n    if (values.Art) {\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Art');\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\n      let updatedGrades = constructSubjectGrades(values, 'Art', subjectGrades);\n\n      let newSubject = {\n        schoolYear: grade.subjects[0].schoolYear,\n        subjectName: 'Art',\n        subjectGrade: updatedGrades\n      };\n\n      if (isAdvisory) {\n\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\n          grade.subjects[subjectIndex].recommendedGrade = {};\n        };\n      } else {\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\n        };\n      };\n    };\n\n    if (values.PE) {\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'PE');\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\n      let updatedGrades = constructSubjectGrades(values, 'PE', subjectGrades);\n\n      let newSubject = {\n        schoolYear: grade.subjects[0].schoolYear,\n        subjectName: 'PE',\n        subjectGrade: updatedGrades\n      };\n\n      if (isAdvisory) {\n\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\n          grade.subjects[subjectIndex].recommendedGrade = {};\n        };\n      } else {\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\n        };\n      };\n    };\n\n    if (values.Health) {\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Health');\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\n      let updatedGrades = constructSubjectGrades(values, 'Health', subjectGrades);\n\n      let newSubject = {\n        schoolYear: grade.subjects[0].schoolYear,\n        subjectName: 'Health',\n        subjectGrade: updatedGrades\n      };\n\n      if (isAdvisory) {\n\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\n          grade.subjects[subjectIndex].recommendedGrade = {};\n        };\n      } else {\n        if (subjectIndex === -1) {\n          grade.subjects.push(newSubject);\n        } else {\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\n        };\n      };\n    };\n\n    let updateResult = await gradesService.update(grade);\n    //add record  to audit trail\n    let loggedDate = new Date().toISOString();\n    let userDetails = {\n      user: JSON.parse(sessionStorage.user),\n      activity: 'Teacher has updated student grades',\n      date: loggedDate\n    };\n    await auditTrailService.add(userDetails);\n    window.location.reload();\n  };\n\n  const constructSubjectGrades = (values, subject = '', subjectGrade) => {\n    let firstQuarter = 0;\n    let secondQuarter = 0;\n    let thirdQuarter = 0;\n    let fourthQuarter = 0;\n\n    if (values[subject].firstQuarter) {\n      firstQuarter = values[subject].firstQuarter\n    } else {\n      firstQuarter = subjectGrade.firstQuarter\n    }\n\n    if (values[subject].secondQuarter) {\n      secondQuarter = values[subject].secondQuarter\n    } else {\n      secondQuarter = subjectGrade.secondQuarter\n    }\n\n    if (values[subject].thirdQuarter) {\n      thirdQuarter = values[subject].thirdQuarter\n    } else {\n      thirdQuarter = subjectGrade.thirdQuarter\n    }\n\n    if (values[subject].fourthQuarter) {\n      fourthQuarter = values[subject].fourthQuarter\n    } else {\n      fourthQuarter = subjectGrade.fourthQuarter\n    };\n\n    let gradesObj = {\n      firstQuarter: firstQuarter,\n      secondQuarter: secondQuarter,\n      thirdQuarter: thirdQuarter,\n      fourthQuarter: fourthQuarter\n    };\n\n    return gradesObj;\n  };\n  const showGrade = () => {\n    setSelectedGrade({\n      schoolYear: \"\",\n      subjects: {},\n      grade: \"\",\n      student: {},\n      gradeLevel: \"\",\n      section: \"\",\n    })\n    setShowGradeVisible(true)\n  };\n\n  const loadGrade = (gradeObj, idNumber, level = '') => {\n    getCurrentGradeUser(idNumber, level)\n    setSelectedGrade({ ...gradeObj });\n    setShowGradeVisible(true);\n  };\n\n  const loadSelectedGrade = async (gradeId) => {\n    let response = await gradesService.findyById(gradeId);\n    setSelectedGrade({ ...response.data });\n    setShowGradeVisible(true);\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const filterCurrentGradeUser = async ({ gradeLevel, studentObj }) => {\n    setLoading(true);\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    let student = (studentObj) ? studentObj : JSON.parse(sessionStorage.user);\n    gradeLevel = (gradeLevel) ? gradeLevel : (studentObj?.gradeLevel) ? studentObj.gradeLevel : student.gradeLevel;\n    result = response.data.filter(user => user.student.idNumber === student.idNumber && user.gradeLevel === gradeLevel);\n\n    //add field for student previous gradeLevel record\n    let gradeRec = [];\n    response.data.map(record => {\n      if (record.student?.idNumber === student.idNumber) {\n        gradeRec.push(record.gradeLevel);\n      };\n    });\n\n    //add field for student previous gradeLevel record\n    student.gradeLevelList = gradeRec; //marker2\n    student.gradeLevel = gradeLevel;\n    setSelectedUser(student);\n    // setSelectedUser(result[0].student);\n    // console.log(result[0].student);\n\n    //hereEdit\n    let unClearedQuarters = [];\n    let clientUser = JSON.parse(sessionStorage.user);\n\n    if (clientUser.role === 'Student' || clientUser.role === 'Parent') {\n      let responseClearances = await ClearanceService.getClearance(gradeLevel);\n      console.log(gradeLevel);\n      if (responseClearances.data) {\n        let clearance = responseClearances.data.students\n          .find(item => item.idNumber === student.idNumber);\n        Object.entries(clearance).forEach(([key, value]) => { if (key.includes('Quarter') && value === 'pending') unClearedQuarters.push(key) });\n      }\n    };\n\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\n      let newArray = result[0].subjects.map((subject) => {\n        return buidSubjectRow(subject, unClearedQuarters);\n      });\n\n      let response = await advisoryService.findAllAdvisory()\n      let result1 = [];\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\n\n      //remove mapeh\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\n      newArray.splice(mapehIndex, 1);\n\n      buildObservedValues(result[0].observedValues);\n      buildOverallRemarks(newArray, unClearedQuarters.length > 0);\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([]);\n    };\n    setLoading(false);\n\n    if (unClearedQuarters.length > 0) {\n      renderUnPaidNotif(student, clientUser.role === 'Parent');\n    };\n  };\n\n  const buildOverallRemarks = async (newArray, forceHide = false) => {\n    let finalGradesholder = [];\n\n    await newArray.map(subject => {\n      if (subject.FinalGrade && subject.FinalGrade !== '') finalGradesholder.push(subject.FinalGrade);\n    });\n\n    if (finalGradesholder.length === newArray.length) {\n      let average = finalGradesholder.reduce((a, b) => a + b, 0) / finalGradesholder.length;\n      let remarks = '';\n\n      if (average >= 75) {\n        remarks = 'Promoted';\n      } else {\n        remarks = 'Failed';\n      };\n\n      setTimeout(() => {\n        setOverAllGrade({\n          finalGrade: !forceHide ? average.toFixed(2) : '',\n          remarks: !forceHide ? remarks : ''\n        });\n      }, 1000);\n    };\n  };\n\n  const buildObservedValues = valuesDatas => {\n    let observedValuesTmp = JSON.parse(JSON.stringify(OBSERVED_VALUES));\n\n    if (valuesDatas) {\n      observedValuesTmp = observedValuesTmp.map(valuesObj => {\n        let newObj = valuesDatas.find(item => item.value === valuesObj.id);\n        if (!newObj) {\n          return valuesObj;\n        } else {\n          valuesObj = Object.assign(valuesObj, newObj.grades);\n          return valuesObj;\n        }\n      });\n    }\n\n    setObservedValues(observedValuesTmp);\n  };\n\n  const currentGradeUser = async () => {\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\n    } else {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\n    }\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student)\n      let newArray = result[0].subjects.map((subject) => {\n        return buidSubjectRow(subject);\n      });\n\n      let response = await advisoryService.findAllAdvisory()\n      let result1 = [];\n      if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\n      } else {\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\n      };\n\n      //remove mapeh\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\n      newArray.splice(mapehIndex, 1);\n\n      // buildOverallRemarks(newArray);\n      buildObservedValues(result[0].observedValues);\n      setStudentAdvisor(result1[0]);\n      //setSelectedUserGrade(newArray); //hereEdit2\n    } else {\n      setSelectedUser({})\n      // setSelectedUserGrade([])\n    };\n\n  };\n\n  /**\n   * @description builds the subject row for the table\n   * @param {Object} subject  \n   * @param {string} hiddenQuarter \n   * @returns updated object with its desired values for showing\n   */\n  const buidSubjectRow = (subject, hiddenQuarters = []) => {\n    let remarks = \"\";\n    let inComplete = false;\n    let recordObj = {\n      firstQuarter: 0,\n      secondQuarter: 0,\n      thirdQuarter: 0,\n      fourthQuarter: 0\n    };\n\n    recordObj = Object.assign(recordObj, subject.subjectGrade);\n    let firstQuarter = (hiddenQuarters.includes('firstQuarter')) ? 0 : recordObj.firstQuarter;\n    let secondQuarter = (hiddenQuarters.includes('secondQuarter')) ? 0 : recordObj.secondQuarter;\n    let thirdQuarter = (hiddenQuarters.includes('thirdQuarter')) ? 0 : recordObj.thirdQuarter;\n    let fourthQuarter = (hiddenQuarters.includes('fourthQuarter')) ? 0 : recordObj.fourthQuarter;\n\n    let finalGrade = (firstQuarter + secondQuarter + thirdQuarter + fourthQuarter) / 4;\n\n    //leave blank all zero grades\n    if (firstQuarter === 0) {\n      firstQuarter = '';\n      inComplete = true;\n    };\n    if (secondQuarter === 0) {\n      secondQuarter = '';\n      inComplete = true;\n    };\n    if (thirdQuarter === 0) {\n      thirdQuarter = '';\n      inComplete = true;\n    };\n    if (fourthQuarter === 0) {\n      fourthQuarter = '';\n      inComplete = true;\n    };\n\n    if (!inComplete && finalGrade >= 75) {\n      remarks = \"Passed\";\n    } else if (!inComplete && finalGrade < 75) {\n      remarks = \"Failed\";\n    } else {\n      remarks = '';\n    };;\n\n    return {\n      key: subject._id,\n      id: subject._id,\n      subject: subject.subjectName,\n      Quarter1st: firstQuarter,\n      Quarter2nd: secondQuarter,\n      Quarter3rd: thirdQuarter,\n      Quarter4th: fourthQuarter,\n      FinalGrade: (!inComplete) ? finalGrade : '',\n      Remarks: remarks\n    }\n  };\n\n  const getCurrentGradeUser = async (idNumber, level = '') => {\n    let response = await gradesService.findAllGrades(level);\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student);\n      let newArray = result[0].subjects.map((subject) => {\n        return buidSubjectRow(subject);\n      });\n\n      //remove mapeh\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\n      newArray.splice(mapehIndex, 1);\n      buildObservedValues(result[0].observedValues);\n      buildOverallRemarks(newArray);\n      setSelectedGradeUser(newArray);\n    } else {\n      setSelectedUser({})\n      setSelectedGradeUser([])\n    };\n\n  }\n\n  const loadGrades = async () => {\n    let finalOffspring = [];\n    let response = await gradesService.findAllGrades();\n    let parent = await userService.findAllUser();\n    let result = parent.data.filter(user => user.parent);\n    let newArray = [];\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\n    await response.data.map((user) => {\n      offspring.map((off) => {\n        if (user.student.idNumber === off.idNumber) {\n          finalOffspring.push(user)\n        }\n      });\n    });\n    newArray = finalOffspring.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.student.firstName,\n        lastName: user.student.lastName,\n        middleName: user.student.middleName,\n        idNumber: user.student.idNumber,\n        contactNumber: user.student.contactNumber,\n        email: user.student.email,\n        section: user.section,\n        gradeLevel: user.gradeLevel,\n        action:\n          <Button onClick={() => loadGrade(user, user.student.idNumber)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\n      }\n    });\n\n    //filter users with its latest grade level\n    let list = [];\n\n    newArray.map(record => {\n      let recordIndex = list.findIndex(item => item?.idNumber === record.idNumber);\n      if (recordIndex === -1) {\n        list.push(record);\n      } else if (recordIndex !== -1) {\n        //replace record if not latest gardeLevel\n        if (list[recordIndex].gradeLevel < record.gradeLevel) {\n          list.splice(recordIndex, 1, record);\n        };\n      }\n    });\n\n    //marker\n    setGradeDetails({\n      list: list\n    });\n\n    filterCurrentGradeUser({ studentObj: (list[0]) ? list[0] : null });//marker2\n  };\n\n  const loadStudentGradesPerLevel = async (level = '') => {\n    let response = await gradesService.findAllGrades(level);\n    let result = response.data.filter(user => user.gradeLevel === level && user.status)\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.student.firstName,\n        lastName: user.student.lastName,\n        middleName: user.student.middleName,\n        idNumber: user.student.idNumber,\n        contactNumber: user.student.contactNumber,\n        email: user.student.email,\n        section: user.student.section,\n        action:\n          <Button onClick={() => {\n            setLoading(true);\n            setTimeout(() => { loadGrade(user, user.student.idNumber, level) }, 3500);\n            setTimeout(() => { setLoading(false); }, 3700);\n          }} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\n      }\n    });\n\n    return newArray;\n  };\n\n  const loadGrades1 = async () => {\n    let newArray = await loadStudentGradesPerLevel('1');\n    setGrade1Details({\n      list: newArray\n    })\n  }\n\n  const loadGrades2 = async () => {\n    let newArray = await loadStudentGradesPerLevel('2');\n    setGrade2Details({\n      list: newArray\n    })\n  };\n\n  const loadGrades3 = async () => {\n    let newArray = await loadStudentGradesPerLevel('3');\n    setGrade3Details({\n      list: newArray\n    });\n  };\n\n  const loadGrades4 = async () => {\n    let newArray = await loadStudentGradesPerLevel('4');\n    setGrade4Details({\n      list: newArray\n    });\n  }\n\n  const loadGrades5 = async () => {\n    let newArray = await loadStudentGradesPerLevel('5');\n    setGrade5Details({\n      list: newArray\n    })\n  }\n\n  const loadGrades6 = async () => {\n    let newArray = await loadStudentGradesPerLevel('6');\n    setGrade6Details({\n      list: newArray\n    })\n  }\n\n  const loadGrades7 = async () => {\n    let newArray = await loadStudentGradesPerLevel('7');\n    setGrade7Details({\n      list: newArray\n    })\n  }\n\n  const loadGrades8 = async () => {\n    let newArray = await loadStudentGradesPerLevel('8');\n    setGrade8Details({\n      list: newArray\n    });\n  }\n\n  const loadGrades9 = async () => {\n    let newArray = await loadStudentGradesPerLevel('9');\n    setGrade9Details({\n      list: newArray\n    })\n  }\n\n  const loadGrades10 = async () => {\n    let newArray = await loadStudentGradesPerLevel('10');\n    setGrade10Details({\n      list: newArray\n    })\n  }\n\n  const loadAdvisoryGrades = async () => {\n    let user = JSON.parse(sessionStorage.user);\n    const userData = {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      middleName: user.middleName\n    };\n\n    try {\n      let advisory = await AdditionalService.getAdvisory(userData);\n\n      if (!advisory) return;\n\n      let response = await gradesService.findAllGrades(advisory.data.gradeLevel);\n      let result = response.data.filter(user => user.gradeLevel === advisory.data.gradeLevel && user.status)\n      let list = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.student.firstName,\n          lastName: user.student.lastName,\n          middleName: user.student.middleName,\n          idNumber: user.student.idNumber,\n          contactNumber: user.student.contactNumber,\n          email: user.student.email,\n          section: user.student.section,\n          action:\n            <Button onClick={() => {\n              setLoading(true);\n              setTimeout(() => { loadGrade(user, user.student.idNumber, advisory.data.gradeLevel) }, 3000);\n              setTimeout(() => { setLoading(false); }, 3700);\n            }} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\n        }\n      })\n\n      setAdvisoryGrades(list);\n    } catch (error) {\n    };\n  };\n\n  const addUpdateObservedValues = async values => {\n    setObservedValues(values);\n    let list = values.map(value => {\n      let valuesObj = {\n        value: value.key,\n        grades: {\n          q1: value.q1,\n          q2: value.q2,\n          q3: value.q3,\n          q4: value.q4\n        }\n      };\n\n      return valuesObj;\n    });\n\n    let paramsObj = {\n      idNumber: selectedGrade.student.idNumber,\n      gradeLevel: selectedGrade.gradeLevel,\n      observedValues: list\n    };\n\n    try {\n      let response = await gradesService.addUpdateObservedValues(paramsObj);\n\n      //add record  to audit trail\n      let loggedDate = new Date().toISOString();\n      let userDetails = {\n        user: JSON.parse(sessionStorage.user),\n        activity: 'Advisor teacher has updated student values grades',\n        date: loggedDate\n      };\n      await auditTrailService.add(userDetails);\n      return response.data;\n    } catch (error) {\n    };\n  };\n\n  useEffect(() => {\n    loadGrades1();\n    loadGrades2();\n    loadGrades3();\n    loadGrades4();\n    loadGrades5();\n    loadGrades6();\n    loadGrades7();\n    loadGrades8();\n    loadGrades9();\n    loadGrades10();\n    loadGrades();\n    currentGradeUser();\n    getListOfTeacher();\n    loadAdvisoryGrades();\n  }, []);\n\n\n  return {\n    loadGrades1,\n    grade2Details,\n    grade3Details,\n    grade4Details,\n    grade5Details,\n    grade6Details,\n    grade7Details,\n    grade8Details,\n    grade9Details,\n    grade10Details,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade1Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    gradeDetails,\n    selectedUserGrade,\n    showAllGradeVisible,\n    setShowAllGradeVisible,\n    selectedUser,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    studentAdvisor,\n    filterCurrentGradeUser,\n    advisoryGrades,\n    overAllGrade,\n    observedValues,\n    setObservedValues,\n    addUpdateObservedValues\n  }\n};\n\nexport default Grade1Action;\n","import React from 'react';\nimport { Table } from 'antd';\n\nconst AttendanceTable = ({ details }) => {\n\n  const columns = [\n    {\n      title: <b></b>,\n      dataIndex: 'tag',\n    },\n    {\n      title: <b>Jun</b>,\n      dataIndex: 'Jun',\n    },\n    {\n      title: <b>Jul</b>,\n      dataIndex: 'Jul',\n    },\n    {\n      title: <b>Aug</b>,\n      dataIndex: 'Aug',\n    },\n    {\n      title: <b>Sep</b>,\n      dataIndex: 'Sep',\n    },\n    {\n      title: <b>Oct</b>,\n      dataIndex: 'Oct',\n    },\n    {\n      title: <b>Nov</b>,\n      dataIndex: 'Nov',\n    },\n    {\n      title: <b>Dec</b>,\n      dataIndex: 'Dec',\n    },\n    {\n      title: <b>Jan</b>,\n      dataIndex: 'Jan',\n    },\n    {\n      title: <b>Feb</b>,\n      dataIndex: 'Feb',\n    },\n    {\n      title: <b>Mar</b>,\n      dataIndex: 'Mar',\n    },\n    {\n      title: <b>Apr</b>,\n      dataIndex: 'Apr',\n    },\n    {\n      title: <b>Total</b>,\n      dataIndex: 'total',\n    }\n  ];\n\n  return (\n    <Table columns={columns} dataSource={details} pagination={false}/>\n  );\n}\n\nexport default AttendanceTable;","import React from 'react';\nimport { Table } from 'antd';\n\nconst CustomTable = ({ details = [], headers = [] }) => {\n  const columns = headers.map(head => {\n    let headerObj = {\n      title: <b>{head.title}</b>,\n      dataIndex: head.field,\n      width: (head.width) ? head.width : '',\n      render(value) {\n        return {\n          props: {\n            style: { color: (head.withCondition) ? head.withCondition(value) : '' }\n          },\n          children: <div>{value}</div>\n        }\n      }\n    };\n\n    return headerObj;\n  });\n\n  return (\n    <Table columns={columns} dataSource={details} pagination={false} />\n  );\n}\n\nexport default CustomTable;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin, notification } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\n\nimport UserForm from './userDetailsForm'\nimport UserTable from './gradeTable'\nimport GradeAction from '../grade/gradeAction'\nimport AdvisorAction from '../grade/advisoryAction'\nimport AttendanceTable from './attendanceTable';\nimport AttendanceAction from './attendanceAction';\nimport ValuesTable from './valuesTable';\nimport CustomTable from '../shared/customTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\n\nconst { Option } = Select;\n\n\nconst EmployeePage = ({ isParent = false }) => {\n\n  let {\n    selectedGrade,\n    gradeDetails, //child or children list\n    selectedUserGrade,\n    selectedUser,\n    studentAdvisor,\n    filterCurrentGradeUser,\n    loading,\n    overAllGrade,\n    observedValues,\n  } = GradeAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n\n  let loadAttendance = async () => {\n    let user = JSON.parse(sessionStorage.user);\n    await getAttendance(user.idNumber);\n  };\n\n  if (attendances.length === 0) loadAttendance();\n\n  const filterChild = async ({idNumber='', gradeLevel=''}) => {\n    let student = (idNumber !=='') ? gradeDetails.list.find(student => student.idNumber === idNumber) : selectedUser;\n    let level = (gradeLevel !=='') ? gradeLevel : student.gradeLevel;\n    await filterCurrentGradeUser({ gradeLevel: level, studentObj: student });\n  };\n\n  const renderChildrenDropdown = () => {\n    return gradeDetails.list.map((child) => {\n      return <Option value={child.idNumber} key={child.idNumber}>\n        {child.firstName + \" \" + child.lastName}\n      </Option>\n    })\n  };\n\n  const renderChildLevels = () => {\n    return selectedUser.gradeLevelList.map((level) => {\n      return <Option value={level} key={level} >{level}</Option>\n    });\n  };\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row>\n          <Col span={24}>\n            <Card className=\"ml-15\" title={\n              <Typography.Title>Student Details</Typography.Title>\n            }>\n              <Row>\n                <Col span={12}>\n                  <p>\n             \n                    <b>Full Name: </b>\n                    {isParent ?\n                      (\n                        <Select\n                          id=\"studentSelect\"\n                          className=\"ml-15\"\n                          placeholder=\"\"\n                          value={selectedUser.idNumber}\n                          onChange={(value) => { filterChild({idNumber: value}) }}\n                          style={{ width: '300px' }}>\n                          { renderChildrenDropdown()}\n                        </Select>\n                      ) :\n                      <>\n                        {selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName : null}\n                      </>\n                    }\n                  </p>\n                  <p>\n                    <b>Grade Level: </b>{selectedUser.gradeLevel ? selectedUser.gradeLevel : JSON.parse(sessionStorage.user).gradeLevel}\n                  </p>\n                  <p>\n                    <b>Section: </b>{selectedUser ? selectedUser.section : null}\n                  </p>\n                </Col>\n                <Col span={12}>\n                  <p>\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName : null}\n                  </p>\n                  <p>\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber : null}\n                  </p>\n                  <b>Yr./Lvl: </b>\n                  <Select \n                    className=\"ml-15\"\n                    value={selectedUser.gradeLevel}\n                    style={{ width: '70px' }}\n                    onChange={(value) => filterCurrentGradeUser({studentObj: selectedUser, gradeLevel: value })}>\n                    { selectedUser.gradeLevelList ? renderChildLevels() : ''}\n                  </Select>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col lg={{ span: \"24\" }}>\n            <UserTable details={selectedUserGrade ? selectedUserGrade : []} />\n          </Col>\n          <Row>\n            <Typography.Title level={5}\n              style={{ marginLeft: '20px', paddingBottom: '50px', marginTop: '15px', textAlign: 'left' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Col lg={{ span: \"24\" }}>\n            <Card className=\"ml-15\" title={\n              <Typography.Title>Attendance Record</Typography.Title>\n            }>\n              <AttendanceTable details={attendances}></AttendanceTable>\n            </Card>\n          </Col>\n          <Col lg={{ span: \"24\" }}>\n            <Card className=\"ml-15\" title={\n              <Typography.Title>Learner's Observed Values</Typography.Title>\n            }>\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Card>\n          </Col>\n          <Col lg={{ span: \"24\" }} className=\"mt-15\">\n            <Row>\n              <Col lg={{ span: \"12\" }}>\n                <Card className=\"ml-15\">\n                  <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n                </Card>\n              </Col>\n              <Col lg={{ span: \"12\" }}>\n                <Card className=\"ml-15\">\n                  <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Spin>\n    </Card >\n  );\n}\n\nexport default EmployeePage;\n\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card, Collapse } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\nconst { Panel } = Collapse;\n\nconst Grade1EditForm = ({ upgradeStudent, add, update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel, isAdviser = false }) => {\n\n  let [loading, setLoading] = useState(false);\n  const userRole = JSON.parse(sessionStorage.user).role;\n\n  let lowestGrade = 50;\n  const hasUpdate = (subjectName = '', quarter = '') => {\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\n\n    if (subject && subject.recommendedGrade && subject.recommendedGrade[quarter] && subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter]) return true;\n\n    return false;\n  };\n\n  let updatesHolder = {};\n  let mapehObj = {\n    MAPEH1: 0,\n    MAPEH2: 0,\n    MAPEH3: 0,\n    MAPEH4: 0\n  };\n\n  const autoFillGrade = (subjectName = '', quarter = '', field = '', isDefault = false, quarterNum = 0) => {\n    let activeQuarter = sessionStorage.quarter;\n    let index = selectedGrade.subjects.findIndex(subject => subject.subjectName === subjectName);\n    let value = (selectedGrade.subjects[index] && selectedGrade.subjects[index].recommendedGrade) ? selectedGrade.subjects[index].recommendedGrade[quarter] : null;\n    let dafaultVal = (selectedGrade.subjects[index]) ? selectedGrade.subjects[index].subjectGrade[quarter] : lowestGrade;\n    dafaultVal = (dafaultVal && dafaultVal >= 50) ? dafaultVal : (activeQuarter === quarterNum) ? lowestGrade : 0;\n    value = (isDefault) ? dafaultVal : value;\n    let holder = {\n      [field]: value\n    };\n    updatesHolder = Object.assign(updatesHolder, holder);\n    return value;\n  };\n\n  //used to get the confirmed grades\n  const getGrade = (subjectName = '', quarter = '') => {\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\n    if (subject) {\n      return subject.subjectGrade[quarter];\n    } else {\n      return '0';\n    };\n  };\n\n  // const getMAPEHGrades = (quarter) => {\n  //   let q1 = document.getElementbyId('Music' + quarter).value;\n  //   let q2 = document.getElementbyId('Art' + quarter).value;\n  //   let q3 = document.getElementbyId('PE' + quarter).value;\n  //   let q4 = document.getElementbyId('Health' + quarter).value;\n  //   let average = (q1 + q2 + q3 + q4) / 4;\n  //   let key = 'MAPEH' + quarter;\n  //   mapehObj[key] = average;\n  // };\n\n  return (\n    <Formik\n      initialValues={selectedGrade}\n      enableReinitialize={true}\n      onSubmit={async inputValues => {\n\n        let values = {};\n        values = Object.assign(values, updatesHolder);\n        values = Object.assign(values, inputValues);\n\n        let newValues = {\n          _id: values._id\n        };\n        let English = {};\n        let Filipino = {};\n        let Science = {};\n        let Math = {};\n        let MAPEH = {};\n        let Values = {};\n        let Music = {};\n        let Art = {};\n        let PE = {};\n        let Health = {};\n\n        if (values.English1 || values.English2 || values.English3 || values.English4) {\n          English = {\n            firstQuarter: values.English1,\n            secondQuarter: values.English2,\n            thirdQuarter: values.English3,\n            fourthQuarter: values.English4\n          }\n          newValues.English = English;\n        }\n        if (values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\n          Filipino = {\n            firstQuarter: values.Filipino1,\n            secondQuarter: values.Filipino2,\n            thirdQuarter: values.Filipino3,\n            fourthQuarter: values.Filipino4\n          }\n          newValues.Filipino = Filipino;\n        }\n        if (values.Science1 || values.Science2 || values.Science3 || values.Science4) {\n          Science = {\n            firstQuarter: values.Science1,\n            secondQuarter: values.Science2,\n            thirdQuarter: values.Science3,\n            fourthQuarter: values.Science4\n          }\n          newValues.Science = Science;\n        }\n        if (values.Math1 || values.Math2 || values.Math3 || values.Math4) {\n          Math = {\n            firstQuarter: values.Math1,\n            secondQuarter: values.Math2,\n            thirdQuarter: values.Math3,\n            fourthQuarter: values.Math4\n          }\n          newValues.Math = Math;\n        }\n        if (values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\n          MAPEH = {\n            firstQuarter: values.MAPEH1,\n            secondQuarter: values.MAPEH2,\n            thirdQuarter: values.MAPEH3,\n            fourthQuarter: values.MAPEH4\n          }\n          newValues.MAPEH = MAPEH;\n        }\n        if (values.Values1 || values.Values2 || values.Values3 || values.Values4) {\n          Values = {\n            firstQuarter: values.Values1,\n            secondQuarter: values.Values2,\n            thirdQuarter: values.Values3,\n            fourthQuarter: values.Values4\n          }\n          newValues.Values = Values;\n        };\n\n        if (values.Music1 || values.Music2 || values.Music3 || values.Music4) {\n          Music = {\n            firstQuarter: values.Music1,\n            secondQuarter: values.Music2,\n            thirdQuarter: values.Music3,\n            fourthQuarter: values.Music4\n          }\n          newValues.Music = Music;\n        };\n\n        if (values.Art1 || values.Art2 || values.Art3 || values.Art4) {\n          Art = {\n            firstQuarter: values.Art1,\n            secondQuarter: values.Art2,\n            thirdQuarter: values.Art3,\n            fourthQuarter: values.Art4\n          }\n          newValues.Art = Art;\n        };\n\n        if (values.PE1 || values.PE2 || values.PE3 || values.PE4) {\n          PE = {\n            firstQuarter: values.PE1,\n            secondQuarter: values.PE2,\n            thirdQuarter: values.PE3,\n            fourthQuarter: values.PE4\n          }\n          newValues.PE = PE;\n        };\n\n        if (values.Health1 || values.Health2 || values.Health3 || values.Health4) {\n          Health = {\n            firstQuarter: values.Health1,\n            secondQuarter: values.Health2,\n            thirdQuarter: values.Health3,\n            fourthQuarter: values.Health4\n          }\n          newValues.Health = Health;\n        };\n        update(newValues, isAdviser);\n      }}\n      render={({ values, touched, setFieldValue }) => (\n\n        <Spin spinning={loading} delay={500}>\n          <Form className=\"p-30\" >\n            <Row gutter={16}>\n              <Col span={16}>\n                <Form.Item label=\"ID Number\" name=\"idNumber\">\n                  <Input disabled={true} value={values.student.idNumber} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={16}>\n                <Form.Item label=\"Name\" name=\"name\">\n                  <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={16}>\n                <Form.Item label=\"School Year\" name=\"schoolYear\">\n                  <Input disabled={true} name=\"schoolYear\" />\n                </Form.Item>\n              </Col>\n            </Row>\n            <>\n              <Row gutter={16}>\n                {(isAdviser ||\n                  selectedTeacherAssignedGrade &&\n                  selectedTeacherAssignedGrade.subjects &&\n                  selectedTeacherAssignedGrade.subjects != undefined &&\n                  selectedTeacherAssignedGrade.subjects[0] &&\n                  selectedTeacherAssignedGrade.subjects[0].teacher &&\n                  selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ?\n                  <Col span={12}>\n                    <Card title=\"English\" disabled={true} style={{ width: 300 }}>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"1st Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('English', 'firstQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                              name=\"English1\"\n                              defaultValue={hasUpdate('English', 'firstQuarter') ?\n                                autoFillGrade('English', 'firstQuarter', 'English1') :\n                                autoFillGrade('English', 'firstQuarter', 'English1', true, '1')}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"2nd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('English', 'secondQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                              name=\"English2\"\n                              defaultValue={hasUpdate('English', 'secondQuarter') ?\n                                autoFillGrade('English', 'secondQuarter', 'English2') :\n                                autoFillGrade('English', 'secondQuarter', 'English2', true, '2')} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"3rd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('English', 'thirdQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                              name=\"English3\"\n                              defaultValue={hasUpdate('English', 'thirdQuarter') ?\n                                autoFillGrade('English', 'thirdQuarter', 'English3') :\n                                autoFillGrade('English', 'thirdQuarter', 'English3', true, '3')} />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"4th Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('English', 'fourthQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                              name=\"English4\"\n                              defaultValue={hasUpdate('English', 'fourthQuarter') ?\n                                autoFillGrade('English', 'fourthQuarter', 'English4') :\n                                autoFillGrade('English', 'fourthQuarter', 'English4', true, '4')} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n                  </Col> :\n                  null}\n                {(isAdviser ||\n                  selectedTeacherAssignedGrade.subjects[1] &&\n                  selectedTeacherAssignedGrade.subjects[1].teacher &&\n                  selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ?\n                  <Col span={12}>\n                    <Card title=\"Filipino\" disabled={true} style={{ width: 300 }}>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"1st Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Filipino', 'firstQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                              name=\"Filipino1\"\n                              defaultValue={hasUpdate('Filipino', 'firstQuarter') ?\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1') :\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1', true, '1')}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"2nd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Filipino', 'secondQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                              name=\"Filipino2\"\n                              defaultValue={hasUpdate('Filipino', 'secondQuarter') ?\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2') :\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2', true, '2')}\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"3rd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Filipino', 'thirdQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                              name=\"Filipino3\"\n                              defaultValue={hasUpdate('Filipino', 'thirdQuarter') ?\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3') :\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3', true, '3')}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"4th Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Filipino', 'fourthQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                              name=\"Filipino4\"\n                              defaultValue={hasUpdate('Filipino', 'fourthQuarter') ?\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4') :\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4', true, '4')}\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n\n                  </Col>\n                  : null}\n\n              </Row>\n              <Row gutter={16}>\n                {(isAdviser ||\n                  selectedTeacherAssignedGrade &&\n                  selectedTeacherAssignedGrade.subjects &&\n                  selectedTeacherAssignedGrade.subjects != undefined &&\n                  selectedTeacherAssignedGrade.subjects.length !== 0 &&\n                  selectedTeacherAssignedGrade.subjects[2] &&\n                  selectedTeacherAssignedGrade.subjects[2] &&\n                  selectedTeacherAssignedGrade.subjects[2].teacher &&\n                  selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ?\n                  <Col span={12}>\n                    <Card title=\"Science\" disabled={true} style={{ width: 300 }}>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"1st Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Science', 'firstQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                              name=\"Science1\"\n                              defaultValue={hasUpdate('Science', 'firstQuarter') ?\n                                autoFillGrade('Science', 'firstQuarter', 'Science1') :\n                                autoFillGrade('Science', 'firstQuarter', 'Science1', true, '1')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"2nd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Science', 'secondQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                              name=\"Science2\"\n                              defaultValue={hasUpdate('Science', 'secondQuarter') ?\n                                autoFillGrade('Science', 'secondQuarter', 'Science2') :\n                                autoFillGrade('Science', 'secondQuarter', 'Science2', true, '2')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"3rd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Science', 'thirdQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                              name=\"Science3\"\n                              defaultValue={hasUpdate('Science', 'thirdQuarter') ?\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3') :\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3', true, '3')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"4th Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Science', 'fourthQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                              name=\"Science4\"\n                              defaultValue={hasUpdate('Science', 'fourthQuarter') ?\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4') :\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4', true, '4')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n                  </Col> :\n                  null}\n                {(isAdviser ||\n                  selectedTeacherAssignedGrade.subjects[3] &&\n                  selectedTeacherAssignedGrade.subjects[3].teacher &&\n                  selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ?\n                  <Col span={12}>\n                    <Card title=\"Math\" disabled={true} style={{ width: 300 }}>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"1st Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Math', 'firstQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                              name=\"Math1\"\n                              defaultValue={hasUpdate('Math', 'firstQuarter') ?\n                                autoFillGrade('Math', 'firstQuarter', 'Math1') :\n                                autoFillGrade('Math', 'firstQuarter', 'Math1', true, '1')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"2nd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Math', 'secondQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                              name=\"Math2\"\n                              defaultValue={hasUpdate('Math', 'secondQuarter') ?\n                                autoFillGrade('Math', 'secondQuarter', 'Math2') :\n                                autoFillGrade('Math', 'secondQuarter', 'Math2', true, '2')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"3rd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Math', 'thirdQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                              name=\"Math3\"\n                              defaultValue={hasUpdate('Math', 'thirdQuarter') ?\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3') :\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3', true, '3')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"4th Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Math', 'fourthQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                              name=\"Math4\"\n                              defaultValue={hasUpdate('Math', 'fourthQuarter') ?\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4') :\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4', true, 4)\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n                  </Col>\n                  : null}\n\n              </Row>\n              <Row gutter={16}>\n                {/* {(isAdviser ||\n                  selectedTeacherAssignedGrade.subjects[4] &&\n                  selectedTeacherAssignedGrade.subjects[4].teacher &&\n                  selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ?\n                  <Col span={12}>\n                    <Card title=\"MAPEH\" disabled={true} style={{ width: 300 }}>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"1st Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('MAPEH', 'firstQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\n                              name=\"MAPEH1\"\n                              defaultValue={hasUpdate('MAPEH', 'firstQuarter') ?\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1') :\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1', true, '1')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"2nd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('MAPEH', 'secondQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\n                              name=\"MAPEH2\"\n                              defaultValue={hasUpdate('MAPEH', 'secondQuarter') ?\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2') :\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2', true, '2')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"3rd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('MAPEH', 'thirdQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\n                              name=\"MAPEH3\"\n                              defaultValue={hasUpdate('MAPEH', 'thirdQuarter') ?\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3') :\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3', true, '3')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"4th Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('MAPEH', 'fourthQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\n                              name=\"MAPEH4\"\n                              defaultValue={hasUpdate('MAPEH', 'fourthQuarter') ?\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4') :\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4', true, '4')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n                  </Col> :\n                  null} */}\n                {(isAdviser ||\n                  selectedTeacherAssignedGrade.subjects[5] &&\n                  selectedTeacherAssignedGrade.subjects[5].teacher &&\n                  selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ?\n                  <Col span={12}>\n                    <Card title=\"Values\" disabled={true} style={{ width: 300 }}>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"1st Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Values', 'firstQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                              name=\"Values1\"\n                              defaultValue={hasUpdate('Values', 'firstQuarter') ?\n                                autoFillGrade('Values', 'firstQuarter', 'Values1') :\n                                autoFillGrade('Values', 'firstQuarter', 'Values1', true, '1')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"2nd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Values', 'secondQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                              name=\"Values2\"\n                              defaultValue={hasUpdate('Values', 'secondQuarter') ?\n                                autoFillGrade('Values', 'secondQuarter', 'Values2') :\n                                autoFillGrade('Values', 'secondQuarter', 'Values2', true, '2')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={12}>\n                          <Form.Item label=\"3rd Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Values', 'thirdQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                              name=\"Values3\"\n                              defaultValue={hasUpdate('Values', 'thirdQuarter') ?\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3') :\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '3')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                          <Form.Item label=\"4th Q\" name=\"values\">\n                            <Input\n                              style={{ border: hasUpdate('Values', 'fourthQuarter') ? '1px solid red' : '' }}\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                              name=\"Values4\"\n                              defaultValue={hasUpdate('Values', 'fourthQuarter') ?\n                                autoFillGrade('Values', 'fourthQuarter', 'Values4') :\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '4')\n                              }\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Card>\n                  </Col>\n                  : null}\n\n              </Row>\n              {/*============================================================================ */}\n              {(isAdviser ||\n                selectedTeacherAssignedGrade.subjects[4] &&\n                selectedTeacherAssignedGrade.subjects[4].teacher &&\n                selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                ? (\n                  <React.Fragment>\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <Card title=\"Music\" disabled={true} style={{ width: 300 }}>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"1st Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Music', 'firstQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                                  name=\"Music1\"\n                                  defaultValue={hasUpdate('Music', 'firstQuarter') ?\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1') :\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1', true, '1')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"2nd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Music', 'secondQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                                  name=\"Music2\"\n                                  defaultValue={hasUpdate('Music', 'secondQuarter') ?\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2') :\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2', true, '2')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"3rd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Music', 'thirdQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                                  name=\"Music3\"\n                                  defaultValue={hasUpdate('Music', 'thirdQuarter') ?\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3') :\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3', true, '3')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"4th Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Music', 'fourthQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                                  name=\"Music4\"\n                                  defaultValue={hasUpdate('Music', 'fourthQuarter') ?\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4') :\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4', true, '4')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                        </Card>\n                      </Col>\n                      <Col span={12}>\n                        <Card title=\"Art\" disabled={true} style={{ width: 300 }}>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"1st Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Art', 'firstQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                                  name=\"Art1\"\n                                  defaultValue={hasUpdate('Art', 'firstQuarter') ?\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1') :\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1', true, '1')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"2nd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Art', 'secondQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                                  name=\"Art2\"\n                                  defaultValue={hasUpdate('Art', 'secondQuarter') ?\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2') :\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2', true, '2')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"3rd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Art', 'thirdQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                                  name=\"Art3\"\n                                  defaultValue={hasUpdate('Art', 'thirdQuarter') ?\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3') :\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3', true, '3')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"4th Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Art', 'fourthQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                                  name=\"Art4\"\n                                  defaultValue={hasUpdate('Art', 'fourthQuarter') ?\n                                    autoFillGrade('Art', 'fourthQuarter', 'Art4') :\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art4', true, '4')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                        </Card>\n                      </Col>\n                    </Row>\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <Card title=\"PE\" disabled={true} style={{ width: 300 }}>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"1st Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('PE', 'firstQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                                  name=\"PE1\"\n                                  defaultValue={hasUpdate('PE', 'firstQuarter') ?\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1') :\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1', true, '1')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"2nd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('PE', 'secondQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                                  name=\"PE2\"\n                                  defaultValue={hasUpdate('PE', 'secondQuarter') ?\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2') :\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2', true, '2')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"3rd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('PE', 'thirdQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                                  name=\"PE3\"\n                                  defaultValue={hasUpdate('PE', 'thirdQuarter') ?\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3') :\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3', true, '3')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"4th Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('PE', 'fourthQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                                  name=\"PE4\"\n                                  defaultValue={hasUpdate('PE', 'fourthQuarter') ?\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4') :\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4', true, '4')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                        </Card>\n                      </Col>\n                      <Col span={12}>\n                        <Card title=\"Health\" disabled={true} style={{ width: 300 }}>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"1st Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Health', 'firstQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\n                                  name=\"Health1\"\n                                  defaultValue={hasUpdate('Health', 'firstQuarter') ?\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1') :\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1', true, '1')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"2nd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Health', 'secondQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\n                                  name=\"Health2\"\n                                  defaultValue={hasUpdate('Health', 'secondQuarter') ?\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2') :\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2', true, '2')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={16}>\n                            <Col span={12}>\n                              <Form.Item label=\"3rd Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Health', 'thirdQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\n                                  name=\"Health3\"\n                                  defaultValue={hasUpdate('Health', 'thirdQuarter') ?\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3') :\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3', true, '3')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                              <Form.Item label=\"4th Q\" name=\"values\">\n                                <Input\n                                  style={{ border: hasUpdate('Health', 'fourthQuarter') ? '1px solid red' : '' }}\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\n                                  name=\"Health4\"\n                                  defaultValue={hasUpdate('Health', 'fourthQuarter') ?\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4') :\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4', true, '4')\n                                  }\n                                />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </React.Fragment>\n                ) : ('')}\n              {/*============================================================================ */}\n            </>\n            {userRole === 'Teacher' ? (\n              <Button className=\"btn-save\" htmlType=\"submit\">\n                <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\n              </Button>\n            ) : ('')}\n          </Form>\n        </Spin>\n      )}\n    />\n\n  );\n}\n\nexport default Grade1EditForm;\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={{}}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            add(values, gradeLevel) \n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"English\" name=\"english\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\n                  {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                  \n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Filipino\" name=\"filipino\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"Science\" name=\"science\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Math\" name=\"math\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Values\" name=\"values\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default TeacherForm;","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled, DeleteOutlined } from '@ant-design/icons';\nimport AdvisorAction from './advisoryAction';\n\nconst { Option } = Select;\n\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\n  let {\n    deleteAdvisory\n  } = AdvisorAction({});\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={{}}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            add(values, gradeLevel)\n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n         <Row gutter={16}>\n         <Col span={24}>\n            <Form.Item label=\"Advisor\" name=\"advisor\">\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\n                  {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                  \n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n                 { selectedTeacherAssgined ? (\n                    <Button type=\"danger\" style={{ marginLeft: '10px' }} ghost htmlType=\"button\" onClick={() => deleteAdvisory(selectedTeacherAssgined._id)}>\n                      <DeleteOutlined /> Remove Advisor\n                    </Button>\n                  ) : ('') }\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default TeacherForm;\n","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './custom.css';\nimport { Table, Popconfirm, Form, Typography, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const renderMarkings = (list=[]) => {\n    return list.map((mark) => {\n      return <Option value={mark} key={mark} >{mark}</Option>\n    });\n  };\n  const inputNode = (list=[]) => {\n    return (\n      <Select style={{ minWidth: \"65.8px\", maxWidth: \"150px\" }}>\n        {renderMarkings(list)};\n      </Select>\n    )\n  };\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n        >\n          {inputNode(record?.dropdownList)}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst EditableTable = ({ details = [], headers = [], setData }) => {\n  const [form] = Form.useForm();\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      q1: '',\n      q2: '',\n      q3: '',\n      q4: '',\n      ...record,\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...details];\n      const index = newData.findIndex((item) => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        await setData(newData);\n\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        await setData(newData);\n\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const operationColumn = {\n    title: 'operation',\n    dataIndex: 'operation',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? (\n        <span>\n          <a\n            href=\"javascript:;\"\n            onClick={() => save(record.key)}\n            style={{\n              marginRight: 8,\n            }}\n          >\n            Save\n          </a>\n          <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n            <a>Cancel</a>\n          </Popconfirm>\n        </span>\n      ) : (\n        <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n          Edit\n        </Typography.Link>\n      );\n    },\n  };\n\n  const columns = headers.concat([operationColumn]);\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    };\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n        style: { color: (col.withCondition) ? col.withCondition(record[col.dataIndex]) : '' }\n      }),\n    };\n  });\n  return (\n    <Form form={form} component={false}>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={details}\n        columns={mergedColumns}\n        rowClassName=\"editable-row\"\n        pagination={false}\n      />\n    </Form>\n  );\n};\n\nexport default EditableTable;","import React from 'react';\nimport { Table } from 'antd';\n\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\n\n   const columns = [\n      {\n         title: <b>Id Number</b>,\n         dataIndex: 'idNumber',\n      },\n      {\n         title: <b>First Name</b>,\n         dataIndex: 'firstName',\n      },\n      {\n         title: <b>Middle Name</b>,\n         dataIndex: 'middleName',\n      },\n      {\n         title: <b>Last Name</b>,\n         dataIndex: 'lastName',\n      }, \n      {\n        title: <b>Contact Number</b>,\n        dataIndex: 'contactNumber',\n      },  \n      {\n        title: <b>Email</b>,\n        dataIndex: 'email',\n      },   \n      {\n        title: <b>Section</b>,\n        dataIndex: 'section',\n      },   \n      {\n        title: <b>Action</b>,\n        dataIndex: 'action',\n      },                            \n   ];\n\n   const rowUserSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n         setSelectedListOfStudent(selectedRows)\n      }\n  };\n\n\n   return (\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default GradeTable;","import BaseService from '../../baseService';\nclass TeacherService extends BaseService {\n  constructor() {\n    super('teacher');\n  }\n\n  add = teacherObj => {\n    return this.axiosInstance.post('/create-teacher', teacherObj);\n  };\n\n  update = teacherObj => {\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\n  };\n  \n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-teacher/' + id);\n  };\n\n  findAllTeacher = () => {\n    return this.axiosInstance.get('/');\n  };\n\n}\n\nexport default new TeacherService();\n","const G_1_To_3 = [\n  'Mother Tongue',\n  'Filipino',\n  'English',\n  'Mathematics',\n  'Science',\n  'Araling Panlipunan',\n  'Music',\n  'Art',\n  'PE',\n  'Health'\n];\n\nconst G_4_To_10 = [\n  'Filipino',\n  'English',\n  'Mathematics',\n  'Science',\n  'Araling Panlipunan',\n  'TLE',\n  'Music',\n  'Art',\n  'PE',\n  'Health'\n];\n\nlet quartersObj = {\n  firstQuarter: 0,\n  secondQuarter: 0,\n  thirdQuarter: 0,\n  fourthQuarter: 0\n};\n\nconst buildLevelSubjects = (levelNum, schoolYear) => {\n  let subjectList = (levelNum > 3) ? G_4_To_10 : G_1_To_3;\n\n  let subjects = subjectList.map(topic => {\n    return {\n      subjectName: topic,\n      subjectGrade: quartersObj,\n      recommendedGrade: {}\n    };\n  });\n\n  return subjects;\n};\n\nconst getSubjects = levelNum => {\n  let subjectList = (levelNum > 3) ? G_4_To_10 : G_1_To_3;\n  return subjectList;\n};\n\nexport default { buildLevelSubjects,  getSubjects};\n","import React, { useState, useEffect } from 'react';\nimport userService from '../user/userService';\nimport teacherService from '../grade/teacherService';\nimport Subjects from '../modelTemplate/subjects';\nconst TeacherAction = (initial = { searchRequest: {} }) => {\n  let [selectedTeacher, setSelectedTeacher] = useState([]); //list of all teachers\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState([]); //subject assigned teachers\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\n\n  const add = async (values, gradeLevel) => {\n    let English = await userService.findyById(values.english)\n    let Filipino = await userService.findyById(values.filipino)\n    let Science = await userService.findyById(values.science)\n    let Math = await userService.findyById(values.math)\n    let Values = await userService.findyById(values.values)\n    let Mapeh = await userService.findyById(values.mapeh)\n    let finalAddValue = {\n        gradeLevel : gradeLevel,\n        subjects: [{\n            subjectName: \"English\",\n            teacher: English.data\n            },\n            {\n            subjectName: \"Filipino\",\n            teacher: Filipino.data\n            },\n            {\n            subjectName: \"Science\",\n            teacher: Science.data\n            },   \n            {\n            subjectName: \"Math\",\n            teacher: Math.data\n            },   \n            {\n            subjectName: \"Values\",\n            teacher: Values.data\n            },     \n            {\n            subjectName: \"Mapeh\",\n            teacher: Mapeh.data\n            },                                                    \n        ]\n    }\n    let response = teacherService.add(finalAddValue)\n    window.location.reload()\n  };\n\n  const updateSubjectTeacher = async (teacherList, level) => {\n    console.log(teacherList);\n    //adding a filter to cleanup data(removal of unwanted subjects) prior saving;\n    let list = Subjects.getSubjects(level);\n    let updatedList = [];\n    teacherList.map(topic => {\n      if(list.includes(topic.subjectName)) {\n        updatedList.push(topic);\n      };\n    });\n\n    //proceed to saving\n    let params = {\n      gradeLevel: level.toString(),\n      subjects: updatedList\n    };\n\n    await teacherService.add(params)\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const getListOfAssignedTeacherGrade1 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\n    setSelectedTeacherAssignedGrade1(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade2 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\n    setSelectedTeacherAssignedGrade2(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade3 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\n    setSelectedTeacherAssignedGrade3(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade4 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\n    setSelectedTeacherAssignedGrade4(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade5 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\n    setSelectedTeacherAssignedGrade5(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade6 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\n    setSelectedTeacherAssignedGrade6(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade7 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\n    setSelectedTeacherAssignedGrade7(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade8 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\n    setSelectedTeacherAssignedGrade8(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade9 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\n    setSelectedTeacherAssignedGrade9(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade10 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\n    setSelectedTeacherAssignedGrade10(result[0])\n  };\n\n  const hideTeacher = async () => {\n    setShowTeacherVisible(false)\n  };\n\n  const showTeacher = async (gradeLevel) => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\n    if(result.length >= 1){\n        setSelectedTeacherAssgined(result[0].subjects)\n    } else {\n        setSelectedTeacherAssgined({})\n    }\n    setShowTeacherVisible(true)\n  };\n\n  useEffect(() => {\n    getListOfTeacher();\n    getListOfAssignedTeacherGrade1();\n    getListOfAssignedTeacherGrade2();\n    getListOfAssignedTeacherGrade3();\n    getListOfAssignedTeacherGrade4();\n    getListOfAssignedTeacherGrade5();\n    getListOfAssignedTeacherGrade6();\n    getListOfAssignedTeacherGrade7();\n    getListOfAssignedTeacherGrade8();\n    getListOfAssignedTeacherGrade9();\n    getListOfAssignedTeacherGrade10();\n  }, []);\n\n\n  return {\n    selectedTeacher,\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade1,\n    selectedTeacherAssignedGrade2,\n    selectedTeacherAssignedGrade3,\n    selectedTeacherAssignedGrade4,\n    selectedTeacherAssignedGrade5,\n    selectedTeacherAssignedGrade6,\n    selectedTeacherAssignedGrade7,\n    selectedTeacherAssignedGrade8,\n    selectedTeacherAssignedGrade9,\n    selectedTeacherAssignedGrade10,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  }\n};\n\nexport default TeacherAction;\n","import { useState, useEffect } from 'react';\nimport Subjects from '../modelTemplate/subjects';\nimport gradesService from './gradesService';\nimport auditTrailService from '../auditTrail/auditTrailService';\n\nconst GradeInputAction = ({level= 0, grades=[], record={}, isAdviser=false, teacherSubjects=[]}) => {\n  let [updatedInputs, setUpdatedInputs] = useState([]);\n\n  const setInput = async (value='', subject='', quarter='', isAdviser=false) => {\n    let numVal = Number(value);\n    let updatedInputClone = JSON.parse(JSON.stringify(updatedInputs));\n    let targetIndex = updatedInputClone.findIndex(topic => topic.subjectName === subject);\n    let topicObj = updatedInputClone[targetIndex];\n\n    if(isAdviser) {\n      topicObj.subjectGrade[quarter] = numVal;\n      topicObj.recommendedGrade[quarter] = numVal;\n    } else {\n      topicObj.recommendedGrade[quarter] = numVal;\n    };\n\n    updatedInputClone.splice(targetIndex, 1, topicObj);\n    await setUpdatedInputs(updatedInputClone);\n  };\n\n  const updateGrades = async(isAdviser=false) => {\n    let updatedSubjectsRec = [];\n    //remove inputs in recommended if advisor\n    if (isAdviser) {\n      updatedInputs.map(topic => {\n        topic.subjectGrade = topic.recommendedGrade;\n        topic.recommendedGrade = {};\n        updatedSubjectsRec.push(topic);\n      });\n    };\n\n    record.subjects = isAdviser ? updatedSubjectsRec : updatedInputs;\n\n    await gradesService.update(record);\n    //add record  to audit trail\n    let loggedDate = new Date().toISOString();\n    let userDetails = {\n      user: JSON.parse(sessionStorage.user),\n      activity: 'Teacher has updated student grades',\n      date: loggedDate\n    };\n    await auditTrailService.add(userDetails);\n    window.location.reload();\n  };\n\n  const getQuarterName = (quarter) => {\n    switch (quarter) {\n      case '2':\n        return 'secondQuarter';\n      case '3':\n        return 'thirdQuarter';\n      case '4':\n        return 'fourthQuarter';\n      default:\n        return 'firstQuarter';\n    };\n  };\n\n  const buildInputArr = () => {\n    let activeQuarter = getQuarterName(sessionStorage.quarter);\n    let subjectsHolder = Subjects.buildLevelSubjects(level, '');\n    let editingSubjects = [];\n    let teacherId = JSON.parse(sessionStorage.user).idNumber;\n    let prevRecords = JSON.parse(JSON.stringify(grades));\n    teacherSubjects.map(item => {\n      if (item.teacher.idNumber === teacherId) editingSubjects.push(item.subjectName);\n    });\n\n    let list = [];\n    subjectsHolder.map(topic => {\n      let recObj = prevRecords.find(prevRec => prevRec.subjectName === topic.subjectName);\n      if (recObj) {\n        recObj = Object.assign(topic, recObj);\n        recObj.recommendedGrade = Object.keys(recObj.recommendedGrade).length > 0 ? \n          recObj.recommendedGrade : \n          JSON.parse(JSON.stringify(recObj.subjectGrade));\n\n        //setting of 50\n        if (!isAdviser && editingSubjects.includes(topic.subjectName) && recObj.recommendedGrade[activeQuarter] === 0) {\n          recObj.recommendedGrade[activeQuarter] = 50;\n        };\n\n        list.push(recObj);\n      } else {\n        list.push(topic);\n      };\n    });\n\n    setUpdatedInputs(list);\n  };\n\n  const getQuarterNum = (quarter) => {\n    switch (quarter) {\n      case 'secondQuarter':\n        return '2';\n      case 'thirdQuarter':\n        return '3';\n      case 'fourthQuarter':\n        return '4';\n      default:\n        return '1';\n    };\n  };\n\n  useEffect(() => {\n    buildInputArr()\n  }, []);\n\n  return {\n    updatedInputs,\n    updateGrades,\n    setInput,\n    getQuarterNum\n  }\n};\n\nexport default GradeInputAction;\n","import React from 'react';\nimport { Form, Input, Button, Row, Col, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n\nimport GradeInputAction from './gradeInputAction';\n\nconst getQuarterName = (quarter) => {\n  switch (quarter) {\n    case 'secondQuarter':\n      return '2nd Q';\n    case 'thirdQuarter':\n      return '3rd Q';\n    case 'fourthQuarter':\n      return '4th Q';\n    default:\n      return '1st Q';\n  };\n};\n\nconst GradesInput = ({ gradeSubjectTeachers = [], isAdviser = false, record = {} }) => {\n\n  let { \n    updateGrades, \n    setInput,\n    updatedInputs,\n    getQuarterNum\n  } = GradeInputAction({ \n      level: Number(record.gradeLevel),\n      grades: record.subjects, record,\n      teacherSubjects: gradeSubjectTeachers\n    });\n  const userRole = JSON.parse(sessionStorage.user).role;\n\n  const onFinish = async () => {\n    await updateGrades(isAdviser);\n  };\n\n  const getValue = (subject, quarter) => {\n    // let isActive = sessionStorage.quarter === getQuarterNum(quarter);\n    let rating = 0;\n\n    if (!isAdviser) {\n      rating = subject.recommendedGrade[quarter] ? subject.recommendedGrade[quarter]: 0;\n    } else if (isAdviser) {\n      if (subject.recommendedGrade[quarter] && subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter]) {\n        rating = subject.recommendedGrade[quarter];\n      } else {\n        rating = subject.subjectGrade[quarter];\n      };\n    }\n    return rating;\n  };\n\n  const renderButton = () => {\n    let role = JSON.parse(sessionStorage.user).role;\n    if (role !== 'Teacher') return '';\n    return (\n      <Button className=\"btn-save\" htmlType=\"submit\" style={{ marginTop: '10px' }}>\n        <CheckCircleFilled type=\"check-circle\" /> Update\n      </Button>\n    )\n  };\n\n  const renderSubjects = () => {\n    let teacherSubjects = [];\n    let teacherId = JSON.parse(sessionStorage.user).idNumber;\n    gradeSubjectTeachers.map(item => {\n\n      if (item.teacher.idNumber === teacherId) teacherSubjects.push(item.subjectName);\n    });\n\n    return (\n      <>\n        { updatedInputs.map((subject) => {\n\n          if (!isAdviser && !teacherSubjects.includes(subject.subjectName)) return '';\n\n          return (\n            <Col span={12} key={subject.subjectName}>\n              <Card title={subject.subjectName} disabled={true} style={{ width: 300 }}>\n                <Row gutter={16}>\n                  {Object.keys(subject.subjectGrade).map(quarter => {\n                    return (\n                      <Col span={12} key={subject.subjectName + quarter}>\n                        <Form.Item label={getQuarterName(quarter)} >\n                          <Input\n                            value={getValue(subject, quarter)}\n                            onChange={(e) => { \n                              setInput(e.target.value, subject.subjectName, quarter, isAdviser) \n                            }}\n                            disabled={\n                              userRole !== 'Teacher' ||\n                              sessionStorage.quarter !== getQuarterNum(quarter)}\n                            style={{ border: \n                              subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter] ? \n                              '1px solid red' : '' \n                            }}\n                          />\n                        </Form.Item>\n                      </Col>\n                    )\n                  })}\n                </Row>\n              </Card>\n            </Col>\n          )\n        })\n        }\n      </>\n    )\n  }\n\n  return (\n    <Form name=\"grades_input\" onFinish={onFinish} autoComplete=\"off\" style={{ marginLeft: '28px', marginBottom: '30px' }}>\n      <Row gutter={16} >\n        {updatedInputs.length > 0 ?\n          renderSubjects()\n          : ''}\n      </Row>\n      {renderButton()}\n    </Form>\n  );\n}\n\nexport default GradesInput;\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport CustomTable from '../shared/customTable';\nimport EditableTable from '../shared/editableTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\n\nimport GradeAction from './gradeAction'\nimport StudentGradeTable from '../userDetails/gradeTable'\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport GradesInput from './gradesInput';\n\nconst AdvisoryGrades = () => {\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade2Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    advisoryGrades,\n    overAllGrade,\n    observedValues,\n    addUpdateObservedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade2,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade2,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Advisory Grades Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={advisoryGrades} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm\n            upgradeStudent={upgradeStudent}\n            add={addGrade} update={editGrade}\n            selectedTeacher={selectedTeacher}\n            selectedGrade={selectedGrade}\n            gradeLevel={\"2\"}\n            selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2}\n            isAdviser=\"true\" /> */}\n          <GradesInput \n            record={selectedGrade}\n            gradeSubjectTeachers={[]}\n            isAdviser=\"true\"/>\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n            <Row />\n            <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n              <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n                Student Attendance\n              </Typography.Title>\n              <AttendanceTable details={attendances} />\n            </Row>\n            <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n              <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n              <Col lg={{ span: \"24\" }} className=\"mt-15\">\n                <EditableTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER} setData={addUpdateObservedValues}></EditableTable>\n              </Col>\n            </Row>\n            <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n              <Col lg={{ span: \"11\" }}>\n                <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n              </Col>\n              <Col lg={{ span: \"11\", offset:\"1\" }}>\n                <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n              </Col>\n            </Row>\n          </Row>\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default AdvisoryGrades;\n","import React from 'react';\nimport { Form, Row, Col, Select, Button } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nimport Subjects from '../modelTemplate/subjects';\n\nconst { Option } = Select;\n\nconst TeacherAssignment = ({ teacherList = [], subjectAssignedTeachers = [], level = 0, submit }) => {\n\n  const onFinish = async () => {\n    submit(subjectAssignedTeachers, level);\n  };\n\n  if(!subjectAssignedTeachers.length) subjectAssignedTeachers = [];\n\n  let subjects = JSON.parse(JSON.stringify(Subjects.getSubjects(level)));\n\n  const getFormInitialVal = () => {\n    let valHolder = {};\n\n    subjectAssignedTeachers.map(topic => {\n      valHolder[topic.subjectName] = topic.teacher.idNumber;\n    });\n    return valHolder;\n  };\n\n  const handleChange = (id, subjectName) => {\n    let targetIndex = subjectAssignedTeachers.findIndex(topic => topic.subjectName === subjectName);\n    let teacher = teacherList.find(teacher => teacher.idNumber === id);\n    let rmNum = 1;\n    let subjectHolder = {\n      subjectName: subjectName,\n      teacher: teacher\n    };\n\n    if (targetIndex === -1) {\n      rmNum = 0;\n      targetIndex = subjectAssignedTeachers.length;\n    };\n\n    subjectAssignedTeachers.splice(targetIndex, rmNum, subjectHolder);\n  };\n\n  const renderSubjects = () => {\n    return (\n      <>\n        { subjects.map((subjectName, key) => {\n          return (\n            <Col span={12} key={subjectName}>\n              <Form.Item label={subjectName} name={subjectName}>\n                <Select name={subjectName} onChange={(value) => { handleChange(value, subjectName) }}>\n                  {teacherList.map(teacher => {\n                    return <Option value={teacher.idNumber} key={subjectName + teacher.idNumber}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                </Select>\n              </Form.Item>\n            </Col>\n          )\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Form name=\"grades_input\" initialValues={getFormInitialVal()} onFinish={onFinish} autoComplete=\"off\" style={{ marginLeft: '28px', marginBottom: '30px' }}>\n      <Row gutter={16} >\n        {renderSubjects()}\n      </Row>\n      <Button className=\"btn-save\" htmlType=\"submit\">\n        <CheckCircleFilled type=\"check-circle\" /> Save\n      </Button>\n    </Form>\n  );\n}\n\nexport default TeacherAssignment;\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport AdvisoryForm from './advisoryForm'\n\nimport GradeAction from './gradeAction'\n\nimport GradeTable from './gradeTable'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport TeacherAction from './teacherAction';\nimport AdvisorAction from './advisoryAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport CustomTable from '../shared/customTable';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade1Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade1,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade1,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\n                <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade1?.subjects} />\n            : ''}\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 1\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={1}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 1\n                  </Typography.Title>\n          }\n          width={500}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"1\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeAction from './gradeAction'\nimport StudentGradeTable from '../userDetails/gradeTable';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport CustomTable from '../shared/customTable';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\n\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade2Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade2,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade2,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\n              <PlusCircleOutlined type=\"add-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\n              <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                < RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade2?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 2\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={2}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 2\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"2\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport CustomTable from '../shared/customTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade3Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade3,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade3,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n            </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade3?.subjects}\n            /> : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 3\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={3}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 3\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"3\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport CustomTable from '../shared/customTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade4Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade4,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade4,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade4?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 4\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"} /> */}\n          <TeacherSubjectAssigment\n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined}\n            level={4}\n            submit={updateSubjectTeacher} />\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 4\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"4\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport CustomTable from '../shared/customTable';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade5Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade5,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade5,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade5?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 5\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"} /> */}\n          <TeacherSubjectAssigment\n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined}\n            level={5}\n            submit={updateSubjectTeacher} />\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 5\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"5\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport CustomTable from '../shared/customTable';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade6Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade6,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade6,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade6?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 6\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={6}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 6\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"6\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport CustomTable from '../shared/customTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade7Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade7,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade7,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade7?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 7\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={7}\n            submit={updateSubjectTeacher}/>\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n        </Drawer>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 7\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"7\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport CustomTable from '../shared/customTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade8Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade8,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade8,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade8?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 8\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={8}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 8\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"8\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport CustomTable from '../shared/customTable';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade9Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade9,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade9,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade9?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 9\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={9}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 9\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"9\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\nimport AttendanceTable from '../userDetails/attendanceTable';\nimport AttendanceAction from '../userDetails/attendanceAction';\nimport CustomTable from '../shared/customTable';\nimport TeacherSubjectAssigment from './teacherSubjectAssigment';\nimport {\n  DESCRIPTOR_TABLE,\n  MARKING_TABLE,\n  OBSERVED_VALUES_HEADER\n} from '../modelTemplate/observedValues';\nimport GradesInput from './gradesInput';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade10Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    overAllGrade,\n    observedValues\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade10,\n    selectedTeacherAssgined,\n    updateSubjectTeacher\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade10,\n    selectedAdvisoryAssgined,\n    availableAdvisors\n  } = AdvisorAction({});\n\n  let { getAttendance, attendances } = AttendanceAction();\n  let loadAttendance = async () => {\n    if (!selectedGrade.student) return;\n    await getAttendance(selectedGrade.student.idNumber);\n  };\n\n  loadAttendance();\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 13 }}>\n            <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\n          </Col>\n          <Col lg={{ span: 10 }}>\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n            }\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n                <RiseOutlined type=\"minus-circle\" /> Promote\n             </Button>\n              : null}\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\n          </Col>\n        </Row>\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Student Info\n                  </Typography.Title>\n          }\n          width={950}\n          visible={showGradeVisible}\n          onClose={() => { setShowGradeVisible(false) }}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10} /> */}\n          {showGradeVisible ?\n            <GradesInput\n              record={selectedGrade}\n              gradeSubjectTeachers={selectedTeacherAssignedGrade10?.subjects} />\n            : ''}\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              General Average :\n              {overAllGrade ? (\n                <>\n                  <span style={{\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.finalGrade}</span>\n                  <span style={{\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\n                      'red' : ''\n                  }}>{overAllGrade.remarks}</span>\n                </>\n              ) : ('')}\n            </Typography.Title>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\n              Student Attendance\n              </Typography.Title>\n            <AttendanceTable details={attendances} />\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\n            </Col>\n          </Row>\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\n            <Col lg={{ span: \"11\" }}>\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\n            </Col>\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\n            </Col>\n          </Row>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Teachers for grade 10\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showTeacherVisible}\n          onClose={() => hideTeacher()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          {/* <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"} /> */}\n          <TeacherSubjectAssigment \n            teacherList={selectedTeacher}\n            subjectAssignedTeachers={selectedTeacherAssgined} \n            level={10}\n            submit={updateSubjectTeacher}/>\n        </Drawer>\n\n        <Drawer\n          title={\n            <Typography.Title level={4}>\n              Advisor for grade 10\n                  </Typography.Title>\n          }\n          width={700}\n          visible={showAdvisorVisible}\n          onClose={() => hideAdvisor()}\n          bodyStyle={{ paddingBottom: 80 }}\n        >\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"10\"} />\n        </Drawer>\n      </Spin>\n    </Card>\n\n\n  );\n}\n\nexport default GradePage;\n\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst Grade1EditForm = ({selectedOffspring }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedOffspring}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n                  {console.log(selectedOffspring)}\n               <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n               <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item label=\"Name\" name=\"name\">\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n\n                  <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\n                        <Input disabled={true} name=\"schoolYear\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>     \n                  <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\n                        <Input disabled={true} name=\"gradeLevel\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>                     \n                  <Row gutter={16}>\n\n                  <Col span={12}>\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                  <Col span={12}>\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                  <Col span={12}>\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                  <Col span={12}>\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n                   \n                     <Col span={12}>\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                     <Col span={12}>\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n                  </Row>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default Grade1EditForm;","import React from 'react';\nimport { Table } from 'antd';\n\nconst TimeKeepingTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: <b>Name</b>,\n         dataIndex: 'name',\n      },\n      {\n        title: <b>ID Number</b>,\n        dataIndex: 'idNumber',\n     },\n      {\n         title: <b>Time In</b>,\n         dataIndex: 'timeIn',\n      },\n      {\n         title: <b>Time Out</b>,\n         dataIndex: 'timeOut',\n      },\n                            \n   ];\n\n   return (\n      <Table columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\nclass TimeKeepingService extends BaseService {\n  constructor() {\n    super('timekeeping');\n  }\n\n  add = timekeepingObj => {\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\n  };\n\n  update = timekeepingObj => {\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\n  };\n\n  findAllTimekeeping = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\n  };\n\n}\n\nexport default new TimeKeepingService();\n","import React, { useState, useEffect } from 'react';\nimport TimekeepingService from './timeKeepingService';\nimport moment from 'moment';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\n  let [timeIn, setTimeIn] = useState(new Date());\n  let [timeOut, setTimeOut] = useState(new Date())\n\n  const filterUsers = async (date) => {\n    if(date){\n      let response = await TimekeepingService.findAllTimekeeping();\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\n      let newArray = await result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.student.firstName + \" \" + user.student.lastName,\n          idNumber: user.student.idNumber,\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n      }\n      })\n      setUserDetails({list: newArray});\n    } else {\n      let response = await TimekeepingService.findAllTimekeeping();\n      let newArray = await response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.student.firstName + \" \" + user.student.lastName,\n          idNumber: user.student.idNumber,\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n      }\n      })\n      setUserDetails({list: newArray});\n    } \n\n  }\n\nconst loadUsers = async () => {\n    let response = await TimekeepingService.findAllTimekeeping();\n    let newArray = response.data.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        name: user.student.firstName + \" \" + user.student.lastName,\n        idNumber: user.student.idNumber,\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n    }\n    })\n    setUserDetails({list: newArray});\n  }\n\n  useEffect(() => {\n    loadUsers();\n}, []);\n\n\n  return {\n    userDetails,\n    filterUsers\n  }\n};\n\nexport default UserAction;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\n\n\n\nimport TimekeepingTable from './timeKeepingTable'\nimport AttendanceAction from './AttendanceAction'\nconst {Option} = Select;\n\nconst TimekeepingPage = () => {\n    let{\n        userDetails  ,\n        filterUsers\n    } = AttendanceAction({});\n  \n  return (\n    <Card className=\"h-82 p-70\">\n      <Row className=\"mt-15\">\n        <Col lg={{ span: 14 }}>\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\n        </Col>\n        <Col lg={{ span: 6 }}>\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\n          <Option value=\"January\">January</Option>\n          <Option value=\"Febuary\">Febuary</Option>\n          <Option value=\"March\">March</Option>\n          <Option value=\"April\">April</Option>\n          <Option value=\"May\">May</Option>\n          <Option value=\"June\">June</Option>\n          <Option value=\"July\">July</Option>\n          <Option value=\"August\">August</Option>\n          <Option value=\"September\">September</Option>\n          <Option value=\"October\">October</Option>\n          <Option value=\"November\">November</Option>\n          <Option value=\"December\">December</Option>\n        </Select>\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\n          <Option value=\"1\">1</Option>\n          <Option value=\"2\">2</Option>\n          <Option value=\"3\">3</Option>\n          <Option value=\"4\">4</Option>\n          <Option value=\"5\">5</Option>\n          <Option value=\"6\">6</Option>\n          <Option value=\"7\">7</Option>\n          <Option value=\"8\">8</Option>\n          <Option value=\"9\">9</Option>\n          <Option value=\"10\">10</Option>\n          <Option value=\"11\">11</Option>\n          <Option value=\"12\">12</Option>\n          <Option value=\"13\">13</Option>\n          <Option value=\"14\">14</Option>\n          <Option value=\"15\">15</Option>\n          <Option value=\"16\">16</Option>\n          <Option value=\"17\">17</Option>\n          <Option value=\"18\">18</Option>\n          <Option value=\"19\">19</Option>\n          <Option value=\"20\">20</Option>\n          <Option value=\"21\">21</Option>\n          <Option value=\"22\">22</Option>\n          <Option value=\"23\">23</Option>\n          <Option value=\"24\">24</Option>\n          <Option value=\"25\">25</Option>\n          <Option value=\"26\">26</Option>\n          <Option value=\"27\">27</Option>\n          <Option value=\"28\">28</Option>\n          <Option value=\"29\">29</Option>\n          <Option value=\"30\">30</Option>\n          <Option value=\"31\">31</Option>\n        </Select>\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\n        </Col>\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <TimekeepingTable details={userDetails.list} />\n      </Col>\n    </Row>\n  </Card>\n\t\n      \n  );\n}\n\nexport default TimekeepingPage;\n\n","import React from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, Spin } from 'antd';\n\nconst LoginForm = ({login}) => {\n   return (\n      <Formik\n         initialValues={{\n            username: \"\",\n            password: \"\"\n         }}\n         enableReinitialize={true}\n         onSubmit={async (values, actions) => {\n             login(values)\n            // await login(values)\n            // actions.setSubmitting(false);\n         }}\n         render={\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\n               <Spin spinning={isSubmitting}>\n                  <Form className=\"mt-10P\">\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              USERNAME:\n                           </b>\n                           <Form.Item name=\"username\">\n                              <Input name=\"username\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              PASSWORD:\n                           </b>\n                           <Form.Item name=\"password\">\n                              <Input.Password name=\"password\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\n                              Login\n                        </Button>\n                        </Col>\n                     </Row>\n                  </Form>\n               </Spin>\n            )}\n      />\n   );\n}\n\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\n\nimport '../../App.css';\nimport LoginForm from './loginForm';\nimport UserAction from '../user/userAction'\n\nconst version = process.env.REACT_APP_VERSION\n\n\nconst Login = () => {\n    let [showLogin, setShowLogin] = useState(false);\n    let [showContact, setShowContact] = useState(false);\n    let [showAboutUs, setShowAboutUs] = useState(false);\n    let [showHome, setShowHome] = useState(true);\n    const {Content} = Layout;\n    let {\n        login,\n        loginCounter\n      } = UserAction({});\n    \n    const loginUser = async (credentials) => {\n        login(credentials);\n    }\n\n    const loginFunction = async () => {\n        setShowHome(false)\n        setShowLogin(true)\n    }\n\n    const contactFunction = async () => {\n        setShowHome(false)\n        setShowContact(true)\n    }\n\n    const aboutUsFunction = async () => {\n        setShowHome(false)\n        setShowAboutUs(true)\n    }\n\n    return (\n        <Layout className=\"login\">\n            {/* Landing Page */}\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\n                <Row className=\"center\">\n                    <Col>\n                        <Button className=\"btn-home mr-10\">HOME</Button>\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\n                    </Col>\n                </Row>\n            </Content> : null}\n            \n\n            {/* Login Page */}\n            {showLogin \n            \n            ?             <Content className=\"contentLogin mt-5P\">\n            <div className=\"center mb-15\">\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\n            </div>\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\n            <Row className=\"mt-10 center\">\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\n                    <LoginForm login={loginUser}/>\n                </Col>\n            </Row>\n        </Content> : null}\n\n\n             {/* Contact Page */}\n            {showContact ?            <Content className=\"contentLogin mt-35\">\n                <div className=\"center mb-40\">\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\n                </div>\n                <Typography className=\"text-center\">\n                    <b>Telephone Number:</b> 8 245 4148<br/>\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\n                    <b>Email Address: </b>\n                    <u className=\"blue\">\n                        admission.snss@gmail.com\n                    </u>\n                </Typography>\n            </Content>:null}\n \n\n\n            {/* About Page */}\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\n                <div className=\"center h-70 mb-35\">\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\n                </div>\n                <Typography className=\"text-center\">\n                    In 1986 St. Niño the Shepherd Learning Center was established by Mrs. Susan Catipon Garcia, it is the school's aim<br/>\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\n                    physically and spiritually in preparation for becoming responsible citizens of the future. This is achieved <br/>\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\n                    belief that students must be taught respect for themselves, for others and for the environment in which they live. \n                </Typography>\n            </Content> : null}\n           \n        </Layout>\n    );\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nimport { Link } from 'react-router-dom';\n\nimport '../App.css';\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\n\nimport {\n  UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\n} from '@ant-design/icons';\nconst { SubMenu } = Menu;\nconst SiderMenu = ({ theme, collapsed }) => {\n  return (\n    <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n        <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 1 Management</span>\n              <Link to={'/grade1'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 2 Management</span>\n              <Link to={'/grade2'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 3 Management</span>\n              <Link to={'/grade3'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 4 Management</span>\n              <Link to={'/grade4'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 5 Management</span>\n              <Link to={'/grade5'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 6 Management</span>\n              <Link to={'/grade6'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 7 Management</span>\n              <Link to={'/grade7'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 8 Management</span>\n              <Link to={'/grade8'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 9 Management</span>\n              <Link to={'/grade9'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">Grade 10 Management</span>\n              <Link to={'/grade10'} className=\"nav-link\" />\n            </Menu.Item> : null}\n        </SubMenu> : null}\n\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n        <Menu.Item key=\"dashboard\" className=\"menus\">\n          <DashboardOutlined />\n          <span className=\"fs-13\">Dashboard</span>\n          <Link to={'/dashboard'} className=\"nav-link\" />\n        </Menu.Item> : null}\n\n\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n        <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n            <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">List Of Admin</span>\n              <Link to={'/admin'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n            <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">List Of Parent</span>\n              <Link to={'/parent'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n            <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">List Of Student</span>\n              <Link to={'/student'} className=\"nav-link\" />\n            </Menu.Item> : null}\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n            <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\n              <UserOutlined />\n              <span className=\"fs-13\">List Of Teacher</span>\n              <Link to={'/teacher'} className=\"nav-link\" />\n            </Menu.Item> : null}\n        </SubMenu> : null}\n\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n        <Menu.Item key=\"timekeeping\" className=\"menus\">\n          <UserOutlined />\n          <span className=\"fs-13\">Student Attendance</span>\n          <Link to={'/timekeeping'} className=\"nav-link\" />\n        </Menu.Item> : null}\n\n      {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\n        <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\n          <UserOutlined />\n          <span className=\"fs-13\">Student Grade</span>\n          <Link to={'/offspring'} className=\"nav-link\" />\n        </Menu.Item> : null}\n\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n        <Menu.Item key=\"auditTrail\" className=\"menus\">\n          <AuditOutlined />\n          <span className=\"fs-13\">Audit Trail</span>\n          <Link to={'/auditTrail'} className=\"nav-link\" />\n        </Menu.Item> : null}\n\n      {JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n        <Menu.Item key=\"advisoryClass\" className=\"menus\">\n          <UserOutlined />\n          <span className=\"fs-13\">Advisory Class</span>\n          <Link to={'/advisoryclass'} className=\"nav-link\" />\n        </Menu.Item> :\n        null}\n\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n        <Menu.Item key=\"clearance\" className=\"menus\">\n          <UserOutlined />\n          <span className=\"fs-13\">Clearance</span>\n          <Link to={'/clearance'} className=\"nav-link\" />\n        </Menu.Item> :\n        null}\n    </Menu>\n  );\n}\n\nexport default SiderMenu;\n","import {createContext} from 'react';\n\n\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\nimport {  Menu } from 'antd';\nimport { UserContext } from './userContext';\nimport { Link } from 'react-router-dom';\n\nimport {\n    LogoutOutlined,\n    SettingOutlined\n  } from '@ant-design/icons';\n\n\nconst UserMenu = () => {\n\n   const { setLoggedUser } = useContext(UserContext);\n\n   const logout = async () => {\n    sessionStorage.removeItem('user');\n    window.location.reload(false);\n    //   setLoggedUser(null);\n    //   sessionStorage.removeItem('token');\n    //   sessionStorage.removeItem('user');\n   }\n\n   return (\n      <Menu className=\"mt-20\">\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\n            <LogoutOutlined />Logout\n         </Menu.Item>\n         <Menu.Item className=\"dropdown-item\">\n            <SettingOutlined /> Settings\n            <Link to={'/settings'} className=\"nav-link\" />\n         </Menu.Item>\n      </Menu>\n   );\n}\n\nexport default UserMenu;\n","import React from 'react';\nimport { Table } from 'antd';\n\nconst AuditTrailTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: 'Name',\n         dataIndex: 'name',\n      },\n      {\n         title: 'Activity',\n         dataIndex: 'activity',\n      },\n      {\n         title: 'Role',\n         dataIndex: 'role',\n      },\n      {\n         title: 'Date',\n         dataIndex: 'date',\n      },\n\n   ];\n\n   return (\n      <Table columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\n\n    const addAudit = async values => {\n    let finalAudit = {\n        user : values.user,\n        activity: values.activity,\n        date: values.date,\n    }\n    let response = auditTrailService.add(finalAudit)\n    };\n    \n    const getListOfAudit = async () => {\n      let response = await auditTrailService.findAllAudit();\n      let newArray = response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.user.firstName + \" \" + user.user.lastName,\n          date: moment(user.date).format('MMMM Do YYYY'),\n          role: user.user.role,\n          activity: user.activity,\n        }\n      })\n      setAuditTrailDetails({list: newArray})\n    };\n\n    const filterAudit = async ({date, role}) => {\n      let datas = [];\n      if (date) {\n        let response = await auditTrailService.findAllAudit();\n        datas = await response.data.filter(\n          (user) =>\n            moment(user.date).format(\"MMMM Do YYYY\") ===\n            moment(date).format(\"MMMM Do YYYY\")\n        );\n      } else {\n        let response = await auditTrailService.findAllAudit();\n        datas = response.data;\n      };\n\n      if (role) {\n        datas = datas.filter(data => data.user.role === role);\n      };\n\n      let newArray = await datas.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.user.firstName + \" \" + user.user.lastName,\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\n          role: user.user.role,\n          activity: user.activity\n        };\n      });\n\n    setAuditTrailDetails({ list: newArray });\n  };\n  \n  useEffect(() => {\n    getListOfAudit();\n  }, []);\n\n\n  return {\n    addAudit,\n    auditTrailDetails,\n    filterAudit\n  }\n};\n\nexport default AuditTrailAction;\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport AuditTrailTable from './auditTrailTable'\nimport AuditTrailAction from './auditTrailAction'\nconst { Option } = Select;\n\nconst AuditTrailPage = () => {\n  let { auditTrailDetails, filterAudit } = AuditTrailAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Row className=\"mt-15\">\n        <Col lg={{ span: 14 }}>\n          <Typography.Title level={3} className=\"ml-15\">\n            Audit Trail\n          </Typography.Title>\n        </Col>\n        <Col lg={{ span: 6 }}>\n          <DatePicker\n            id=\"filterDate\"\n            className=\"w-100P\"\n            placeholder={\"Input Date Here\"}\n            onChange={(date, dateString) => {\n              let filterRole = document.getElementById('filterRole').value;\n              filterAudit({ date: date, role: filterRole });\n            }}\n          />\n        </Col>\n        {/* <Col lg={{ span: 24 }}>\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\n          </Button>\n        </Col> */}\n        <>\n          <Select\n            id=\"filterRole\"\n            defaultValue=\"\"\n            className=\"ml-15\"\n            placeholder=\"select role\"\n            style={{ width: '150px' }}\n            onChange={(value) => {\n              let filterDate = document.getElementById('filterDate').value;\n              filterAudit({ date: filterDate, role: value })\n            }}>\n            <Option value=\"\">None</Option>\n            <Option value=\"Admin\">Admin</Option>\n            <Option value=\"Teacher\">Teacher</Option>\n            <Option value=\"Parent\">Parent</Option>\n            <Option value=\"Student\">Student</Option>\n          </Select>\n        </>\n      </Row>\n      <Row>\n        <Col lg={{ span: \"24\" }}>\n          <AuditTrailTable details={auditTrailDetails.list} />\n        </Col>\n      </Row>\n    </Card>\n\n\n  );\n}\n\nexport default AuditTrailPage;\n\n","import React, { useState, useEffect } from 'react';\nimport clearanceService from './clearanceService';\nimport gradesService from '../grade/gradesService';\nimport { CLEARANCE_DROPDOWN } from '../../constants/clearance';\n\n\nconst ClearanceAction = (initial = {}) => {\n  let [levelClearance, setLevelClearance] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [levelToEdit, setLevelToEdit] = useState('');\n\n  const getIndividualRec = async (list = [], idNumber = '') => {\n    if (list.length === 0) return null;\n    let record = await list.find(item => item.idNumber === idNumber);\n    return record;\n  };\n\n  const getClearance = async ({ level }) => {\n    try {\n      setLevelToEdit(level);\n      setLoading(true);\n      let responseGradeRecords = await gradesService.findAllGrades(level);\n      responseGradeRecords = responseGradeRecords.data;\n      let responseClearance = await clearanceService.getClearance(level);\n      let clearanceData = [];\n\n      if (responseGradeRecords.length > 0) {\n        await responseGradeRecords.map(async (item, key) => {\n          let record = await getIndividualRec(responseClearance.data?.students, item.student.idNumber);\n          console.log(record);\n          let studentName = `${item.student.lastName}, ${item.student.firstName} ${item.student.middleName}`;\n          let studentObj = {\n            key: 'student' + item.student.idNumber,\n            id: 'student' + item.student.idNumber,\n            studentName: studentName,\n            idNumber: item.student.idNumber,\n            firstQuarter: record ? record.firstQuarter : '',\n            secondQuarter: record ? record.secondQuarter : '',\n            thirdQuarter: record ? record.thirdQuarter : '',\n            fourthQuarter: record ? record.fourthQuarter : '',\n            dropdownList: CLEARANCE_DROPDOWN\n          };\n\n          clearanceData.push(studentObj);\n        });\n      };\n\n      setTimeout(() => {\n        setLevelClearance(clearanceData);\n        setLoading(false);\n      }, 1000);\n    } catch (error) { };\n  };\n\n  const addUpdateLvlClearance = async (values) => {\n    setLevelClearance(values);\n    setLoading(true);\n    let students = values.map(item => {\n      return {\n        idNumber: item.idNumber,\n        firstQuarter: item.firstQuarter,\n        secondQuarter: item.secondQuarter,\n        thirdQuarter: item.thirdQuarter,\n        fourthQuarter: item.fourthQuarter,\n      }\n    })\n    let paramsObj = {\n      gradeLevel: levelToEdit,\n      students: students\n    };\n\n    let data = await clearanceService.addUpdateClearance(paramsObj);\n    console.log(data);\n    setLoading(false);\n  };\n\n  return {\n    getClearance,\n    loading,\n    levelClearance,\n    addUpdateLvlClearance\n  }\n};\n\nexport default ClearanceAction;","import React from 'react';\nimport { Card, Typography, Row, Col, Select, Spin } from 'antd';\nimport EditableTable from '../shared/editableTable';\nimport ClearanceAction from './clearanceAction';\nimport { CLEARANCE_HEADERS } from '../../constants/clearance';\nconst { Option } = Select;\n\nconst ClearancePage = () => {\n  \n  let { getClearance, loading, levelClearance, addUpdateLvlClearance} = ClearanceAction();\n  \n  const levels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']; \n  const renderLevels = () => {\n    return levels.map((level) => {\n      return <Option value={level} key={level} >{level}</Option>\n    });\n  };\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row className=\"mt-15\">\n          <Col lg={{ span: 14 }}>\n            <Typography.Title level={3} className=\"ml-15\">\n              Clearance\n          </Typography.Title>\n          </Col>\n          <Col lg={{ span: 6 }}>\n            <Select\n              id=\"studentSelect\"\n              className=\"ml-15\"\n              placeholder=\"Please select a year level\"\n              onChange={(value) => {getClearance({level: value}) }}\n              style={{ width: '300px' }}>\n              {renderLevels()}\n            </Select>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={{ span: \"24\" }}>\n            <EditableTable details={levelClearance} headers={CLEARANCE_HEADERS} setData={addUpdateLvlClearance}/>\n          </Col>\n        </Row>\n      </Spin>\n    </Card>\n  );\n}\n\nexport default ClearancePage;\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport User from \"./components/user/user.js\";\nimport Student from \"./components/user/student.js\";\nimport Parent from \"./components/user/parent.js\";\nimport Teacher from \"./components/user/teacher.js\";\nimport UserSetting from \"./components/user/userSetting.js\";\nimport UserDetail from \"./components/userDetails/userDetails.js\";\nimport AdvisoryGrades from \"./components/grade/advisoryGrades\";\nimport Grade1 from \"./components/grade/grade1\";\nimport Grade2 from \"./components/grade/grade2\";\nimport Grade3 from \"./components/grade/grade3\";\nimport Grade4 from \"./components/grade/grade4\";\nimport Grade5 from \"./components/grade/grade5\";\nimport Grade6 from \"./components/grade/grade6\";\nimport Grade7 from \"./components/grade/grade7\";\nimport Grade8 from \"./components/grade/grade8\";\nimport Grade9 from \"./components/grade/grade9\";\nimport Grade10 from \"./components/grade/grade10\";\nimport Offspring from \"./components/offspring/offspring.js\";\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\nimport QuarterService from \"../src/components/quarter/quarterService\"\n// import Item from \"./components/item/item.js\";\nimport Login from \"./components/login/login.js\";\nimport SiderMenu from \"./components/siderMenu\"\nimport UserMenu from \"./components/userMenu\"\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\nimport Clearance from './components/clearance/clearance';\n\nimport { UserContext } from './components/userContext'\n\nconst { Option } = Select;\n\nconst App = () => {\n  const { Content, Sider, Header } = Layout;\n  let [loggedUser, setLoggedUser] = useState(null);\n  let [collapsed, setCollapsed] = useState(false);\n  let [theme] = useState(\"dark\");\n\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\n\n  useEffect(() => {\n    if (sessionStorage.user) {\n      setLoggedUser(JSON.parse(sessionStorage.user));\n    }\n  }, []);\n\n  const onChangeFunction = async (value) => {\n    // console.log(value)\n    let response = await QuarterService.update({ _id: sessionStorage._id, quarter: value })\n    sessionStorage.setItem(\"quarter\", value)\n    window.location.reload(false)\n    // console.log(sessionStorage._id)\n    // console.log(sessionStorage.quarter)\n  };\n\n  return (\n    <UserContext.Provider value={providerValue}>\n      {\n        loggedUser ?\n          <BrowserRouter>\n            <Layout>\n              <BrowserRouter>\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\n                  <Sider className=\"sider\" collapsed={collapsed}>\n                    <Header className=\"sideBarHeader text-white\">\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\n                    </Header>\n                    <Content className=\"mt-20\">\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\n                    </Content>\n                  </Sider>\n                  : null}\n                <Layout>\n                  <Header className=\"bg-white\">\n                    <a href onClick={() => {\n                      setCollapsed(!collapsed)\n                    }}>\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\n                    </a>\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ? <span className=\"left\">\n                      Quarter: &nbsp;\n                    <Select onChange={\n                        (value) =>\n                          onChangeFunction(value)\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\n                        <Option value=\"1\">1</Option>\n                        <Option value=\"2\">2</Option>\n                        <Option value=\"3\">3</Option>\n                        <Option value=\"4\">4</Option>\n                      </Select>\n                    </span> : null}\n\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\n                      <span>\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\" />\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\n                      </span>\n                      : null}\n\n\n                    <span className=\"right\">\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\n                      <Dropdown overlay={<UserMenu />}>\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\n                      </Dropdown>\n                    </span>\n                  </Header>\n                  <Layout>\n                    <Content className=\"pt-30 pb-30\">\n                      <Switch>\n                        {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n                          <Redirect\n                            exact\n                            from=\"/login\"\n                            to=\"/dashboard\"\n                          /> :\n                          JSON.parse(sessionStorage.user).role === \"Parent\" ?\n                            <Redirect\n                              exact\n                              from=\"/login\"\n                              to=\"/offspring\"\n                            /> : JSON.parse(sessionStorage.user).role === \"Teacher\" ?\n                              <Redirect\n                                exact\n                                from=\"/login\"\n                                to=\"/grade1\"\n                              /> : <Redirect\n                                exact\n                                from=\"/login\"\n                                to=\"/\"\n                              />}\n                        <Route path=\"/settings\" component={UserSetting} />\n                        <Route path=\"/admin\" component={User} />\n                        <Route path=\"/student\" component={Student} />\n                        <Route path=\"/parent\" component={Parent} />\n                        <Route path=\"/teacher\" component={Teacher} />\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/advisoryclass\" component={AdvisoryGrades} />\n                        <Route path=\"/grade1\" component={Grade1} />\n                        <Route path=\"/grade2\" component={Grade2} />\n                        <Route path=\"/grade3\" component={Grade3} />\n                        <Route path=\"/grade4\" component={Grade4} />\n                        <Route path=\"/grade5\" component={Grade5} />\n                        <Route path=\"/grade6\" component={Grade6} />\n                        <Route path=\"/grade7\" component={Grade7} />\n                        <Route path=\"/grade8\" component={Grade8} />\n                        <Route path=\"/grade9\" component={Grade9} />\n                        <Route path=\"/grade10\" component={Grade10} />\n                        <Route path=\"/offspring\" >\n                          <UserDetail isParent='true'/>\n                        </Route>\n                        <Route path=\"/timekeeping\" component={Timekeeping} />\n                        <Route path=\"/auditTrail\" component={AuditTrail} />\n                        <Route path=\"/clearance\" component={Clearance} />\n                        <Route path=\"/\" component={UserDetail} />\n                      </Switch>\n                    </Content>\n                  </Layout>\n                </Layout>\n              </BrowserRouter>\n            </Layout>\n            <Layout>\n            </Layout>\n          </BrowserRouter>\n          :\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Redirect from=\"*\" to=\"/login\" />\n            </Switch>\n          </BrowserRouter>\n      }\n    </UserContext.Provider>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}