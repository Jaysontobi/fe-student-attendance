{"version":3,"sources":["config.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/dashboard/dashboard.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/grade/advisoryService.js","components/auditTrail/auditTrailService.js","components/grade/gradeAction.js","components/grade/advisoryAction.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/grade/teacherAction.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/offspring/offspringTable.js","components/offspring/offspring.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","id","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","userObj","update","_id","findAllUser","findyById","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","a","userService","response","parent","data","filter","user","role","student","teacher","length","useEffect","EmployeePage","DashboardAtion","className","gutter","xs","span","sm","md","lg","title","bordered","Option","Select","UserEditForm","selectedUser","selectedParent","loading","initialValues","enableReinitialize","onSubmit","values","console","log","render","touched","setFieldValue","spinning","delay","Item","label","name","disabled","JSON","parse","sessionStorage","value","firstName","lastName","map","Password","htmlType","CheckCircleFilled","type","gradesObj","findAllGrades","level","quarterObj","findAllQuarter","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","idNumber","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","setItem","stringify","filterStudent","newArray","key","action","onClick","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","loadParent","loadAdmin","newArrayCredentials","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","details","columns","dataIndex","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","Title","placeholder","e","target","PlusCircleOutlined","width","visible","onClose","bodyStyle","paddingBottom","TimeKeepingTable","advisoryObj","findAllAdvisory","auditTrailObj","findAllAudit","Grade1Action","studentAdvisor","setStudentAdvisor","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","setSelectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","upgradeStudent","auditTrailService","userCurrentGrade","parseInt","currentUser","allStudent","result1","currentStudent","toString","editGrade","grade","English","newEnglishGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","MAPEH","newMAPEHGrade","Values","newValuesGrade","showGrade","loadGrade","getCurrentGradeUser","getListOfTeacher","filterCurrentGradeUser","subject","remarks","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","FinalGrade","Remarks","advisoryService","currentGradeUser","loadGrades","finalOffspring","offspring","off","push","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","TeacherAction","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","addAdvisor","advisor","advisorTeacher","finalAddValue","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","GradeAction","Grade1EditForm","selectedTeacherAssignedGrade","newValues","English1","English2","English3","English4","Filipino1","Filipino2","Filipino3","Filipino4","Science1","Science2","Science3","Science4","Math1","Math2","Math3","Math4","MAPEH1","MAPEH2","MAPEH3","MAPEH4","Values1","Values2","Values3","Values4","style","defaultValue","TeacherForm","selectedTeacherAssgined","GradeTable","teacherObj","findAllTeacher","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","hideTeacher","showTeacher","GradePage","addGrade","AdvisorAction","RiseOutlined","selectedOffspring","OffspringPage","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","AttendanceAction","dateString","LoginForm","actions","errors","isSubmitting","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","src","SubMenu","Menu","SiderMenu","theme","collapsed","mode","icon","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","AuditTrailPage","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","href","overlay","Text","exact","from","path","component","User","Student","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Offspring","Timekeeping","AuditTrail","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af129ff7.chunk.js","sourcesContent":["/**\n * declare all configurations in here\n */\n\n//declare as LOCAL for local and PRODUCTION for production\nconst ENVIRONMENT = 'PRODUCTION';\n\nconst LOCAL_BE = 'http://localhost:14000';\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\n\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE};","import axios from 'axios';\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\nclass BaseService {\n  constructor(moduleUrl) {\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\n      PRODUCTION_BE + \"/\" + moduleUrl :\n      LOCAL_BE + \"/\" + moduleUrl;\n    this.axiosInstance = axios.create({\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\n        PRODUCTION_BE + \"/\" + moduleUrl :\n        LOCAL_BE + \"/\" + moduleUrl\n    })\n    \n    // this.axiosInstance.interceptors.request.use(function (config) {\n    //   const token = sessionStorage.getItem('token');\n    //   config.headers[\"x-authorization\"] = token;\n    //   return config;\n    // });\n  }\n\n  edit = newObj => {\n    return this.axiosInstance.put('', newObj);\n  };\n\n  add = newObj => {\n    return this.axiosInstance.post('', newObj);\n  };\n\n  getById = id => {\n    return this.axiosInstance.get('/' + id);\n  };\n\n  delete = crudId => {\n    return this.axiosInstance.delete('/' + crudId);\n  };\n  softDelete = crudId => {\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\n  };\n}\nexport default BaseService;\n","import BaseService from '../../baseService';\nclass UserService extends BaseService {\n  constructor() {\n    super('user');\n  }\n\n  add = userObj => {\n    return this.axiosInstance.post('/create-user', userObj);\n  };\n\n  update = userObj => {\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\n  };\n\n  findAllUser = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-user/' + id);\n  };\n\n}\n\nexport default new UserService();\n","import React, { useState, useEffect } from 'react';\nimport userService from '../user/userService';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( \n      {numberOfStudents : 0, \n      numberOfTeachers: 0,\n      numberOfParents : 0}\n      );\n\n  const getListOfUsers = async () => {\n    let response = await userService.findAllUser();\n    let parent = response.data.filter(user => user.role === \"Parent\");\n    let student = response.data.filter(user => user.role === \"Student\");\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\n    setUserDetails({\n        numberOfParents: parent.length,\n        numberOfStudents : student.length, \n        numberOfTeachers: teacher.length\n    })\n  };\n\n  useEffect(() => {\n    getListOfUsers();\n  }, []);\n\n\n  return {\n    userDetails\n  }\n};\n\nexport default UserAction;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport DashboardAtion from \"../dashboard/dashboardAction\"\n\nconst EmployeePage = () => { \n    let{\n        userDetails\n      } = DashboardAtion({});\n  return (\n    <div className=\"site-card-wrapper\">\n    <Row gutter={16}>\n      <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\n        <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\n          <span className=\"dashboard-padding\">\n              {userDetails.numberOfStudents}\n            </span>\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\n          <span className=\"dashboard-padding\">\n            {userDetails.numberOfParents}\n          </span>\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\n          <span className=\"dashboard-padding\">\n            {userDetails.numberOfTeachers}\n          </span>\n        </Card>\n      </Col>\n    </Row>\n  </div>\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst UserEditForm = ({ add,update, selectedUser, selectedParent }) => {\n\n   let [loading, setLoading] = useState(false);\n   let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedUser}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            if(values._id) {\n               console.log(values)\n               update(values)\n            } else {\n               add(values)\n      \n               // window.location.reload(false);\n            }\n         }}\n         render={({ values, touched, setFieldValue }) => (\n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n               <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"idNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"School Year\" name=\"schoolYear\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"First Name\" name=\"firstName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Middle Name\" name=\"middleName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Last Name\" name=\"lastName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Gender\" name=\"gender\">\n                          <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\n                              <Option value=\"Male\">Male</Option>\n                              <Option value=\"Female\">Female</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\n                        <Select disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gradeLevel\">\n                              <Option value=\"1\">1</Option>\n                              <Option value=\"2\">2</Option>\n                              <Option value=\"3\">3</Option>\n                              <Option value=\"4\">4</Option>\n                              <Option value=\"5\">5</Option>\n                              <Option value=\"6\">6</Option>\n                              <Option value=\"7\">7</Option>\n                              <Option value=\"8\">8</Option>\n                              <Option value=\"9\">9</Option>\n                              <Option value=\"10\">10</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Section\" name=\"section\">\n                           <Input disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"section\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Birth Day\" name=\"birthDate\">\n                           <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Birth Place\" name=\"birthPlace\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Age\" name=\"age\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"Parent\" name=\"parentId\">\n                     <Select value={values.parent ? values.parent.firstName + \" \" + values.parent.lastName : \"\"} name=\"parentId\" disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"}>\n                        {selectedParent.map(parent => {\n                                 return <Option value={parent._id}>{parent.firstName + \" \" + parent.lastName}</Option>\n                        })}\n                     </Select>\n                     </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Contact Number\" name=\"contactNumber\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Email\" name=\"email\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Role\" name=\"role\">\n                           <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"role\">\n                              <Option value=\"Admin\">Admin</Option>\n                              <Option value=\"Student\">Student</Option>\n                              <Option value=\"Parent\">Parent</Option>\n                              <Option value=\"Teacher\">Teacher</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Password\" name=\"password\">\n                           <Input.Password disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                 {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"btn-save\" htmlType=\"submit\">\n                   <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button> : null}\n                 \n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default UserEditForm;","import BaseService from '../../baseService';\nclass GradesService extends BaseService {\n  constructor() {\n    super('grades');\n  }\n\n  add = gradesObj => {\n    return this.axiosInstance.post('/create-grades', gradesObj);\n  };\n\n  update = gradesObj => {\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\n  };\n  \n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-grades/' + id);\n  };\n\n  findAllGrades = (level ='') => {\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\n  };\n\n}\n\nexport default new GradesService();\n","import BaseService from '../../baseService';\nclass TimeKeepingService extends BaseService {\n  constructor() {\n    super('quarter');\n  }\n\n  add = quarterObj => {\n    return this.axiosInstance.post('/create-quarter', quarterObj);\n  };\n\n  update = quarterObj => {\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\n  };\n\n  findAllQuarter = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-quarter/' + id);\n  };\n\n}\n\nexport default new TimeKeepingService();\n","import React, { useState, useEffect } from 'react';\nimport userService from './userService';\nimport gradesService from '../grade/gradesService';\nimport quarterService from '../quarter/quarterService'\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\n  let [adminList, setAdminList] = useState([])\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\n  let [parentList, setParentList] = useState([])\n  let [studentList, setStudentList] = useState([])\n  let [teacherList, setTeacherList] = useState([])\n  let [showUserVisible, setShowUserVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n  let [selectedParent, setSelectedParent] = useState([]);\n\n  let [loginCounter, setLoginCounter] = useState(false);\n\n  const addUser = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Add User\",\n      date:new Date()\n    }\n    if(values.parentId){\n      let parent = await userService.findyById(values.parentId)\n      values.parent = parent.data;\n    }\n    let response = await userService.add(values)\n    .then(function (res) {\n      if(values.role === \"Student\"){\n        let gradeObj = {\n          status: true,\n          student: values,\n          gradeLevel: values.gradeLevel,\n          section: values.section,\n          schoolYear : values.schoolYear,\n          subjects: [{\n              subjectName: \"English\",\n              subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Filipino\",\n              subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Science\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Math\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"MAPEH\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Values\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          }]\n      }\n      let response = gradesService.add(gradeObj)\n      }\n    \n        \n        setSelectedUser({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            employeeNumber: \"\",\n            department: \"\",\n          })\n        setShowUserVisible(false)\n        loadUsers()\n        window.location.reload(false);\n    })\n  };\n\n  const editUser = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Edit User\",\n      date:new Date()}\n    if(values.parentId){\n      let parent = await userService.findyById(values.parentId)\n      values.parent = parent.data;\n    }\n    let response = await userService.update(values)\n    .then(function (res) {\n        setSelectedUser({\n          firstName: \"\",\n          lastName: \"\",\n          middleName: \"\",\n          idNumber: \"\",\n          gender: \"\",\n          birthDate: \"\",\n          birthPlace: \"\",\n          age: \"\",\n          contactNumber: \"\",\n          email: \"\",\n          status: \"\",\n          })\n        setShowUserVisible(false)\n        loadUsers()\n    })\n  };\n\n  const getListOfParent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Parent\");\n    setSelectedParent(result)\n  };\n\n  const showUser = () => {\n    setSelectedUser({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        idNumber: \"\",\n        gender: \"\",\n        birthDate: \"\",\n        birthPlace: \"\",\n        age: \"\",\n        contactNumber: \"\",\n        email: \"\",\n        status: \"\",\n      });\n    setShowUserVisible(true)\n  };\n\n  const loadUser = (userObj) => {\n    setSelectedUser({...userObj});\n    setShowUserVisible(true);\n  };\n\n  const loadQuarter = async () => {\n    let response = await quarterService.findAllQuarter();\n    setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\n  }\n\n  const login = (credentials) => {\n    let ctr = 0;\n    let loggedInUser = {};\n    userDetails.list.map((user) => {\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\n            ctr = ctr + 1;\n            loggedInUser = user;\n        }\n    })\n    if(ctr === 0) {\n        setLoginCounter(false)\n    } else {\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\n        sessionStorage.setItem(\"_id\", quarter._id)\n        window.location.reload(false);\n        setLoginCounter(true)\n    }\n  };\n\n  const filterStudent = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setStudentList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Student\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setStudentList( newArray)\n    }\n  } \n  \n  const filterTeacher = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setTeacherList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Teacher\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setTeacherList( newArray)\n    }\n  }  \n\n  const filterParent = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setParentList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Parent\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setParentList( newArray)\n    }\n  }  \n\n  const filterAdmin = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setAdminList(\n        newArray\n      )\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Admin\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setAdminList(\n      newArray\n    )\n    }\n  }\n\n  const loadTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setTeacherList(newArray)\n\n  }  \n\n  const loadStudent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Student\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setStudentList(newArray)\n\n  }  \n\n  const loadParent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Parent\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setParentList(newArray)\n\n  }\n\n  const loadAdmin = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Admin\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setAdminList(newArray)\n\n  }\n\nconst loadUsers = async () => {\n    let response = await userService.findAllUser();\n    let newArray = response.data.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    let newArrayCredentials = response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          idNumber: user.idNumber,\n          password: user.password,\n        }\n      })\n\n    setUserDetails({\n      list: newArray,\n      credentials: newArrayCredentials\n    })\n\n  }\n\n  useEffect(() => {\n    loadUsers();\n    getListOfParent();\n    loadAdmin();\n    loadStudent();\n    loadTeacher();\n    loadParent();\n    loadQuarter();\n  }, []);\n\n\n  return {\n    loadUsers,\n    addUser,\n    loginCounter,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    userDetails,\n    selectedUser,\n    editUser,\n    login,\n    selectedParent,\n    filterAdmin,\n    filterStudent,\n    filterParent,\n    filterTeacher,\n    adminList,\n    studentList,\n    parentList,\n    teacherList,\n  }\n};\n\nexport default UserAction;","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\n    const locale = 'en';\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\n\n  useEffect(() => {\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\n        // This will trigger a rerender every component that uses the useDate hook.\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\n      }, 1000);\n      return () => {\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n      }\n  }, []);\n\n\n  return {\n    today\n  }\n};\n\nexport default TimeKeepingAction;","import React from 'react';\nimport { Table } from 'antd';\n\nconst EmployeeTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: <b>Id Number</b>,\n         dataIndex: 'idNumber',\n      },\n      {\n         title: <b>First Name</b>,\n         dataIndex: 'firstName',\n      },\n      {\n         title: <b>Middle Name</b>,\n         dataIndex: 'middleName',\n      },\n      {\n         title: <b>Last Name</b>,\n         dataIndex: 'lastName',\n      },\n      {\n         title: <b>Gender</b>,\n         dataIndex: 'gender',\n      },\n      {\n        title: <b>Age</b>,\n        dataIndex: 'age',\n      },   \n      {\n        title: <b>Contact Number</b>,\n        dataIndex: 'contactNumber',\n      },  \n      {\n        title: <b>Email</b>,\n        dataIndex: 'email',\n      },   \n      {\n        title: <b>Role</b>,\n        dataIndex: 'role',\n      },   \n      {\n        title: <b>Action</b>,\n        dataIndex: 'action',\n      },                            \n   ];\n\n   const rowUserSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n         console.log(selectedRows)\n      }\n  };\n\n\n   return (\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default EmployeeTable;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    userDetails,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterAdmin,\n    adminList\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        {console.log(adminList)}\n        <UserTable details={adminList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    studentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterStudent\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\n      </Col>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n      <>\n        <Col lg={{ span: 6 }}>\n          <Input placeholder=\"Search\" onChange={(e)=> filterStudent(e.target.value)}/>\n          {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n          </Button> */}\n        </Col>\n        <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n          <PlusCircleOutlined type=\"plus-circle\" /> Add User\n        </Button>\n      </>\n        : null}\n\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <UserTable details={studentList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    parentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterParent\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\n        <UserTable details={parentList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    teacherList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterTeacher\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <UserTable details={teacherList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n","import React from 'react';\nimport { Table } from 'antd';\n\nconst TimeKeepingTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: <b>Subject</b>,\n         dataIndex: 'subject',\n      },\n      {\n        title: <b>1st Quarter</b>,\n        dataIndex: 'Quarter1st',\n     },\n      {\n         title: <b>2nd Quarter</b>,\n         dataIndex: 'Quarter2nd',\n      },\n      {\n         title: <b>3rd Quarter</b>,\n         dataIndex: 'Quarter3rd',\n      },\n      {\n        title: <b>4th Quarter</b>,\n        dataIndex: 'Quarter4th',\n     },\n     {\n        title: <b>Final Grade</b>,\n        dataIndex: 'FinalGrade',\n     },\n     {\n        title: <b>Remarks</b>,\n        dataIndex: 'Remarks',\n     }\n                            \n   ];\n\n   return (\n      <Table columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default TimeKeepingTable;","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst UserEditForm = ({ selectedUser }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedUser}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n         }}\n         render={({ values, touched, setFieldValue }) => (\n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n               <Card className=\"p-70\">\n               <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Name\" name=\"name\">\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Section\" name=\"section\">\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n               </Card>\n                <br/>\n                {console.log(values)}\n               \n                <Row gutter={16}>\n\n{/* <Col span={12}>\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n \n   <Col span={12}>\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n   <Col span={12}>\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col> */}\n</Row>\n             \n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default UserEditForm;","import BaseService from '../../baseService';\nclass AdvisoryService extends BaseService {\n  constructor() {\n    super('advisory');\n  }\n\n  add = advisoryObj => {\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\n  };\n\n  update = advisoryObj => {\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\n  };\n  \n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-advisory/' + id);\n  };\n\n  findAllAdvisory = () => {\n    return this.axiosInstance.get('/');\n  };\n\n}\n\nexport default new AdvisoryService();\n","import BaseService from '../../baseService';\nclass AuditTrailService extends BaseService {\n  constructor() {\n    super('auditTrail');\n  }\n\n  add = auditTrailObj => {\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\n  };\n\n  update = auditTrailObj => {\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\n  };\n\n  findAllAudit = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-autditrail/' + id);\n  };\n\n}\n\nexport default new AuditTrailService();\n","import React, { useState, useEffect } from 'react';\nimport gradesService from './gradesService';\nimport userService from '../user/userService';\nimport advisoryService from '../grade/advisoryService';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst Grade1Action = (initial = { searchRequest: {} }) => {\n  let [studentAdvisor, setStudentAdvisor] = useState({});\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\n  let [gradeDetails, setGradeDetails] = useState( {list : []});\n  let [grade1Details, setGrade1Details] = useState( {list : []});\n  let [grade2Details, setGrade2Details] = useState( {list : []});\n  let [grade3Details, setGrade3Details] = useState( {list : []});\n  let [grade4Details, setGrade4Details] = useState( {list : []});\n  let [grade5Details, setGrade5Details] = useState( {list : []});\n  let [grade6Details, setGrade6Details] = useState( {list : []});\n  let [grade7Details, setGrade7Details] = useState( {list : []});\n  let [grade8Details, setGrade8Details] = useState( {list : []});\n  let [grade9Details, setGrade9Details] = useState( {list : []});\n  let [grade10Details, setGrade10Details] = useState( {list : []});\n\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\n  let [selectedGrade, setSelectedGrade] = useState({});\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\n\n  const upgradeStudent = async values => {\n    let auditTrailObj = {\n    user: JSON.parse(sessionStorage.user),\n    activity : \"Upgrade Student\",\n    date:new Date()}\n    auditTrailService.add(auditTrailObj)\n    let ctr = 0;\n    await selectedListOfStudent.map(async student => {\n    setLoading(true)\n    let result = await gradesService.findyById(student.id);\n\n    let userCurrentGrade = (parseInt(result.data.gradeLevel))\n\n\n    if(userCurrentGrade < 10) {\n      let currentUser = result.data\n      let allStudent = await userService.findAllUser();\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n      let currentStudent = result1[0]\n      currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\n      let response = await userService.update(currentStudent)\n\n      currentUser.status = false;\n      let response1 = await gradesService.update(currentUser)\n\n      let gradeObj = {\n        status: true,\n        student: currentUser.student,\n        gradeLevel: (userCurrentGrade + 1).toString(),\n        section: currentUser.student.section,\n        schoolYear : currentStudent.schoolYear,\n        subjects: [{\n            subjectName: \"English\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Filipino\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Science\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Math\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"MAPEH\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Values\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        }]\n    }\n\n    let response2 = gradesService.add(gradeObj)\n  \n\n    } else {\n      let currentUser = result.data\n      let allStudent = await userService.findAllUser();\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n      let currentStudent = result1[0]\n      currentStudent.gradeLevel = \"Graduate\"\n      let response = await userService.update(currentStudent)\n\n      currentUser.status = false;\n      let response1 = await gradesService.update(currentUser)\n    }\n    ctr= ctr+1\n    if(ctr === selectedListOfStudent.length) {\n      setLoading(false)\n      window.location.reload(false)\n    }\n    })\n\n  };\n\n  const editGrade = async values => {\n    let result = await gradesService.findyById(values._id);\n    let grade = result.data\n\n    if(values.English) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.English.firstQuarter) {\n        firstQuarter = values.English.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\n      }\n\n      if(values.English.secondQuarter) {\n        secondQuarter = values.English.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\n      }\n\n      if(values.English.thirdQuarter) {\n        thirdQuarter = values.English.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\n      }\n\n      if(values.English.fourthQuarter) {\n        fourthQuarter = values.English.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\n      }      \n\n      let newEnglishGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[0].subjectGrade = newEnglishGrade;\n    }    \n\n    if(values.Filipino) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Filipino.firstQuarter) {\n        firstQuarter = values.Filipino.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\n      }\n\n      if(values.Filipino.secondQuarter) {\n        secondQuarter = values.Filipino.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\n      }\n\n      if(values.Filipino.thirdQuarter) {\n        thirdQuarter = values.Filipino.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\n      }\n\n      if(values.Filipino.fourthQuarter) {\n        fourthQuarter = values.Filipino.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\n      }      \n\n      let newFilipinoGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[1].subjectGrade = newFilipinoGrade;\n    }\n\n    if(values.Science) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Science.firstQuarter) {\n        firstQuarter = values.Science.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\n      }\n\n      if(values.Science.secondQuarter) {\n        secondQuarter = values.Science.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\n      }\n\n      if(values.Science.thirdQuarter) {\n        thirdQuarter = values.Science.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\n      }\n\n      if(values.Science.fourthQuarter) {\n        fourthQuarter = values.Science.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\n      }      \n\n      let newScienceGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[2].subjectGrade = newScienceGrade;\n    }\n\n    if(values.Math) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Math.firstQuarter) {\n        firstQuarter = values.Math.firstQuarter\n      } else {\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\n      }\n\n      if(values.Math.secondQuarter) {\n        secondQuarter = values.Math.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\n      }\n\n      if(values.Math.thirdQuarter) {\n        thirdQuarter = values.Math.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\n      }\n\n      if(values.Math.fourthQuarter) {\n        fourthQuarter = values.Math.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\n      }      \n\n      let newMathGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[3].subjectGrade = newMathGrade;\n    }\n\n    if(values.MAPEH) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.MAPEH.firstQuarter) {\n        firstQuarter = values.MAPEH.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\n      }\n\n      if(values.MAPEH.secondQuarter) {\n        secondQuarter = values.MAPEH.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\n      }\n\n      if(values.MAPEH.thirdQuarter) {\n        thirdQuarter = values.MAPEH.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\n      }\n\n      if(values.MAPEH.fourthQuarter) {\n        fourthQuarter = values.MAPEH.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\n      }      \n\n      let newMAPEHGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[4].subjectGrade = newMAPEHGrade;\n    }\n\n    if(values.Values) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Values.firstQuarter) {\n        firstQuarter = values.Values.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\n      }\n\n      if(values.Values.secondQuarter) {\n        secondQuarter = values.Values.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\n      }\n\n      if(values.Values.thirdQuarter) {\n        thirdQuarter = values.Values.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\n      }\n\n      if(values.Values.fourthQuarter) {\n        fourthQuarter = values.Values.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\n      }      \n\n      let newValuesGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[5].subjectGrade = newValuesGrade;\n    }\n\n\n\n    let updateResult = await gradesService.update(grade);\n    window.location.reload();\n  };\n\n  const showGrade = () => {\n    setSelectedGrade({\n        schoolYear: \"\",\n        subjects: {},\n        grade: \"\",\n        student: {},\n        gradeLevel: \"\",\n        section: \"\",\n      })\n    setShowGradeVisible(true)\n  };\n\n  const loadGrade = (gradeObj, idNumber, level = '') => {\n    getCurrentGradeUser(idNumber, level)\n    setSelectedGrade({...gradeObj});\n    setShowGradeVisible(true);\n  };\n\n  const loadSelectedGrade = async (gradeId) => {\n    let response = await gradesService.findyById(gradeId);\n    setSelectedGrade({...response.data});\n    setShowGradeVisible(true);\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const filterCurrentGradeUser = async (gradeLevel) => {\n    setLoading(true)\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      })\n      \n      let response = await advisoryService.findAllAdvisory()\n      let result1=[];\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\n    \n      setSelectedUser(result[0].student)\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([])\n    }\n    setLoading(false)\n  }\n\n  const currentGradeUser = async () => {\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\n    } else {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\n    }\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student)\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      })\n      \n      let response = await advisoryService.findAllAdvisory()\n      let result1=[];\n      if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\n      } else {\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\n      }\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([])\n    }\n\n  }\n\n  const getCurrentGradeUser = async (idNumber, level = '') => {\n    let response = await gradesService.findAllGrades(level);\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student);\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      });\n      setSelectedGradeUser(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedGradeUser([])\n    }\n\n    \n   \n\n  }\n\n  const loadGrades = async () => {\n    let finalOffspring = [];\n    let response = await gradesService.findAllGrades();\n    let parent = await userService.findAllUser();\n    let result = parent.data.filter(user => user.parent);\n    let newArray = [];\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\n    await response.data.map((user) => {\n      offspring.map((off) => {\n        if(user.student.idNumber === off.idNumber){\n          finalOffspring.push(user)\n        }\n      });\n    });\n    newArray = finalOffspring.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.student.firstName,\n          lastName: user.student.lastName,\n          middleName: user.student.middleName,\n          idNumber: user.student.idNumber,\n          contactNumber: user.student.contactNumber,\n          email: user.student.email,\n          section: user.section,\n          gradeLevel: user.gradeLevel,\n          action: \n            <Button onClick={() => loadGrade(user,user.student.idNumber)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      setGradeDetails({\n        list: newArray\n      })\n  }\n\nconst loadGrades1 = async () => {\n    let response = await gradesService.findAllGrades('1');\n    let result = response.data.filter(user => user.gradeLevel === \"1\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '1')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade1Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades2 = async () => {\n    let response = await gradesService.findAllGrades('2');\n    let result = response.data.filter(user => user.gradeLevel === \"2\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '2')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade2Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades3 = async () => {\n    let response = await gradesService.findAllGrades('3');\n    let result = response.data.filter(user => user.gradeLevel === \"3\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '3')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade3Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades4 = async () => {\n    let response = await gradesService.findAllGrades('4');\n    let result = response.data.filter(user => user.gradeLevel === \"4\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '4')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade4Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades5 = async () => {\n    let response = await gradesService.findAllGrades('5');\n    let result = response.data.filter(user => user.gradeLevel === \"5\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '5')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade5Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades6 = async () => {\n    let response = await gradesService.findAllGrades('6');\n    let result = response.data.filter(user => user.gradeLevel === \"6\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '6')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade6Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades7 = async () => {\n    let response = await gradesService.findAllGrades('7');\n    let result = response.data.filter(user => user.gradeLevel === \"7\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '7')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade7Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades8 = async () => {\n    let response = await gradesService.findAllGrades('8');\n    let result = response.data.filter(user => user.gradeLevel === \"8\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '8')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade8Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades9 = async () => {\n    let response = await gradesService.findAllGrades('9');\n    let result = response.data.filter(user => user.gradeLevel === \"9\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '9')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade9Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades10 = async () => {\n    let response = await gradesService.findAllGrades('10');\n    let result = response.data.filter(user => user.gradeLevel === \"10\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '10')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade10Details({\n            list: newArray\n          })\n  }\n\n  useEffect(() => {\n    loadGrades1();\n    loadGrades2();\n    loadGrades3();\n    loadGrades4();\n    loadGrades5();\n    loadGrades6();\n    loadGrades7();\n    loadGrades8();\n    loadGrades9();\n    loadGrades10();\n    loadGrades();\n    currentGradeUser();\n    getListOfTeacher();\n  }, []);\n\n\n  return {\n    loadGrades1,\n    grade2Details,\n    grade3Details,\n    grade4Details,\n    grade5Details,\n    grade6Details,\n    grade7Details,\n    grade8Details,\n    grade9Details,\n    grade10Details,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade1Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    gradeDetails,\n    selectedUserGrade,\n    showAllGradeVisible, \n    setShowAllGradeVisible,\n    selectedUser,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    studentAdvisor,\n    filterCurrentGradeUser\n  }\n};\n\nexport default Grade1Action;\n","import React, { useState, useEffect } from 'react';\nimport userService from '../user/userService';\nimport advisoryService from '../grade/advisoryService';\nimport auditTrailService from '../auditTrail/auditTrailService';\nconst TeacherAction = (initial = { searchRequest: {} }) => {\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\n  let [studentAdvisor, setStudentAdvisor] = useState({});\n\n  const addAdvisor = async (values, gradeLevel) => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Added Advisor\",\n      date:new Date()}\n    let advisorTeacher = await userService.findyById(values.advisor)\n    let finalAddValue = {\n      gradeLevel: gradeLevel,\n      teacher: advisorTeacher.data\n    }\n    let response = await advisoryService.add(finalAddValue)\n    window.location.reload()\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const getListOfAssignedTeacherGrade1 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\n    setselectedAdvisoryAssignedGrade1(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade2 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\n    setselectedAdvisoryAssignedGrade2(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade3 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\n    setselectedAdvisoryAssignedGrade3(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade4 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\n    setselectedAdvisoryAssignedGrade4(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade5 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\n    setselectedAdvisoryAssignedGrade5(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade6 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\n    setselectedAdvisoryAssignedGrade6(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade7 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\n    setselectedAdvisoryAssignedGrade7(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade8 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\n    setselectedAdvisoryAssignedGrade8(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade9 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\n    setselectedAdvisoryAssignedGrade9(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade10 = async () => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\n    setselectedAdvisoryAssignedGrade10(result[0])\n  };\n\n  const hideAdvisor = async () => {\n    setshowAdvisorVisible(false)\n  };\n\n  const showAdvisor = async (gradeLevel) => {\n    let response = await advisoryService.findAllAdvisory();\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\n    if(result.length >= 1){\n        setselectedAdvisoryAssgined(result[0].subjects)\n    } else {\n        setselectedAdvisoryAssgined({})\n    }\n    setshowAdvisorVisible(true)\n  };\n\n  const getStudentAdvisor = async () => {\n    let response = await advisoryService.findAllAdvisory()\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\n    setStudentAdvisor(result[0])\n  };\n\n  useEffect(() => {\n    getStudentAdvisor();\n    getListOfTeacher();\n    getListOfAssignedTeacherGrade1();\n    getListOfAssignedTeacherGrade2();\n    getListOfAssignedTeacherGrade3();\n    getListOfAssignedTeacherGrade4();\n    getListOfAssignedTeacherGrade5();\n    getListOfAssignedTeacherGrade6();\n    getListOfAssignedTeacherGrade7();\n    getListOfAssignedTeacherGrade8();\n    getListOfAssignedTeacherGrade9();\n    getListOfAssignedTeacherGrade10();\n  }, []);\n\n\n  return {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade1,\n    selectedAdvisoryAssignedGrade2,\n    selectedAdvisoryAssignedGrade3,\n    selectedAdvisoryAssignedGrade4,\n    selectedAdvisoryAssignedGrade5,\n    selectedAdvisoryAssignedGrade6,\n    selectedAdvisoryAssignedGrade7,\n    selectedAdvisoryAssignedGrade8,\n    selectedAdvisoryAssignedGrade9,\n    selectedAdvisoryAssignedGrade10,\n    selectedAdvisoryAssgined,\n    studentAdvisor\n  }\n};\n\nexport default TeacherAction;\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\n\nimport UserForm from './userDetailsForm'\nimport UserTable from './gradeTable'\nimport GradeAction from '../grade/gradeAction'\nimport AdvisorAction from '../grade/advisoryAction'\nconst { Option } = Select;\n\n\nconst EmployeePage = () => {\n\n  let {\n    selectedUserGrade,\n    showAllGradeVisible, \n    setShowAllGradeVisible,\n    selectedUser,\n    studentAdvisor,\n    filterCurrentGradeUser,\n    loading\n  } = GradeAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row>\n          <Col span={24}>\n            <Card className=\"ml-15\" title={\n              <Typography.Title>Student Details</Typography.Title>\n            }>\n              <Row>\n                <Col span={12}>\n                  <p>\n                    <b>Full Name: </b>{selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName: null}\n                  </p>\n                  <p>\n                    <b>Grade Level: </b>{JSON.parse(sessionStorage.user).gradeLevel}\n                  </p>\n                  <p>\n                    <b>Section: </b>{selectedUser ? selectedUser.section: null}\n                  </p>\n                </Col>\n                <Col span={12}>\n                  <p>\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName: null}\n                  </p>\n                  <p>\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber: null}\n                  </p>\n                  <b>Yr./Lvl: </b>\n                  <Select className=\"ml-15\" placeholder=\"Select Yr./Level\" onChange={(value)=> filterCurrentGradeUser(value) }>\n                    <Option value=\"1\">1</Option>\n                    <Option value=\"2\">2</Option>\n                    <Option value=\"3\">3</Option>\n                    <Option value=\"4\">4</Option>\n                    <Option value=\"5\">5</Option>\n                    <Option value=\"6\">6</Option>\n                    <Option value=\"7\">7</Option>\n                    <Option value=\"8\">8</Option>\n                    <Option value=\"9\">9</Option>\n                    <Option value=\"10\">10</Option>\n                  </Select>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col lg={{ span: \"24\" }}>\n            <UserTable details={selectedUserGrade ? selectedUserGrade: []}/>\n          </Col>\n        </Row>\n      </Spin>\n    </Card>   \n  );\n}\n\nexport default EmployeePage;\n\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\nconst Grade1EditForm = ({ upgradeStudent,add,update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel   }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedGrade}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n         \n            let newValues = {\n               _id : values._id\n            };\n            let English = {};\n            let Filipino = {};\n            let Science = {};\n            let Math = {};\n            let MAPEH = {};\n            let Values = {};\n            if(values.English1 || values.English2 || values.English3 || values.English4) {\n               English = {\n                  firstQuarter:values.English1,\n                  secondQuarter:values.English2,\n                  thirdQuarter:values.English3,\n                  fourthQuarter:values.English4\n               }\n               newValues.English = English;\n            }\n            if(values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\n               Filipino = {\n                  firstQuarter:values.Filipino1,\n                  secondQuarter:values.Filipino2,\n                  thirdQuarter:values.Filipino3,\n                  fourthQuarter:values.Filipino4\n               }\n               newValues.Filipino = Filipino;\n            }\n            if(values.Science1 || values.Science2 || values.Science3 || values.Science4) {\n               Science = {\n                  firstQuarter:values.Science1,\n                  secondQuarter:values.Science2,\n                  thirdQuarter:values.Science3,\n                  fourthQuarter:values.Science4\n               }\n               newValues.Science = Science;\n            }\n            if(values.Math1 || values.Math2 || values.Math3 || values.Math4) {\n               Math = {\n                  firstQuarter:values.Math1,\n                  secondQuarter:values.Math2,\n                  thirdQuarter:values.Math3,\n                  fourthQuarter:values.Math4\n               }\n               newValues.Math = Math;\n            }\n            if(values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\n               MAPEH = {\n                  firstQuarter:values.MAPEH1,\n                  secondQuarter:values.MAPEH2,\n                  thirdQuarter:values.MAPEH3,\n                  fourthQuarter:values.MAPEH4\n               }\n               newValues.MAPEH = MAPEH;\n            }\n            if(values.Values1 || values.Values2 || values.Values3 || values.Values4) {\n               Values = {\n                  firstQuarter:values.Values1,\n                  secondQuarter:values.Values2,\n                  thirdQuarter:values.Values3,\n                  fourthQuarter:values.Values4\n               }\n               newValues.Values = Values;\n            }\n            update(newValues)\n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\" >\n               <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input disabled={true} value={values.student.idNumber}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n               <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item label=\"Name\" name=\"name\">\n                           <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\n                        <Input disabled={true} name=\"schoolYear\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <>      \n                    <Row gutter={16}>\n                     {\n                     (selectedTeacherAssignedGrade && selectedTeacherAssignedGrade.subjects && selectedTeacherAssignedGrade.subjects[0].teacher && selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                     ?                      \n                     <Col span={12}>\n                     <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"1st Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"English1\" defaultValue={values.subjects[0].subjectGrade.firstQuarter}/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"2nd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[0].subjectGrade.secondQuarter} name=\"English2\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"3rd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[0].subjectGrade.thirdQuarter} name=\"English3\"/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"4th Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[0].subjectGrade.fourthQuarter} name=\"English4\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                  </Card>\n               </Col>:\n                     null}\n                  {\n                (selectedTeacherAssignedGrade.subjects[1].teacher && selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ? \n                     <Col span={12}>\n                     <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"1st Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Filipino1\" defaultValue={values.subjects[1].subjectGrade.firstQuarter}/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"2nd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[1].subjectGrade.secondQuarter} name=\"Filipino2\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"3rd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[1].subjectGrade.thirdQuarter} name=\"Filipino3\"/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"4th Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[1].subjectGrade.fourthQuarter} name=\"Filipino4\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                  </Card>\n\n               </Col>\n                  : null}\n                     \n                  </Row>    \n                     <Row gutter={16}>\n                     {\n(selectedTeacherAssignedGrade.subjects[2].teacher && selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                     ?                      \n                     <Col span={12}>\n                     <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"1st Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Science1\" defaultValue={values.subjects[2].subjectGrade.firstQuarter}/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"2nd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[2].subjectGrade.secondQuarter} name=\"Science2\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"3rd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[2].subjectGrade.thirdQuarter} name=\"Science3\"/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"4th Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[2].subjectGrade.fourthQuarter} name=\"Science4\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                  </Card>\n               </Col>:\n                     null}\n                  {\n  (selectedTeacherAssignedGrade.subjects[3].teacher && selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ? \n                     <Col span={12}>\n                     <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"1st Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Math1\" defaultValue={values.subjects[3].subjectGrade.firstQuarter}/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"2nd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[3].subjectGrade.secondQuarter} name=\"Math2\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"3rd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[3].subjectGrade.thirdQuarter} name=\"Math3\"/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"4th Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[3].subjectGrade.fourthQuarter} name=\"Math4\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                  </Card>\n               </Col>\n                  : null}\n                     \n                  </Row>    \n                  <Row gutter={16}>\n                     {\n  (selectedTeacherAssignedGrade.subjects[4].teacher && selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                     ?                      \n                     <Col span={12}>\n                     <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"1st Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"MAPEH1\" defaultValue={values.subjects[4].subjectGrade.firstQuarter} />\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"2nd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[4].subjectGrade.secondQuarter} name=\"MAPEH2\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"3rd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[4].subjectGrade.thirdQuarter} name=\"MAPEH3\"/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"4th Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[4].subjectGrade.fourthQuarter} name=\"MAPEH4\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                  </Card>\n               </Col>:\n                     null}\n                  {\n              (selectedTeacherAssignedGrade.subjects[5].teacher && selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\n                  ? \n                     <Col span={12}>\n                     <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"1st Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Values1\" defaultValue={values.subjects[4].subjectGrade.firstQuarter}/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"2nd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[5].subjectGrade.secondQuarter} name=\"Values2\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                     <Row gutter={16}>\n                     <Col span={12}>\n                     <Form.Item label=\"3rd Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[5].subjectGrade.thirdQuarter} name=\"Values3\"/>\n                     </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"4th Q\" name=\"values\">\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[5].subjectGrade.fourthQuarter} name=\"Values4\"/>\n                     </Form.Item>\n                     </Col>\n                     </Row>\n                  </Card>\n               </Col>\n                  : null}\n                     \n                  </Row>\n                  </>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default Grade1EditForm;","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={{}}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            add(values, gradeLevel) \n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"English\" name=\"english\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\n                  {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                  \n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Filipino\" name=\"filipino\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"Science\" name=\"science\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Math\" name=\"math\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Values\" name=\"values\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default TeacherForm;","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={{}}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            add(values, gradeLevel)\n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n         <Row gutter={16}>\n         <Col span={24}>\n            {console.log(selectedTeacherAssgined)}\n            <Form.Item label=\"Advisor\" name=\"advisor\">\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\n                  {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                  \n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default TeacherForm;","import React from 'react';\nimport { Table } from 'antd';\n\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\n\n   const columns = [\n      {\n         title: <b>Id Number</b>,\n         dataIndex: 'idNumber',\n      },\n      {\n         title: <b>First Name</b>,\n         dataIndex: 'firstName',\n      },\n      {\n         title: <b>Middle Name</b>,\n         dataIndex: 'middleName',\n      },\n      {\n         title: <b>Last Name</b>,\n         dataIndex: 'lastName',\n      }, \n      {\n        title: <b>Contact Number</b>,\n        dataIndex: 'contactNumber',\n      },  \n      {\n        title: <b>Email</b>,\n        dataIndex: 'email',\n      },   \n      {\n        title: <b>Section</b>,\n        dataIndex: 'section',\n      },   \n      {\n        title: <b>Action</b>,\n        dataIndex: 'action',\n      },                            \n   ];\n\n   const rowUserSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n         setSelectedListOfStudent(selectedRows)\n      }\n  };\n\n\n   return (\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default GradeTable;","import BaseService from '../../baseService';\nclass TeacherService extends BaseService {\n  constructor() {\n    super('teacher');\n  }\n\n  add = teacherObj => {\n    return this.axiosInstance.post('/create-teacher', teacherObj);\n  };\n\n  update = teacherObj => {\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\n  };\n  \n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-teacher/' + id);\n  };\n\n  findAllTeacher = () => {\n    return this.axiosInstance.get('/');\n  };\n\n}\n\nexport default new TeacherService();\n","import React, { useState, useEffect } from 'react';\nimport userService from '../user/userService';\nimport teacherService from '../grade/teacherService';\nconst TeacherAction = (initial = { searchRequest: {} }) => {\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState({});\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\n\n  const add = async (values, gradeLevel) => {\n    let English = await userService.findyById(values.english)\n    let Filipino = await userService.findyById(values.filipino)\n    let Science = await userService.findyById(values.science)\n    let Math = await userService.findyById(values.math)\n    let Values = await userService.findyById(values.values)\n    let Mapeh = await userService.findyById(values.mapeh)\n    let finalAddValue = {\n        gradeLevel : gradeLevel,\n        subjects: [{\n            subjectName: \"English\",\n            teacher: English.data\n            },\n            {\n            subjectName: \"Filipino\",\n            teacher: Filipino.data\n            },\n            {\n            subjectName: \"Science\",\n            teacher: Science.data\n            },   \n            {\n            subjectName: \"Math\",\n            teacher: Math.data\n            },   \n            {\n            subjectName: \"Values\",\n            teacher: Values.data\n            },     \n            {\n            subjectName: \"Mapeh\",\n            teacher: Mapeh.data\n            },                                                    \n        ]\n    }\n    let response = teacherService.add(finalAddValue)\n    window.location.reload()\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const getListOfAssignedTeacherGrade1 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\n    setSelectedTeacherAssignedGrade1(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade2 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\n    setSelectedTeacherAssignedGrade2(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade3 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\n    setSelectedTeacherAssignedGrade3(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade4 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\n    setSelectedTeacherAssignedGrade4(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade5 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\n    setSelectedTeacherAssignedGrade5(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade6 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\n    setSelectedTeacherAssignedGrade6(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade7 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\n    setSelectedTeacherAssignedGrade7(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade8 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\n    setSelectedTeacherAssignedGrade8(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade9 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\n    setSelectedTeacherAssignedGrade9(result[0])\n  };\n\n  const getListOfAssignedTeacherGrade10 = async () => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\n    setSelectedTeacherAssignedGrade10(result[0])\n  };\n\n  const hideTeacher = async () => {\n    setShowTeacherVisible(false)\n  };\n\n  const showTeacher = async (gradeLevel) => {\n    let response = await teacherService.findAllTeacher();\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\n    if(result.length >= 1){\n        setSelectedTeacherAssgined(result[0].subjects)\n    } else {\n        setSelectedTeacherAssgined({})\n    }\n    setShowTeacherVisible(true)\n  };\n\n  useEffect(() => {\n    getListOfTeacher();\n    getListOfAssignedTeacherGrade1();\n    getListOfAssignedTeacherGrade2();\n    getListOfAssignedTeacherGrade3();\n    getListOfAssignedTeacherGrade4();\n    getListOfAssignedTeacherGrade5();\n    getListOfAssignedTeacherGrade6();\n    getListOfAssignedTeacherGrade7();\n    getListOfAssignedTeacherGrade8();\n    getListOfAssignedTeacherGrade9();\n    getListOfAssignedTeacherGrade10();\n  }, []);\n\n\n  return {\n    selectedTeacher,\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade1,\n    selectedTeacherAssignedGrade2,\n    selectedTeacherAssignedGrade3,\n    selectedTeacherAssignedGrade4,\n    selectedTeacherAssignedGrade5,\n    selectedTeacherAssignedGrade6,\n    selectedTeacherAssignedGrade7,\n    selectedTeacherAssignedGrade8,\n    selectedTeacherAssignedGrade9,\n    selectedTeacherAssignedGrade10,\n    selectedTeacherAssgined\n  }\n};\n\nexport default TeacherAction;\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport AdvisoryForm from './advisoryForm'\n\nimport GradeAction from './gradeAction'\n\nimport GradeTable from './gradeTable'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport TeacherAction from './teacherAction';\nimport AdvisorAction from './advisoryAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade1Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade1,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade1,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?       \n        <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button> : null\n        }\n              {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 1\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                    Advisor for grade 1\n                  </Typography.Title>\n              }\n              width={500}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"1\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeAction from './gradeAction'\nimport StudentGradeTable from '../userDetails/gradeTable'\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade2Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade2,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade2,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\n          <PlusCircleOutlined type=\"add-circle\" /> Add teacher\n             </Button>: null\n             }\n                           {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\n          <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          < RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 2\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 2\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"2\"}/>\n          </Drawer>\n    </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade3Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade3,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade3,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                  {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n      \n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher}  gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 3\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 3\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"3\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade4Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade4,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade4,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 4\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 4\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"4\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade5Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade5,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade5,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 5\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 5\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"5\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade6Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade6,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade6,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 6\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 6\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"6\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade7Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade7,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade7,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 7\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 7\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"7\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade8Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade8,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade8,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 8\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 8\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"8\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade9Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade9,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade9,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 9\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 9\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"9\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\n\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade10Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade10,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade10,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n        <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 10\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"}/>\n          </Drawer>\n    \n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 10\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"10\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n","import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst Grade1EditForm = ({selectedOffspring }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedOffspring}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n                  {console.log(selectedOffspring)}\n               <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n               <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item label=\"Name\" name=\"name\">\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n\n                  <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\n                        <Input disabled={true} name=\"schoolYear\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>     \n                  <Row gutter={16}>\n                     <Col span={16}>\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\n                        <Input disabled={true} name=\"gradeLevel\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>                     \n                  <Row gutter={16}>\n\n                  <Col span={12}>\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                  <Col span={12}>\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                  <Col span={12}>\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                  <Col span={12}>\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n                   \n                     <Col span={12}>\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n\n                     <Col span={12}>\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"1st Q\" name=\"values\">\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"2nd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                           <Row gutter={16}>\n                           <Col span={12}>\n                           <Form.Item label=\"3rd Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           <Col span={12}>\n                           <Form.Item label=\"4th Q\" name=\"values\">\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\n                           </Form.Item>\n                           </Col>\n                           </Row>\n                        </Card>\n                     </Col>\n                  </Row>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default Grade1EditForm;","import React from 'react';\nimport { Table } from 'antd';\n\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\n\n   const columns = [\n      {\n         title: <b>Id Number</b>,\n         dataIndex: 'idNumber',\n      },\n      {\n         title: <b>First Name</b>,\n         dataIndex: 'firstName',\n      },\n      {\n         title: <b>Middle Name</b>,\n         dataIndex: 'middleName',\n      },\n      {\n         title: <b>Last Name</b>,\n         dataIndex: 'lastName',\n      }, \n      {\n        title: <b>Contact Number</b>,\n        dataIndex: 'contactNumber',\n      },  \n      {\n        title: <b>Email</b>,\n        dataIndex: 'email',\n      },   \n      {\n        title: <b>Grade Level</b>,\n        dataIndex: 'gradeLevel',\n      },   \n      {\n        title: <b>Section</b>,\n        dataIndex: 'section',\n      },   \n      {\n        title: <b>Action</b>,\n        dataIndex: 'action',\n      },                            \n   ];\n\n   const rowUserSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n         setSelectedListOfStudent(selectedRows)\n      }\n  };\n\n\n   return (\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default GradeTable;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport GradeForm from '../offspring/offspringForm'\n\nimport GradeAction from '../grade/gradeAction'\n\nimport OffspringTable from '../offspring/offspringTable'\n\nconst OffspringPage = () => {\n\n\n  let {\n    selectedGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    gradeDetails\n  } = GradeAction({});\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 12 }}>\n        <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\n      </Col>\n      <Col lg={{ span: 12 }}>\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <OffspringTable details={gradeDetails.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  \n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm selectedOffspring={selectedGrade}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default OffspringPage;\n\n","import React from 'react';\nimport { Table } from 'antd';\n\nconst TimeKeepingTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: <b>Name</b>,\n         dataIndex: 'name',\n      },\n      {\n        title: <b>ID Number</b>,\n        dataIndex: 'idNumber',\n     },\n      {\n         title: <b>Time In</b>,\n         dataIndex: 'timeIn',\n      },\n      {\n         title: <b>Time Out</b>,\n         dataIndex: 'timeOut',\n      },\n                            \n   ];\n\n   return (\n      <Table columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\nclass TimeKeepingService extends BaseService {\n  constructor() {\n    super('timekeeping');\n  }\n\n  add = timekeepingObj => {\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\n  };\n\n  update = timekeepingObj => {\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\n  };\n\n  findAllTimekeeping = () => {\n    return this.axiosInstance.get('/');\n  };\n\n  findyById = (id) => {\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\n  };\n\n}\n\nexport default new TimeKeepingService();\n","import React, { useState, useEffect } from 'react';\nimport TimekeepingService from './timeKeepingService';\nimport moment from 'moment';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\n  let [timeIn, setTimeIn] = useState(new Date());\n  let [timeOut, setTimeOut] = useState(new Date())\n\n  const filterUsers = async (date) => {\n    if(date){\n      let response = await TimekeepingService.findAllTimekeeping();\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\n      let newArray = await result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.student.firstName + \" \" + user.student.lastName,\n          idNumber: user.student.idNumber,\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n      }\n      })\n      setUserDetails({list: newArray});\n    } else {\n      let response = await TimekeepingService.findAllTimekeeping();\n      let newArray = await response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.student.firstName + \" \" + user.student.lastName,\n          idNumber: user.student.idNumber,\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n      }\n      })\n      setUserDetails({list: newArray});\n    } \n\n  }\n\nconst loadUsers = async () => {\n    let response = await TimekeepingService.findAllTimekeeping();\n    let newArray = response.data.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        name: user.student.firstName + \" \" + user.student.lastName,\n        idNumber: user.student.idNumber,\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n    }\n    })\n    setUserDetails({list: newArray});\n  }\n\n  useEffect(() => {\n    loadUsers();\n}, []);\n\n\n  return {\n    userDetails,\n    filterUsers\n  }\n};\n\nexport default UserAction;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\n\n\n\nimport TimekeepingTable from './timeKeepingTable'\nimport AttendanceAction from './AttendanceAction'\nconst {Option} = Select;\n\nconst TimekeepingPage = () => {\n    let{\n        userDetails  ,\n        filterUsers\n    } = AttendanceAction({});\n  \n  return (\n    <Card className=\"h-82 p-70\">\n      <Row className=\"mt-15\">\n        <Col lg={{ span: 14 }}>\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\n        </Col>\n        <Col lg={{ span: 6 }}>\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\n          <Option value=\"January\">January</Option>\n          <Option value=\"Febuary\">Febuary</Option>\n          <Option value=\"March\">March</Option>\n          <Option value=\"April\">April</Option>\n          <Option value=\"May\">May</Option>\n          <Option value=\"June\">June</Option>\n          <Option value=\"July\">July</Option>\n          <Option value=\"August\">August</Option>\n          <Option value=\"September\">September</Option>\n          <Option value=\"October\">October</Option>\n          <Option value=\"November\">November</Option>\n          <Option value=\"December\">December</Option>\n        </Select>\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\n          <Option value=\"1\">1</Option>\n          <Option value=\"2\">2</Option>\n          <Option value=\"3\">3</Option>\n          <Option value=\"4\">4</Option>\n          <Option value=\"5\">5</Option>\n          <Option value=\"6\">6</Option>\n          <Option value=\"7\">7</Option>\n          <Option value=\"8\">8</Option>\n          <Option value=\"9\">9</Option>\n          <Option value=\"10\">10</Option>\n          <Option value=\"11\">11</Option>\n          <Option value=\"12\">12</Option>\n          <Option value=\"13\">13</Option>\n          <Option value=\"14\">14</Option>\n          <Option value=\"15\">15</Option>\n          <Option value=\"16\">16</Option>\n          <Option value=\"17\">17</Option>\n          <Option value=\"18\">18</Option>\n          <Option value=\"19\">19</Option>\n          <Option value=\"20\">20</Option>\n          <Option value=\"21\">21</Option>\n          <Option value=\"22\">22</Option>\n          <Option value=\"23\">23</Option>\n          <Option value=\"24\">24</Option>\n          <Option value=\"25\">25</Option>\n          <Option value=\"26\">26</Option>\n          <Option value=\"27\">27</Option>\n          <Option value=\"28\">28</Option>\n          <Option value=\"29\">29</Option>\n          <Option value=\"30\">30</Option>\n          <Option value=\"31\">31</Option>\n        </Select>\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\n        </Col>\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <TimekeepingTable details={userDetails.list} />\n      </Col>\n    </Row>\n  </Card>\n\t\n      \n  );\n}\n\nexport default TimekeepingPage;\n\n","import React from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, Spin } from 'antd';\n\nconst LoginForm = ({login}) => {\n   return (\n      <Formik\n         initialValues={{\n            username: \"\",\n            password: \"\"\n         }}\n         enableReinitialize={true}\n         onSubmit={async (values, actions) => {\n             login(values)\n            // await login(values)\n            // actions.setSubmitting(false);\n         }}\n         render={\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\n               <Spin spinning={isSubmitting}>\n                  <Form className=\"mt-10P\">\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              USERNAME:\n                           </b>\n                           <Form.Item name=\"username\">\n                              <Input name=\"username\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              PASSWORD:\n                           </b>\n                           <Form.Item name=\"password\">\n                              <Input.Password name=\"password\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\n                              Login\n                        </Button>\n                        </Col>\n                     </Row>\n                  </Form>\n               </Spin>\n            )}\n      />\n   );\n}\n\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\n\nimport '../../App.css';\nimport LoginForm from './loginForm';\nimport UserAction from '../user/userAction'\n\nconst version = process.env.REACT_APP_VERSION\n\n\nconst Login = () => {\n    let [showLogin, setShowLogin] = useState(false);\n    let [showContact, setShowContact] = useState(false);\n    let [showAboutUs, setShowAboutUs] = useState(false);\n    let [showHome, setShowHome] = useState(true);\n    const {Content} = Layout;\n    let {\n        login,\n        loginCounter\n      } = UserAction({});\n    \n    const loginUser = async (credentials) => {\n        login(credentials);\n    }\n\n    const loginFunction = async () => {\n        setShowHome(false)\n        setShowLogin(true)\n    }\n\n    const contactFunction = async () => {\n        setShowHome(false)\n        setShowContact(true)\n    }\n\n    const aboutUsFunction = async () => {\n        setShowHome(false)\n        setShowAboutUs(true)\n    }\n\n    return (\n        <Layout className=\"login\">\n            {/* Landing Page */}\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\n                <Row className=\"center\">\n                    <Col>\n                        <Button className=\"btn-home mr-10\">HOME</Button>\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\n                    </Col>\n                </Row>\n            </Content> : null}\n            \n\n            {/* Login Page */}\n            {showLogin \n            \n            ?             <Content className=\"contentLogin mt-5P\">\n            <div className=\"center mb-15\">\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\n            </div>\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\n            <Row className=\"mt-10 center\">\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\n                    <LoginForm login={loginUser}/>\n                </Col>\n            </Row>\n        </Content> : null}\n\n\n             {/* Contact Page */}\n            {showContact ?            <Content className=\"contentLogin mt-35\">\n                <div className=\"center mb-40\">\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\n                </div>\n                <Typography className=\"text-center\">\n                    <b>Telephone Number:</b> 8 245 4148<br/>\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\n                    <b>Email Address: </b>\n                    <u className=\"blue\">\n                        admission.snss@gmail.com\n                    </u>\n                </Typography>\n            </Content>:null}\n \n\n\n            {/* About Page */}\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\n                <div className=\"center h-70 mb-35\">\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\n                </div>\n                <Typography className=\"text-center\">\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \n                </Typography>\n            </Content> : null}\n           \n        </Layout>\n    );\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nimport { Link } from 'react-router-dom';\n\nimport '../App.css';\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\n\nimport {\n    UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\n  } from '@ant-design/icons';\n  const { SubMenu } = Menu;\nconst SiderMenu = ({theme, collapsed}) => {\n    return ( \n        <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\n             {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n             <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\n            {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 1 Management</span>\n                    <Link to={'/grade1'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 2 Management</span>\n                    <Link to={'/grade2'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 3 Management</span>\n                    <Link to={'/grade3'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 4 Management</span>\n                    <Link to={'/grade4'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 5 Management</span>\n                    <Link to={'/grade5'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 6 Management</span>\n                    <Link to={'/grade6'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 7 Management</span>\n                    <Link to={'/grade7'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 8 Management</span>\n                    <Link to={'/grade8'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 9 Management</span>\n                    <Link to={'/grade9'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Grade 10 Management</span>\n                    <Link to={'/grade10'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n            </SubMenu> : null}\n           \n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                <Menu.Item key=\"dashboard\" className=\"menus\">\n                    <DashboardOutlined />\n                    <span className=\"fs-13\">Dashboard</span>\n                    <Link to={'/dashboard'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n              \n           \n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n             <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">List Of Admin</span>\n                    <Link to={'/admin'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">List Of Parent</span>\n                    <Link to={'/parent'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">List Of Student</span>\n                    <Link to={'/student'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">List Of Teacher</span>\n                    <Link to={'/teacher'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n            </SubMenu> : null}\n\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \n                <Menu.Item key=\"timekeeping\" className=\"menus\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Student Attendance</span>\n                    <Link to={'/timekeeping'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n              \n                {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?  \n                <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\n                    <UserOutlined/>\n                    <span className=\"fs-13\">Student Grade</span>\n                    <Link to={'/offspring'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                <Menu.Item key=\"auditTrail\" className=\"menus\">\n                   <AuditOutlined />\n                    <span className=\"fs-13\">Audit Trail</span>\n                    <Link to={'/auditTrail'} className=\"nav-link\" />\n                </Menu.Item>  : null}\n            </Menu>\n    );\n}\n \nexport default SiderMenu;","import {createContext} from 'react';\n\n\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\nimport {  Menu } from 'antd';\nimport { UserContext } from './userContext';\n\nimport {\n    LogoutOutlined\n  } from '@ant-design/icons';\n\n\nconst UserMenu = () => {\n\n   const { setLoggedUser } = useContext(UserContext);\n\n   const logout = async () => {\n    sessionStorage.removeItem('user');\n    window.location.reload(false);\n    //   setLoggedUser(null);\n    //   sessionStorage.removeItem('token');\n    //   sessionStorage.removeItem('user');\n   }\n\n   return (\n      <Menu className=\"mt-20\">\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\n            <LogoutOutlined />Logout\n         </Menu.Item>\n      </Menu>\n   );\n}\n\nexport default UserMenu;","import React from 'react';\nimport { Table } from 'antd';\n\nconst AuditTrailTable = ({ details }) => {\n\n   const columns = [\n      {\n         title: 'Name',\n         dataIndex: 'name',\n      },\n      {\n        title: 'Activity',\n        dataIndex: 'activity',\n     },\n      {\n         title: 'Date',\n         dataIndex: 'date',\n      },\n                            \n   ];\n\n   return (\n      <Table columns={columns} dataSource={details}\n      />\n   );\n}\n\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\n\n    const addAudit = async values => {\n    let finalAudit = {\n        user : values.user,\n        activity: values.activity,\n        date: values.date,\n    }\n    let response = auditTrailService.add(finalAudit)\n    };\n    \n    const getListOfAudit = async () => {\n      let response = await auditTrailService.findAllAudit();\n      let newArray = response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.user.firstName + \" \" + user.user.lastName,\n          date: moment(user.date).format('MMMM Do YYYY'),\n          activity: user.activity,\n        }\n      })\n      setAuditTrailDetails({list: newArray})\n    };\n\n  useEffect(() => {\n    getListOfAudit();\n  }, []);\n\n\n  return {\n    addAudit,\n    auditTrailDetails\n  }\n};\n\nexport default AuditTrailAction;","import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\n\n\nimport AuditTrailTable from './auditTrailTable'\nimport AuditTrailAction from './auditTrailAction'\nconst {Option} = Select;\n\nconst AuditTrailPage = () => {\n    let{\n        auditTrailDetails,\n    } = AuditTrailAction({});\n  \n  return (\n    <Card className=\"h-82 p-70\">\n      <Row className=\"mt-15\">\n        <Col lg={{ span: 12 }}>\n          <Typography.Title level={3} className=\"ml-15\">Audit Trail</Typography.Title>\n        </Col>\n        {/* <Col lg={{ span: 24 }}>\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\n          </Button>\n        </Col> */}\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <AuditTrailTable details={auditTrailDetails.list} />\n      </Col>\n    </Row>\n  </Card>\n\t\n      \n  );\n}\n\nexport default AuditTrailPage;\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport User from \"./components/user/user.js\";\nimport Student from \"./components/user/student.js\";\nimport Parent from \"./components/user/parent.js\";\nimport Teacher from \"./components/user/teacher.js\";\nimport UserDetail from \"./components/userDetails/userDetails.js\";\nimport Grade1 from \"./components/grade/grade1\";\nimport Grade2 from \"./components/grade/grade2\";\nimport Grade3 from \"./components/grade/grade3\";\nimport Grade4 from \"./components/grade/grade4\";\nimport Grade5 from \"./components/grade/grade5\";\nimport Grade6 from \"./components/grade/grade6\";\nimport Grade7 from \"./components/grade/grade7\";\nimport Grade8 from \"./components/grade/grade8\";\nimport Grade9 from \"./components/grade/grade9\";\nimport Grade10 from \"./components/grade/grade10\";\nimport Offspring from \"./components/offspring/offspring.js\";\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\nimport QuarterService from \"../src/components/quarter/quarterService\"\n// import Item from \"./components/item/item.js\";\nimport Login from \"./components/login/login.js\";\nimport SiderMenu from \"./components/siderMenu\"\nimport UserMenu from \"./components/userMenu\"\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\n\nimport { UserContext } from './components/userContext'\n\nconst { Option } = Select;\n\nconst App = () => {\n  const { Content, Sider, Header } = Layout;\n  let [loggedUser, setLoggedUser] = useState(null);\n  let [collapsed, setCollapsed] = useState(false);\n  let [theme] = useState(\"dark\");\n\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\n\n  useEffect(() => {\n    if (sessionStorage.user) {\n      setLoggedUser(JSON.parse(sessionStorage.user));\n    }\n  }, []);\n\n  const onChangeFunction = async (value) => {\n    // console.log(value)\n    let response = await QuarterService.update({_id: sessionStorage._id, quarter : value})\n    sessionStorage.setItem(\"quarter\", value)\n    window.location.reload(false)\n    // console.log(sessionStorage._id)\n    // console.log(sessionStorage.quarter)\n  }\n\n  return (\n    <UserContext.Provider value={providerValue}>\n      {\n        loggedUser ?\n          <BrowserRouter>\n            <Layout>\n              <BrowserRouter>\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\n                  <Sider className=\"sider\" collapsed={collapsed}>\n                    <Header className=\"sideBarHeader text-white\">\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\n                    </Header>\n                    <Content className=\"mt-20\">\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\n                    </Content>\n                  </Sider>\n                : null}\n                <Layout>\n                  <Header className=\"bg-white\">\n                    <a href onClick={() => {\n                      setCollapsed(!collapsed)\n                    }}>\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\n                    </a>\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ?                     <span className=\"left\">\n                      Quarter: &nbsp;\n                    <Select onChange={\n                      (value)=> \n                      onChangeFunction(value)\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\n                              <Option value=\"1\">1</Option>\n                              <Option value=\"2\">2</Option>\n                              <Option value=\"3\">3</Option>\n                              <Option value=\"4\">4</Option>\n                           </Select>\n                    </span> : null}\n\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\n                      <span>\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\"/>\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\n                      </span>\n                    : null}\n\n\n                    <span className=\"right\">\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\n                      <Dropdown overlay={<UserMenu />}>\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\n                      </Dropdown>\n                    </span>\n                  </Header>\n                  <Layout>\n                    <Content className=\"pt-30 pb-30\">\n                      <Switch>\n                      {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                       <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/dashboard\"\n                       /> :   \n                       JSON.parse(sessionStorage.user).role === \"Parent\" ?                      \n                       <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/offspring\"\n                       /> :                        JSON.parse(sessionStorage.user).role === \"Teacher\" ?                      \n                       <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/grade1\"\n                       />: <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/\"\n                       />}\n \n                            <Route path=\"/admin\" component={User} />\n                            <Route path=\"/student\" component={Student} />\n                            <Route path=\"/parent\" component={Parent} />\n                            <Route path=\"/teacher\" component={Teacher} />\n                            <Route path=\"/dashboard\" component={Dashboard}/>\n                            <Route path=\"/grade1\" component={Grade1} />\n                            <Route path=\"/grade2\" component={Grade2} />\n                            <Route path=\"/grade3\" component={Grade3} />\n                            <Route path=\"/grade4\" component={Grade4} />\n                            <Route path=\"/grade5\" component={Grade5} />\n                            <Route path=\"/grade6\" component={Grade6} />\n                            <Route path=\"/grade7\" component={Grade7} />\n                            <Route path=\"/grade8\" component={Grade8} />\n                            <Route path=\"/grade9\" component={Grade9} />\n                            <Route path=\"/grade10\" component={Grade10} />\n                            <Route path=\"/offspring\" component={Offspring} />\n                            <Route path=\"/timekeeping\" component={Timekeeping}/>\n                            <Route path=\"/auditTrail\" component={AuditTrail}/>\n                            <Route path=\"/\" component={UserDetail} />\n                      </Switch>\n                    </Content>\n                  </Layout>\n                </Layout>\n              </BrowserRouter>\n            </Layout>\n            <Layout>\n            </Layout>\n          </BrowserRouter>\n                    :\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Redirect from=\"*\" to=\"/login\" />\n            </Switch>\n          </BrowserRouter>\n          }\n    </UserContext.Provider>\n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}