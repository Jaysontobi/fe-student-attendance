{"version":3,"sources":["config.js","components/modelTemplate/schoolDay.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/userDetails/attendanceService.js","components/userDetails/attendanceAction.js","components/dashboard/dashboard.js","components/user/additionalService.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/auditTrail/auditTrailService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/grade/advisoryService.js","components/grade/advisoryAction.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/user/userSetting.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/grade/gradeAction.js","components/userDetails/attendanceTable.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/grade/teacherAction.js","components/grade/advisoryGrades.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/offspring/offspringTable.js","components/offspring/offspring.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","SchoolDaysTmp","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","id","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","userObj","update","_id","findAllUser","findyById","getGenIdNumber","role","updatePassword","obj","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","a","userService","response","parent","data","filter","user","student","teacher","length","useEffect","getAttendance","getSchooldays","saveSchoolDays","AttendanceAction","attendances","setattendances","schoolDays","setSchoolDays","attendanceDatas","AttendanceService","key","tag","attendedDays","absences","push","getSchoolDays","console","log","DashboardPage","React","visible","setVisible","Form","useForm","form","schoolDaysObj","JSON","parse","stringify","DashboardAtion","onFinish","values","Object","total","map","monthDays","parseInt","reduce","b","newValues","assign","setTimeout","className","gutter","xs","span","sm","md","lg","title","bordered","style","width","marginTop","type","onClick","marginLeft","marginBottom","onCancel","footer","name","initialValues","children","keys","month","Item","label","placeholder","getFields","textAlign","htmlType","margin","resetFields","getAdvisory","getAdvisoryStudents","level","Option","Select","UserEditForm","selectedUser","selectedParent","isNewData","idNumber","AdditionalService","getId","loading","enableReinitialize","onSubmit","render","touched","setFieldValue","spinning","delay","disabled","sessionStorage","value","firstName","lastName","CheckCircleFilled","gradesObj","findAllGrades","quarterObj","findAllQuarter","auditTrailObj","findAllAudit","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","loggedDate","toISOString","details","auditTrailService","setItem","filterStudent","newArray","action","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","loadParent","loadAdmin","getNewGenId","newArrayCredentials","buildStudentList","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","columns","dataIndex","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","EmployeePage","Title","e","target","PlusCircleOutlined","onClose","bodyStyle","paddingBottom","advisoryObj","findAllAdvisory","getAvailableAdvisors","deleteAdvisory","TeacherAction","setSelectedTeacher","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","studentAdvisor","setStudentAdvisor","advisoryStudents","setAdvisoryStudents","availableAdvisors","setAvailableAdvisors","addAdvisor","advisor","advisorTeacher","finalAddValue","advisoryService","advisors","getListOfTeacher","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","loadAdvisoryStudents","userData","advisory","students","isAdvisory","AdvisoryAction","Settings","newPassword","confirmPassword","changePassword","message","error","body","currentPassword","success","offset","align","GradeTable","grade","props","color","text","Grade1Action","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","advisoryGrades","setAdvisoryGrades","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","upgradeStudent","userCurrentGrade","currentUser","allStudent","result1","currentStudent","toString","editGrade","English","newEnglishGrade","recommendedGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","Values","newValuesGrade","subjectDummy","Music","subjectIndex","findIndex","subject","subjectGrades","updatedGrades","constructSubjectGrades","newSubject","Art","PE","Health","showGrade","loadGrade","getCurrentGradeUser","filterCurrentGradeUser","buidSubjectRow","mapehIndex","topic","splice","currentGradeUser","remarks","finalGrade","inComplete","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","FinalGrade","Remarks","loadGrades","finalOffspring","offspring","off","loadStudentGradesPerLevel","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","loadAdvisoryGrades","AttendanceTable","GradeAction","loadAttendance","Grade1EditForm","Collapse","Panel","selectedTeacherAssignedGrade","isAdviser","userRole","hasUpdate","find","updatesHolder","autoFillGrade","field","isDefault","quarterNum","activeQuarter","index","dafaultVal","holder","inputValues","MAPEH","English1","English2","English3","English4","Filipino1","Filipino2","Filipino3","Filipino4","Science1","Science2","Science3","Science4","Math1","Math2","Math3","Math4","MAPEH1","MAPEH2","MAPEH3","MAPEH4","Values1","Values2","Values3","Values4","Music1","Music2","Music3","Music4","Art1","Art2","Art3","Art4","PE1","PE2","PE3","PE4","Health1","Health2","Health3","Health4","undefined","border","defaultValue","Fragment","TeacherForm","selectedTeacherAssgined","AdvisorAction","ghost","DeleteOutlined","teacherObj","findAllTeacher","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","hideTeacher","showTeacher","AdvisoryGrades","addGrade","GradePage","RiseOutlined","selectedOffspring","OffspringPage","TimeKeepingTable","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","dateString","LoginForm","actions","errors","isSubmitting","Password","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","src","SubMenu","Menu","SiderMenu","theme","collapsed","mode","icon","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","SettingOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","filterAudit","datas","AuditTrailPage","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","href","overlay","Text","exact","from","path","component","UserSetting","User","Student","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Offspring","Timekeeping","AuditTrail","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a3ce42.chunk.js","sourcesContent":["/**\r\n * declare all configurations in here\r\n */\r\n\r\n//declare as LOCAL for local and PRODUCTION for production\r\nconst ENVIRONMENT = 'PRODUCTION';\r\n\r\nconst LOCAL_BE = 'http://localhost:14000';\r\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\r\n\r\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE };","let SchoolDaysTmp = {\r\n  Jan: 0,\r\n  Feb: 0,\r\n  Mar: 0,\r\n  Apr: 0,\r\n  May: 0,\r\n  Jun: 0,\r\n  Jul: 0,\r\n  Aug: 0,\r\n  Sep: 0,\r\n  Oct: 0,\r\n  Nov: 0,\r\n  Dec: 0\r\n};\r\n\r\nmodule.exports = { SchoolDaysTmp };","import axios from 'axios';\r\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\r\nclass BaseService {\r\n  constructor(moduleUrl) {\r\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\r\n      PRODUCTION_BE + \"/\" + moduleUrl :\r\n      LOCAL_BE + \"/\" + moduleUrl;\r\n    this.axiosInstance = axios.create({\r\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\r\n        PRODUCTION_BE + \"/\" + moduleUrl :\r\n        LOCAL_BE + \"/\" + moduleUrl\r\n    })\r\n    \r\n    // this.axiosInstance.interceptors.request.use(function (config) {\r\n    //   const token = sessionStorage.getItem('token');\r\n    //   config.headers[\"x-authorization\"] = token;\r\n    //   return config;\r\n    // });\r\n  }\r\n\r\n  edit = newObj => {\r\n    return this.axiosInstance.put('', newObj);\r\n  };\r\n\r\n  add = newObj => {\r\n    return this.axiosInstance.post('', newObj);\r\n  };\r\n\r\n  getById = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  delete = crudId => {\r\n    return this.axiosInstance.delete('/' + crudId);\r\n  };\r\n  softDelete = crudId => {\r\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\r\n  };\r\n}\r\nexport default BaseService;\r\n","import BaseService from '../../baseService';\r\nclass UserService extends BaseService {\r\n  constructor() {\r\n    super('user');\r\n  }\r\n\r\n  add = userObj => {\r\n    return this.axiosInstance.post('/create-user', userObj);\r\n  };\r\n\r\n  update = userObj => {\r\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\r\n  };\r\n\r\n  findAllUser = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-user/' + id);\r\n  };\r\n\r\n  getGenIdNumber = (role) => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  updatePassword = (obj) => {\r\n    return this.axiosInstance.post('/update-password', obj);\r\n  };\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( \r\n      {numberOfStudents : 0, \r\n      numberOfTeachers: 0,\r\n      numberOfParents : 0}\r\n      );\r\n\r\n  const getListOfUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let parent = response.data.filter(user => user.role === \"Parent\");\r\n    let student = response.data.filter(user => user.role === \"Student\");\r\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\r\n    setUserDetails({\r\n        numberOfParents: parent.length,\r\n        numberOfStudents : student.length, \r\n        numberOfTeachers: teacher.length\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfUsers();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    userDetails\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import BaseService from '../../baseService';\r\nclass AttendanceService extends BaseService {\r\n  constructor() {\r\n    super('attendance');\r\n  }\r\n\r\n  getAttendance = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  getSchooldays = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  saveSchoolDays = obj => {\r\n    return this.axiosInstance.post('/attendance-table-days', obj)\r\n  };\r\n}\r\n\r\nexport default new AttendanceService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport AttendanceService from './attendanceService';\r\n\r\nconst AttendanceAction = () => {\r\n\r\n  let [ attendances, setattendances ] = useState([]);\r\n  let [ schoolDays, setSchoolDays ] = useState({});\r\n\r\n  const getAttendance = async (id) => {\r\n    let attendanceDatas = [];\r\n    let response = await AttendanceService.getAttendance(id);\r\n    let schoolDays = response.data.schoolDays;\r\n    schoolDays.key = 'schoolDays123';\r\n    schoolDays.id = 'schoolDays123';\r\n    schoolDays.tag = \"No. of School Days\";\r\n    let attendedDays = response.data.attendedDays;\r\n    attendedDays.key = 'attendedDays1123';\r\n    attendedDays.id = 'attendedDays1123';\r\n    attendedDays.tag= \"No. of School Days Present\";\r\n    let absences = response.data.absences;\r\n    absences.key = 'absences1123';\r\n    absences.id = 'absences1123';\r\n    absences.tag = 'No. of Days Absent';\r\n    attendanceDatas.push(schoolDays);\r\n    attendanceDatas.push(attendedDays);\r\n    attendanceDatas.push(absences);\r\n\r\n    setattendances(attendanceDatas);\r\n    return attendanceDatas;\r\n  };\r\n\r\n  const getSchoolDays = async () => {\r\n    let response = await AttendanceService.getSchooldays();\r\n    setSchoolDays(response.data[0]);\r\n    return response;\r\n  };\r\n\r\n\r\n  const saveSchoolDays = async obj => {\r\n    let response = await AttendanceService.saveSchoolDays(obj);\r\n    console.log(response);\r\n  };  \r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return {\r\n    getAttendance,\r\n    attendances,\r\n    getSchoolDays,\r\n    schoolDays,\r\n    saveSchoolDays\r\n  }\r\n};\r\n\r\nexport default AttendanceAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Modal, Form, Input, message } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport DashboardAtion from \"../dashboard/dashboardAction\";\r\nimport { SchoolDaysTmp } from '../modelTemplate/schoolDay';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst DashboardPage = () => {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [form] = Form.useForm();\r\n  const { getSchoolDays, schoolDays, saveSchoolDays } = AttendanceAction();\r\n  let schoolDaysObj = JSON.parse(JSON.stringify(SchoolDaysTmp));\r\n\r\n  getSchoolDays();\r\n\r\n  const loadSchoolDays = () => { \r\n    let daysOfSchool = (schoolDays) ?\r\n      Object.assign(schoolDaysObj, schoolDays) :\r\n      schoolDaysObj;\r\n\r\n      return daysOfSchool;\r\n  }; \r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  let {\r\n    userDetails\r\n  } = DashboardAtion({});\r\n\r\n\r\n  const getFields = () => {\r\n    const count = 12;\r\n    const children = [];\r\n\r\n    Object.keys(SchoolDaysTmp).map((month, key)=> {\r\n      children.push(\r\n        <Col span={8} key={key}>\r\n          <Form.Item\r\n            name={month}\r\n            label={month}\r\n          >\r\n            <Input placeholder=\"\"/>\r\n          </Form.Item>\r\n        </Col>,\r\n      );\r\n    });\r\n\r\n    return children;\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Received values of form: ', values);\r\n\r\n    if (Object.values(values).length > 0) {\r\n      let total = Object.values(values).map(monthDays => { \r\n        return parseInt(monthDays)\r\n      }).reduce((a,b) => a + b, 0);\r\n      \r\n      let newValues = Object.assign(values, { total: total });\r\n      console.log(newValues);\r\n\r\n      await saveSchoolDays(newValues);\r\n      setTimeout(() => {setVisible(false)}, 2000);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      <Row gutter={16}>\r\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\r\n          <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfStudents}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfParents}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfTeachers}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }} >\r\n          <Card title=\"School Days\" bordered={false} style={{ width: '98%', marginTop: '20px' }}>\r\n            <Button type=\"primary\" onClick={showModal} style={{ marginLeft: '10px', marginBottom: '5px', marginTop: '5px' }}>\r\n              Input School Days\r\n            </Button>\r\n            <Modal\r\n              title=\"School Days\"\r\n              visible={visible}\r\n              onCancel={handleCancel}\r\n              footer={null}\r\n            >\r\n              <Form\r\n                form={form}\r\n                name=\"advanced_search\"\r\n                className=\"ant-advanced-search-form\"\r\n                onFinish={onFinish}\r\n                initialValues={loadSchoolDays()}\r\n              >\r\n                <Row gutter={24}>{getFields()}</Row>\r\n                <Row>\r\n                  <Col span={24} style={{textAlign: 'center'}} >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      style={{ margin: '0 8px'}}\r\n                      onClick={() => {\r\n                        form.resetFields();\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Modal>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdditionalService extends BaseService {\r\n  constructor() {\r\n    super('');\r\n  };\r\n\r\n  getGenIdNumber = role => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  getAdvisory = teacher => {\r\n    return this.axiosInstance.post('/teacher-advisory', teacher);\r\n  };\r\n\r\n  getAdvisoryStudents = level => {\r\n    return this.axiosInstance.get('/advisory-students/' + level);\r\n  };\r\n\r\n}\r\n\r\nexport default new AdditionalService();\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nimport AdditionalService from './additionalService';\r\nconst { Option } = Select;\r\n\r\nconst UserEditForm = ({ add, update, selectedUser, selectedParent, role, isNewData = true }) => {\r\n\r\n  let getId = async role => {\r\n    if (selectedUser.idNumber) return;\r\n\r\n    let response = await AdditionalService.getGenIdNumber(role);\r\n    selectedUser.idNumber = response.data;\r\n  };\r\n\r\n  let newGenId = '';\r\n\r\n  if (isNewData) {\r\n    getId(role);\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedUser}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values) => {\r\n        if (values._id) {\r\n          console.log(values)\r\n          update(values)\r\n        } else {\r\n          values.role = role;\r\n          add(values)\r\n\r\n          // window.location.reload(false);\r\n        }\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\">\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"User ID\" name=\"idNumber\">\r\n                  <Input disabled=\"true\" name=\"idNumber\" />\r\n                </Form.Item>\r\n              </Col>\r\n              {role === \"Student\" ? (\r\n                <Col span={12}>\r\n                  <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                    <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              ) : (\"\")}\r\n\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"First Name\" name=\"firstName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Middle Name\" name=\"middleName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Last Name\" name=\"lastName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Gender\" name=\"gender\">\r\n                  <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\r\n                    <Option value=\"Male\">Male</Option>\r\n                    <Option value=\"Female\">Female</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {role === \"Student\" ? (\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                    <Select\r\n                      disabled={\r\n                        JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                      }\r\n                      name=\"gradeLevel\"\r\n                    >\r\n                      <Option value=\"1\">1</Option>\r\n                      <Option value=\"2\">2</Option>\r\n                      <Option value=\"3\">3</Option>\r\n                      <Option value=\"4\">4</Option>\r\n                      <Option value=\"5\">5</Option>\r\n                      <Option value=\"6\">6</Option>\r\n                      <Option value=\"7\">7</Option>\r\n                      <Option value=\"8\">8</Option>\r\n                      <Option value=\"9\">9</Option>\r\n                      <Option value=\"10\">10</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  {/* <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input\r\n                              disabled={\r\n                                 values.role != \"Student\" ||\r\n                                 JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                              }\r\n                              name=\"section\"\r\n                           />\r\n                        </Form.Item> */}\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Birth Day\" name=\"birthDate\">\r\n                  <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Birth Place\" name=\"birthPlace\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={8}>\r\n                <Form.Item label=\"Age\" name=\"age\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={16}>\r\n                {role === \"Student\" ? (\r\n                  <Form.Item label=\"Guardian\" name=\"parentId\">\r\n                    <Select\r\n                      value={\r\n                        values.parent\r\n                          ? values.parent.firstName +\r\n                          \" \" +\r\n                          values.parent.lastName\r\n                          : \"\"\r\n                      }\r\n                      name=\"parentId\"\r\n                    >\r\n                      {selectedParent.map((parent) => {\r\n                        return (\r\n                          <Option value={parent._id}>\r\n                            {parent.firstName + \" \" + parent.lastName}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Contact Number\" name=\"contactNumber\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Email\" name=\"email\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              {/* <Col span={12}>\r\n                     <Form.Item label=\"Role\" name=\"role\">\r\n                        <Select\r\n                           disabled={\r\n                              JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                           }\r\n                           name=\"role\"\r\n                        >\r\n                           <Option value=\"Admin\">Admin</Option>\r\n                           <Option value=\"Student\">Student</Option>\r\n                           <Option value=\"Parent\">Parent</Option>\r\n                           <Option value=\"Teacher\">Teacher</Option>\r\n                        </Select>\r\n                     </Form.Item>\r\n                   </Col> */}\r\n              <Col span={12}>\r\n                <Form.Item label=\"BadgeId\" name=\"badgeID\">\r\n                  <Input name=\"badgeID\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Password\" name=\"password\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" type=\"password\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"btn-save\" htmlType=\"submit\">\r\n              <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n            </Button> : null}\r\n\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default UserEditForm;\r\n","import BaseService from '../../baseService';\r\nclass GradesService extends BaseService {\r\n  constructor() {\r\n    super('grades');\r\n  }\r\n\r\n  add = gradesObj => {\r\n    return this.axiosInstance.post('/create-grades', gradesObj);\r\n  };\r\n\r\n  update = gradesObj => {\r\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-grades/' + id);\r\n  };\r\n\r\n  findAllGrades = (level ='') => {\r\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new GradesService();\r\n","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('quarter');\r\n  }\r\n\r\n  add = quarterObj => {\r\n    return this.axiosInstance.post('/create-quarter', quarterObj);\r\n  };\r\n\r\n  update = quarterObj => {\r\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\r\n  };\r\n\r\n  findAllQuarter = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-quarter/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import BaseService from '../../baseService';\r\nclass AuditTrailService extends BaseService {\r\n  constructor() {\r\n    super('auditTrail');\r\n  }\r\n\r\n  add = auditTrailObj => {\r\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\r\n  };\r\n\r\n  update = auditTrailObj => {\r\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\r\n  };\r\n\r\n  findAllAudit = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-autditrail/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new AuditTrailService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from './userService';\r\nimport gradesService from '../grade/gradesService';\r\nimport quarterService from '../quarter/quarterService'\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from './additionalService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\r\n  let [adminList, setAdminList] = useState([])\r\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\r\n  let [parentList, setParentList] = useState([])\r\n  let [studentList, setStudentList] = useState([])\r\n  let [teacherList, setTeacherList] = useState([])\r\n  let [showUserVisible, setShowUserVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n  let [selectedParent, setSelectedParent] = useState([]);\r\n\r\n  let [loginCounter, setLoginCounter] = useState(false);\r\n\r\n  const addUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Add User\",\r\n      date:new Date()\r\n    }\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.add(values)\r\n    .then(function (res) {\r\n      if(values.role === \"Student\"){\r\n        let gradeObj = {\r\n          status: true,\r\n          student: values,\r\n          gradeLevel: values.gradeLevel,\r\n          section: values.section,\r\n          schoolYear : values.schoolYear,\r\n          subjects: [{\r\n              subjectName: \"English\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Filipino\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Science\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Math\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"MAPEH\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Values\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          }]\r\n      }\r\n      let response = gradesService.add(gradeObj)\r\n      }\r\n    \r\n        \r\n        setSelectedUser({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            employeeNumber: \"\",\r\n            department: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n        window.location.reload(false);\r\n    })\r\n  };\r\n\r\n  const editUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Edit User\",\r\n      date:new Date()}\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.update(values)\r\n    .then(function (res) {\r\n        setSelectedUser({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          middleName: \"\",\r\n          idNumber: \"\",\r\n          gender: \"\",\r\n          birthDate: \"\",\r\n          birthPlace: \"\",\r\n          age: \"\",\r\n          contactNumber: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n    })\r\n  };\r\n\r\n  const getListOfParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    setSelectedParent(result)\r\n  };\r\n\r\n  const showUser = () => {\r\n    setSelectedUser({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        idNumber: \"\",\r\n        gender: \"\",\r\n        birthDate: \"\",\r\n        birthPlace: \"\",\r\n        age: \"\",\r\n        contactNumber: \"\",\r\n        email: \"\",\r\n        status: \"\",\r\n      });\r\n    setShowUserVisible(true)\r\n  };\r\n\r\n  const loadUser = (userObj) => {\r\n    setSelectedUser({...userObj});\r\n    setShowUserVisible(true);\r\n  };\r\n\r\n  const loadQuarter = async () => {\r\n    let response = await quarterService.findAllQuarter();\r\n    if (response.data && response.data.length > 0) {\r\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\r\n    };\r\n  }\r\n\r\n  const login = async (credentials) => {\r\n    let ctr = 0;\r\n    let loggedInUser = {};\r\n    userDetails.list.map((user) => {\r\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\r\n            ctr = ctr + 1;\r\n            loggedInUser = user;\r\n        }\r\n    })\r\n    if(ctr === 0) {\r\n        setLoginCounter(false)\r\n    } else {\r\n         //if user is parent log in audit trail\r\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\r\n          let loggedDate =  new Date().toISOString();\r\n          let details = {\r\n            user: loggedInUser,\r\n            activity: 'Parent logged in',\r\n            date: loggedDate\r\n          };\r\n          await auditTrailService.add(details);\r\n        };\r\n    \r\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\r\n        sessionStorage.setItem(\"_id\", quarter._id);\r\n        window.location.reload(false);\r\n        setLoginCounter(true);\r\n    }\r\n  };\r\n\r\n  const filterStudent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setStudentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList( newArray)\r\n    }\r\n  } \r\n  \r\n  const filterTeacher = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setTeacherList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterParent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setParentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterAdmin = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setAdminList(\r\n        newArray\r\n      )\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(\r\n      newArray\r\n    )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList(newArray)\r\n\r\n  }  \r\n\r\n  const loadStudent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Student\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList(newArray)\r\n\r\n  }  \r\n\r\n  const loadParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList(newArray)\r\n\r\n  }\r\n\r\n  const loadAdmin = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Admin\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(newArray)\r\n\r\n  }\r\n  \r\nconst getNewGenId = async (role) => {\r\n      let response = await userService.getGenIdNumber(role);\r\n      return response;\r\n    }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    let newArrayCredentials = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          idNumber: user.idNumber,\r\n          password: user.password,\r\n        }\r\n      })\r\n\r\n    setUserDetails({\r\n      list: newArray,\r\n      credentials: newArrayCredentials\r\n    })\r\n  \r\n    \r\n\r\n  };\r\n  \r\n  const buildStudentList = (list) => {\r\n    let newlist = list.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n    return newlist;\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadUsers();\r\n    getListOfParent();\r\n    loadAdmin();\r\n    loadStudent();\r\n    loadTeacher();\r\n    loadParent();\r\n    loadQuarter();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadUsers,\r\n    addUser,\r\n    loginCounter,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    login,\r\n    selectedParent,\r\n    filterAdmin,\r\n    filterStudent,\r\n    filterParent,\r\n    filterTeacher,\r\n    adminList,\r\n    studentList,\r\n    parentList,\r\n    teacherList,\r\n    getNewGenId,\r\n    buildStudentList\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\r\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n  }, []);\r\n\r\n\r\n  return {\r\n    today\r\n  }\r\n};\r\n\r\nexport default TimeKeepingAction;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst EmployeeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      },\r\n      {\r\n         title: <b>Gender</b>,\r\n         dataIndex: 'gender',\r\n      },\r\n      {\r\n        title: <b>Age</b>,\r\n        dataIndex: 'age',\r\n      },   \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Role</b>,\r\n        dataIndex: 'role',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         console.log(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterAdmin,\r\n    adminList\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        {console.log(adminList)}\r\n        <UserTable details={adminList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Admin' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdvisoryService extends BaseService {\r\n  constructor() {\r\n    super('advisory');\r\n  }\r\n\r\n  add = advisoryObj => {\r\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\r\n  };\r\n\r\n  update = advisoryObj => {\r\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-advisory/' + id);\r\n  };\r\n\r\n  findAllAdvisory = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  getAvailableAdvisors = () => {\r\n    return this.axiosInstance.get('/available-advisors');\r\n  };\r\n\r\n  deleteAdvisory = (id) => {\r\n    return this.axiosInstance.delete('/delete-advisory/' + id)\r\n  };\r\n}\r\n\r\nexport default new AdvisoryService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport UserAction from '../user/userAction';\r\n\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\r\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\r\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [advisoryStudents, setAdvisoryStudents] = useState([]);\r\n  let [availableAdvisors, setAvailableAdvisors] = useState([]);\r\n  \r\n  let {\r\n    buildStudentList\r\n  } = UserAction({});\r\n\r\n  const addAdvisor = async (values, gradeLevel) => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Added Advisor\",\r\n      date:new Date()}\r\n    let advisorTeacher = await userService.findyById(values.advisor)\r\n    let finalAddValue = {\r\n      gradeLevel: gradeLevel,\r\n      teacher: advisorTeacher.data\r\n    }\r\n    try {\r\n      let response = await advisoryService.add(finalAddValue);\r\n      console.log(response);\r\n       window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n  };\r\n  \r\n  const getAvailableAdvisors = async () => {\r\n    let advisors = await advisoryService.getAvailableAdvisors();\r\n    setAvailableAdvisors(advisors.data);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result);\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setselectedAdvisoryAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setselectedAdvisoryAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setselectedAdvisoryAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setselectedAdvisoryAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setselectedAdvisoryAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setselectedAdvisoryAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setselectedAdvisoryAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setselectedAdvisoryAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setselectedAdvisoryAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setselectedAdvisoryAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideAdvisor = async () => {\r\n    setshowAdvisorVisible(false)\r\n  };\r\n\r\n  const showAdvisor = async (gradeLevel) => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setselectedAdvisoryAssgined(result[0].subjects)\r\n    } else {\r\n        setselectedAdvisoryAssgined({})\r\n    }\r\n    setshowAdvisorVisible(true)\r\n  };\r\n\r\n  const getStudentAdvisor = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n    setStudentAdvisor(result[0]);\r\n  };\r\n  \r\n   const loadAdvisoryStudents = async () => {\r\n     let user = JSON.parse(sessionStorage.user);\r\n     const userData = {\r\n       firstName: user.firstName,\r\n       lastName: user.lastName,\r\n       middleName: user.middleName\r\n     };\r\n     try {\r\n       let advisory = await AdditionalService.getAdvisory(userData);\r\n   \r\n       if (!advisory) return;\r\n     \r\n       const students = await AdditionalService.getAdvisoryStudents(advisory.data.gradeLevel);\r\n       let list = buildStudentList(students.data);\r\n       await setAdvisoryStudents(list);\r\n       console.log('YHVH is great', students.data);\r\n       return list;\r\n     } catch (error) {\r\n       return [];\r\n     };\r\n    \r\n  };\r\n  \r\n  const deleteAdvisory = async (id) => {\r\n    let response = await advisoryService.deleteAdvisory(id);\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudentAdvisor();\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n    loadAdvisoryStudents();\r\n    getAvailableAdvisors();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    studentAdvisor,\r\n    advisoryStudents,\r\n    loadAdvisoryStudents,\r\n    availableAdvisors,\r\n    deleteAdvisory\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm';\r\nimport AdvisoryAction from '../grade/advisoryAction';\r\n\r\nimport UserAction from './userAction';\r\nimport AdditionalService from './additionalService';\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable';\r\n\r\nconst EmployeePage = ({isAdvisory}) => {\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    studentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterStudent\r\n  } = UserAction({});\r\n\t\r\n  let {\r\n    advisoryStudents,\r\n    loadAdvisoryStudents\r\n  } = AdvisoryAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\t\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\r\n      </Col>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n      <>\r\n        <Col lg={{ span: 6 }}>\r\n          <Input placeholder=\"Search\" onChange={(e)=> filterStudent(e.target.value)}/>\r\n          {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n          </Button> */}\r\n        </Col>\r\n        <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n          <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n        </Button>\r\n      </>\r\n        : null}\r\n\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={ isAdvisory ? advisoryStudents : studentList } />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Student' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    parentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterParent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\r\n        <UserTable details={parentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Parent' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    teacherList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterTeacher\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={teacherList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Teacher' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Space, message } from 'antd';\r\n\r\nimport userService from './userService';\r\n\r\nconst Settings = () => {\r\n  let password = '';\r\n  let newPassword = '';\r\n  let confirmPassword = '';\r\n  \r\n  const changePassword = async () => {\r\n    if (password === '' || newPassword === '' || confirmPassword === '') {\r\n      return message.error('All fields are required.', 3);\r\n    };\r\n    \r\n     if (newPassword !== confirmPassword) {\r\n      return message.error('New password and confirm must match.', 3);\r\n    };\r\n    \r\n    let user = JSON.parse(sessionStorage.user);\r\n    let body = {\r\n      idNumber: user.idNumber,\r\n      currentPassword: password,\r\n      newPassword: newPassword\r\n    };\r\n    try {\r\n      let response = await userService.updatePassword(body);\r\n      if (response && response.status === 200) {\r\n        return message.success('Password updated', 3);\r\n      };\r\n    } catch (error) {\r\n      return message.error('Unable to update password', 3);\r\n    };\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\" style={{textAlign: 'center'}}>\r\n     <Row className=\"mt-15\">\r\n       <Col lg={{ span: 6, offset: 9  }}>\r\n         <Typography.Title level={3} className=\"ml-15\">Setting</Typography.Title>\r\n       </Col>\r\n     </Row>\r\n      <form onSubmit={() => changePassword()}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 6, offset: 9 }}>\r\n            <Input placeholder=\"Old Password\" type=\"password\" onChange={(e) => password = e.target.value}/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n           <Input placeholder=\"New Password\" type=\"password\" onChange={(e) => newPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n          <Input placeholder=\"Confirm Password\" type=\"password\" onChange={(e) => confirmPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row style={{marginTop: '15px'}}>\r\n        <Col lg={{ span: 6, offset: 9 }}>\r\n         <Space align=\"center\">\r\n           <Button  className=\"addUser btn-add\" onClick={()=> changePassword()}>\r\n            Change Password\r\n          </Button>\r\n         </Space>\r\n        </Col>\r\n       </Row>\r\n      </form>\r\n    </Card>     \r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Subject</b>,\r\n         dataIndex: 'subject',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n        title: <b>1st Quarter</b>,\r\n        dataIndex: 'Quarter1st',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n      {\r\n         title: <b>2nd Quarter</b>,\r\n         dataIndex: 'Quarter2nd',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n         title: <b>3rd Quarter</b>,\r\n         dataIndex: 'Quarter3rd',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n        title: <b>4th Quarter</b>,\r\n        dataIndex: 'Quarter4th',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n     {\r\n        title: <b>Final Grade</b>,\r\n        dataIndex: 'FinalGrade',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n     {\r\n        title: <b>Remarks</b>,\r\n        dataIndex: 'Remarks',\r\n        render (text) {\r\n           return {\r\n            props: {\r\n               style: { color: text === 'Failed' ? \"red\" : \"\" }\r\n             },\r\n             children: <div>{text}</div>\r\n           }\r\n        }\r\n     }\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst UserEditForm = ({ selectedUser }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n               <Card className=\"p-70\">\r\n               <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n                <br/>\r\n                {console.log(values)}\r\n               \r\n                <Row gutter={16}>\r\n\r\n{/* <Col span={12}>\r\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n \r\n   <Col span={12}>\r\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n   <Col span={12}>\r\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col> */}\r\n</Row>\r\n             \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;","import React, { useState, useEffect } from 'react';\r\nimport gradesService from './gradesService';\r\nimport userService from '../user/userService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport { Button } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Grade1Action = (initial = { searchRequest: {} }) => {\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\r\n  let [gradeDetails, setGradeDetails] = useState({ list: [] });\r\n  let [grade1Details, setGrade1Details] = useState({ list: [] });\r\n  let [grade2Details, setGrade2Details] = useState({ list: [] });\r\n  let [grade3Details, setGrade3Details] = useState({ list: [] });\r\n  let [grade4Details, setGrade4Details] = useState({ list: [] });\r\n  let [grade5Details, setGrade5Details] = useState({ list: [] });\r\n  let [grade6Details, setGrade6Details] = useState({ list: [] });\r\n  let [grade7Details, setGrade7Details] = useState({ list: [] });\r\n  let [grade8Details, setGrade8Details] = useState({ list: [] });\r\n  let [grade9Details, setGrade9Details] = useState({ list: [] });\r\n  let [grade10Details, setGrade10Details] = useState({ list: [] });\r\n  let [advisoryGrades, setAdvisoryGrades] = useState([]);\r\n\r\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\r\n  let [selectedGrade, setSelectedGrade] = useState({});\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n\r\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\r\n\r\n  const upgradeStudent = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: \"Upgrade Student\",\r\n      date: new Date()\r\n    }\r\n    auditTrailService.add(auditTrailObj)\r\n    let ctr = 0;\r\n    await selectedListOfStudent.map(async student => {\r\n      setLoading(true)\r\n      let result = await gradesService.findyById(student.id);\r\n\r\n      let userCurrentGrade = (parseInt(result.data.gradeLevel))\r\n\r\n\r\n      if (userCurrentGrade < 10) {\r\n        let currentUser = result.data\r\n        let allStudent = await userService.findAllUser();\r\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n        let currentStudent = result1[0]\r\n        currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\r\n        let response = await userService.update(currentStudent)\r\n\r\n        currentUser.status = false;\r\n        let response1 = await gradesService.update(currentUser)\r\n\r\n        let gradeObj = {\r\n          status: true,\r\n          student: currentUser.student,\r\n          gradeLevel: (userCurrentGrade + 1).toString(),\r\n          section: currentUser.student.section,\r\n          schoolYear: currentStudent.schoolYear,\r\n          subjects: [{\r\n            subjectName: \"English\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Filipino\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Science\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Math\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"MAPEH\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Values\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Music\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Art\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"PE\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Health\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          }]\r\n        }\r\n\r\n        let response2 = gradesService.add(gradeObj)\r\n\r\n\r\n      } else {\r\n        let currentUser = result.data\r\n        let allStudent = await userService.findAllUser();\r\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n        let currentStudent = result1[0]\r\n        currentStudent.gradeLevel = \"Graduate\"\r\n        let response = await userService.update(currentStudent)\r\n\r\n        currentUser.status = false;\r\n        let response1 = await gradesService.update(currentUser)\r\n      }\r\n      ctr = ctr + 1\r\n      if (ctr === selectedListOfStudent.length) {\r\n        setLoading(false)\r\n        window.location.reload(false)\r\n      }\r\n    })\r\n\r\n  };\r\n\r\n  const editGrade = async (values, isAdvisory = false) => {\r\n    console.log(values);\r\n    let result = await gradesService.findyById(values._id);\r\n    let grade = result.data\r\n\r\n    if (values.English) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.English.firstQuarter) {\r\n        firstQuarter = values.English.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.English.secondQuarter) {\r\n        secondQuarter = values.English.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.English.thirdQuarter) {\r\n        thirdQuarter = values.English.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.English.fourthQuarter) {\r\n        fourthQuarter = values.English.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newEnglishGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[0].subjectGrade = newEnglishGrade;\r\n        grade.subjects[0].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[0].recommendedGrade = newEnglishGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Filipino) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Filipino.firstQuarter) {\r\n        firstQuarter = values.Filipino.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Filipino.secondQuarter) {\r\n        secondQuarter = values.Filipino.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Filipino.thirdQuarter) {\r\n        thirdQuarter = values.Filipino.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Filipino.fourthQuarter) {\r\n        fourthQuarter = values.Filipino.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newFilipinoGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      }\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[1].subjectGrade = newFilipinoGrade;\r\n        grade.subjects[1].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[1].recommendedGrade = newFilipinoGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Science) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Science.firstQuarter) {\r\n        firstQuarter = values.Science.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Science.secondQuarter) {\r\n        secondQuarter = values.Science.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Science.thirdQuarter) {\r\n        thirdQuarter = values.Science.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Science.fourthQuarter) {\r\n        fourthQuarter = values.Science.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newScienceGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[2].subjectGrade = newScienceGrade;\r\n        grade.subjects[2].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[2].recommendedGrade = newScienceGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Math) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Math.firstQuarter) {\r\n        firstQuarter = values.Math.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Math.secondQuarter) {\r\n        secondQuarter = values.Math.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Math.thirdQuarter) {\r\n        thirdQuarter = values.Math.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Math.fourthQuarter) {\r\n        fourthQuarter = values.Math.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newMathGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[3].subjectGrade = newMathGrade;\r\n        grade.subjects[3].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[3].recommendedGrade = newMathGrade;\r\n      };\r\n    }\r\n\r\n    // if (values.MAPEH) {\r\n    //   let firstQuarter = 0;\r\n    //   let secondQuarter = 0;\r\n    //   let thirdQuarter = 0;\r\n    //   let fourthQuarter = 0;\r\n\r\n    //   if (values.MAPEH.firstQuarter) {\r\n    //     firstQuarter = values.MAPEH.firstQuarter\r\n    //   } else {\r\n    //     firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\r\n    //   }\r\n\r\n    //   if (values.MAPEH.secondQuarter) {\r\n    //     secondQuarter = values.MAPEH.secondQuarter\r\n    //   } else {\r\n    //     secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\r\n    //   }\r\n\r\n    //   if (values.MAPEH.thirdQuarter) {\r\n    //     thirdQuarter = values.MAPEH.thirdQuarter\r\n    //   } else {\r\n    //     thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\r\n    //   }\r\n\r\n    //   if (values.MAPEH.fourthQuarter) {\r\n    //     fourthQuarter = values.MAPEH.fourthQuarter\r\n    //   } else {\r\n    //     fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\r\n    //   }\r\n\r\n    //   let newMAPEHGrade = {\r\n    //     firstQuarter: firstQuarter,\r\n    //     secondQuarter: secondQuarter,\r\n    //     thirdQuarter: thirdQuarter,\r\n    //     fourthQuarter: fourthQuarter\r\n    //   };\r\n\r\n    //   if (isAdvisory) {\r\n    //     grade.subjects[4].subjectGrade = newMAPEHGrade;\r\n    //     grade.subjects[4].recommendedGrade = {};\r\n    //   } else {\r\n    //     grade.subjects[4].recommendedGrade = newMAPEHGrade;\r\n    //   };\r\n    // }\r\n\r\n    if (values.Values) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Values.firstQuarter) {\r\n        firstQuarter = values.Values.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Values.secondQuarter) {\r\n        secondQuarter = values.Values.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Values.thirdQuarter) {\r\n        thirdQuarter = values.Values.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Values.fourthQuarter) {\r\n        fourthQuarter = values.Values.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newValuesGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[5].subjectGrade = newValuesGrade;\r\n        grade.subjects[5].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[5].recommendedGrade = newValuesGrade;\r\n      };\r\n    };\r\n\r\n    const subjectDummy = {\r\n      firstQuarter: 0,\r\n      secondQuarter: 0,\r\n      thirdQuarter: 0,\r\n      fourthQuarter: 0\r\n    };\r\n\r\n    if (values.Music) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Music');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Music', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Music',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n\r\n    if (values.Art) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Art');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Art', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Art',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    if (values.PE) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'PE');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'PE', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'PE',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    if (values.Health) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Health');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Health', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Health',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    let updateResult = await gradesService.update(grade);\r\n    //add record  to audit trail\r\n    let loggedDate = new Date().toISOString();\r\n    let userDetails = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: 'Teacher has updated student grades',\r\n      date: loggedDate\r\n    };\r\n    await auditTrailService.add(userDetails);\r\n    window.location.reload();\r\n  };\r\n\r\n  const constructSubjectGrades = (values, subject = '', subjectGrade) => {\r\n    let firstQuarter = 0;\r\n    let secondQuarter = 0;\r\n    let thirdQuarter = 0;\r\n    let fourthQuarter = 0;\r\n\r\n    if (values[subject].firstQuarter) {\r\n      firstQuarter = values[subject].firstQuarter\r\n    } else {\r\n      firstQuarter = subjectGrade.firstQuarter\r\n    }\r\n\r\n    if (values[subject].secondQuarter) {\r\n      secondQuarter = values[subject].secondQuarter\r\n    } else {\r\n      secondQuarter = subjectGrade.secondQuarter\r\n    }\r\n\r\n    if (values[subject].thirdQuarter) {\r\n      thirdQuarter = values[subject].thirdQuarter\r\n    } else {\r\n      thirdQuarter = subjectGrade.thirdQuarter\r\n    }\r\n\r\n    if (values[subject].fourthQuarter) {\r\n      fourthQuarter = values[subject].fourthQuarter\r\n    } else {\r\n      fourthQuarter = subjectGrade.fourthQuarter\r\n    };\r\n\r\n    let gradesObj = {\r\n      firstQuarter: firstQuarter,\r\n      secondQuarter: secondQuarter,\r\n      thirdQuarter: thirdQuarter,\r\n      fourthQuarter: fourthQuarter\r\n    };\r\n\r\n    return gradesObj;\r\n  };\r\n  const showGrade = () => {\r\n    setSelectedGrade({\r\n      schoolYear: \"\",\r\n      subjects: {},\r\n      grade: \"\",\r\n      student: {},\r\n      gradeLevel: \"\",\r\n      section: \"\",\r\n    })\r\n    setShowGradeVisible(true)\r\n  };\r\n\r\n  const loadGrade = (gradeObj, idNumber, level = '') => {\r\n    getCurrentGradeUser(idNumber, level)\r\n    setSelectedGrade({ ...gradeObj });\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const loadSelectedGrade = async (gradeId) => {\r\n    let response = await gradesService.findyById(gradeId);\r\n    setSelectedGrade({ ...response.data });\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const filterCurrentGradeUser = async (gradeLevel) => {\r\n    setLoading(true)\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n\r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1 = [];\r\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n\r\n      //remove mapeh\r\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\r\n      newArray.splice(mapehIndex, 1);\r\n\r\n      setSelectedUser(result[0].student)\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const currentGradeUser = async () => {\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\r\n    } else {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\r\n    }\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student)\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n\r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1 = [];\r\n      if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\r\n      } else {\r\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n      };\r\n\r\n      //remove mapeh\r\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\r\n      newArray.splice(mapehIndex, 1);\r\n\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    };\r\n\r\n  };\r\n\r\n  const buidSubjectRow = (subject) => {\r\n    let remarks = \"\";\r\n    let finalGrade = (subject.subjectGrade.firstQuarter +\r\n      subject.subjectGrade.secondQuarter +\r\n      subject.subjectGrade.thirdQuarter +\r\n      subject.subjectGrade.fourthQuarter) / 4;\r\n\r\n    let inComplete = false;\r\n    let firstQuarter = subject.subjectGrade.firstQuarter;\r\n    let secondQuarter = subject.subjectGrade.secondQuarter;\r\n    let thirdQuarter = subject.subjectGrade.thirdQuarter;\r\n    let fourthQuarter = subject.subjectGrade.fourthQuarter;\r\n\r\n    //leave blank all zero grades\r\n    if (firstQuarter === 0) {\r\n      firstQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (secondQuarter === 0) {\r\n      secondQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (thirdQuarter === 0) {\r\n      thirdQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (fourthQuarter === 0) {\r\n      fourthQuarter = '';\r\n      inComplete = true;\r\n    };\r\n\r\n    if (!inComplete && finalGrade >= 75) {\r\n      remarks = \"Passed\";\r\n    } else if (!inComplete && finalGrade < 75){\r\n      remarks = \"Failed\";\r\n    } else {\r\n      remarks = '';\r\n    };;\r\n\r\n    return {\r\n      key: subject._id,\r\n      id: subject._id,\r\n      subject: subject.subjectName,\r\n      Quarter1st: firstQuarter,\r\n      Quarter2nd: secondQuarter,\r\n      Quarter3rd: thirdQuarter,\r\n      Quarter4th: fourthQuarter,\r\n      FinalGrade: (!inComplete) ? finalGrade : '',\r\n      Remarks: remarks\r\n    }\r\n  };\r\n\r\n  const getCurrentGradeUser = async (idNumber, level = '') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student);\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n      \r\n      //remove mapeh\r\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\r\n      newArray.splice(mapehIndex, 1);\r\n\r\n      setSelectedGradeUser(newArray);\r\n\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedGradeUser([])\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const loadGrades = async () => {\r\n    let finalOffspring = [];\r\n    let response = await gradesService.findAllGrades();\r\n    let parent = await userService.findAllUser();\r\n    let result = parent.data.filter(user => user.parent);\r\n    let newArray = [];\r\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\r\n    await response.data.map((user) => {\r\n      offspring.map((off) => {\r\n        if (user.student.idNumber === off.idNumber) {\r\n          finalOffspring.push(user)\r\n        }\r\n      });\r\n    });\r\n    newArray = finalOffspring.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.student.firstName,\r\n        lastName: user.student.lastName,\r\n        middleName: user.student.middleName,\r\n        idNumber: user.student.idNumber,\r\n        contactNumber: user.student.contactNumber,\r\n        email: user.student.email,\r\n        section: user.section,\r\n        gradeLevel: user.gradeLevel,\r\n        action:\r\n          <Button onClick={() => loadGrade(user, user.student.idNumber)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setGradeDetails({\r\n      list: newArray\r\n    })\r\n  };\r\n\r\n  const loadStudentGradesPerLevel = async (level='') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.gradeLevel === level && user.status)\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.student.firstName,\r\n        lastName: user.student.lastName,\r\n        middleName: user.student.middleName,\r\n        idNumber: user.student.idNumber,\r\n        contactNumber: user.student.contactNumber,\r\n        email: user.student.email,\r\n        section: user.student.section,\r\n        action:\r\n          <Button onClick={() => {\r\n            setLoading(true);\r\n            setTimeout(() => { loadGrade(user, user.student.idNumber, level) }, 3000);\r\n            setTimeout(() => { setLoading(false);}, 3200 );\r\n          }} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const loadGrades1 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('1');\r\n    setGrade1Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades2 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('2');\r\n    setGrade2Details({\r\n      list: newArray\r\n    })\r\n  };\r\n\r\n  const loadGrades3 = async () => {\r\n   let newArray = await loadStudentGradesPerLevel('3');\r\n   setGrade3Details({\r\n      list: newArray\r\n    });\r\n  };\r\n\r\n  const loadGrades4 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('4');\r\n    setGrade4Details({\r\n       list: newArray\r\n     });\r\n  }\r\n\r\n  const loadGrades5 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('5');\r\n    setGrade5Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades6 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('6');\r\n    setGrade6Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades7 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('7');\r\n    setGrade7Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades8 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('8');\r\n    setGrade8Details({\r\n      list: newArray\r\n    });\r\n  }\r\n\r\n  const loadGrades9 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('9');\r\n    setGrade9Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades10 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('10');\r\n    setGrade10Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadAdvisoryGrades = async () => {\r\n    let user = JSON.parse(sessionStorage.user);\r\n    const userData = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      middleName: user.middleName\r\n    };\r\n\r\n    try {\r\n      let advisory = await AdditionalService.getAdvisory(userData);\r\n\r\n      if (!advisory) return;\r\n\r\n      let response = await gradesService.findAllGrades(advisory.data.gradeLevel);\r\n      let result = response.data.filter(user => user.gradeLevel === advisory.data.gradeLevel && user.status)\r\n      let list = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.student.firstName,\r\n          lastName: user.student.lastName,\r\n          middleName: user.student.middleName,\r\n          idNumber: user.student.idNumber,\r\n          contactNumber: user.student.contactNumber,\r\n          email: user.student.email,\r\n          section: user.student.section,\r\n          action:\r\n            <Button onClick={() => loadGrade(user, user.student.idNumber, advisory.data.gradeLevel)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n\r\n      setAdvisoryGrades(list);\r\n    } catch (error) {\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadGrades1();\r\n    loadGrades2();\r\n    loadGrades3();\r\n    loadGrades4();\r\n    loadGrades5();\r\n    loadGrades6();\r\n    loadGrades7();\r\n    loadGrades8();\r\n    loadGrades9();\r\n    loadGrades10();\r\n    loadGrades();\r\n    currentGradeUser();\r\n    getListOfTeacher();\r\n    loadAdvisoryGrades();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadGrades1,\r\n    grade2Details,\r\n    grade3Details,\r\n    grade4Details,\r\n    grade5Details,\r\n    grade6Details,\r\n    grade7Details,\r\n    grade8Details,\r\n    grade9Details,\r\n    grade10Details,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    gradeDetails,\r\n    selectedUserGrade,\r\n    showAllGradeVisible,\r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    advisoryGrades\r\n  }\r\n};\r\n\r\nexport default Grade1Action;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AttendanceTable = ({ details }) => {\r\n\r\n  const columns = [\r\n    {\r\n      title: <b></b>,\r\n      dataIndex: 'tag',\r\n    },\r\n    {\r\n      title: <b>Jun</b>,\r\n      dataIndex: 'Jun',\r\n    },\r\n    {\r\n      title: <b>Jul</b>,\r\n      dataIndex: 'Jul',\r\n    },\r\n    {\r\n      title: <b>Aug</b>,\r\n      dataIndex: 'Aug',\r\n    },\r\n    {\r\n      title: <b>Sep</b>,\r\n      dataIndex: 'Sep',\r\n    },\r\n    {\r\n      title: <b>Oct</b>,\r\n      dataIndex: 'Oct',\r\n    },\r\n    {\r\n      title: <b>Nov</b>,\r\n      dataIndex: 'Nov',\r\n    },\r\n    {\r\n      title: <b>Dec</b>,\r\n      dataIndex: 'Dec',\r\n    },\r\n    {\r\n      title: <b>Jan</b>,\r\n      dataIndex: 'Jan',\r\n    },\r\n    {\r\n      title: <b>Feb</b>,\r\n      dataIndex: 'Feb',\r\n    },\r\n    {\r\n      title: <b>Mar</b>,\r\n      dataIndex: 'Mar',\r\n    },\r\n    {\r\n      title: <b>Apr</b>,\r\n      dataIndex: 'Apr',\r\n    },\r\n    {\r\n      title: <b>Total</b>,\r\n      dataIndex: 'total',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Table columns={columns} dataSource={details}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AttendanceTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport UserForm from './userDetailsForm'\r\nimport UserTable from './gradeTable'\r\nimport GradeAction from '../grade/gradeAction'\r\nimport AdvisorAction from '../grade/advisoryAction'\r\nimport AttendanceTable from './attendanceTable';\r\nimport AttendanceAction from './attendanceAction';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst EmployeePage = () => {\r\n\r\n  let {\r\n    selectedUserGrade,\r\n    showAllGradeVisible,\r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let { getAttendance , attendances } = AttendanceAction();\r\n\r\n  let loadAttendance = async () => {\r\n    let user = JSON.parse(sessionStorage.user);\r\n    await getAttendance(user.idNumber);\r\n  };\r\n\r\n  if (attendances.length  === 0)  loadAttendance();;\r\n \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Student Details</Typography.Title>\r\n            }>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Full Name: </b>{selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName : null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Grade Level: </b>{JSON.parse(sessionStorage.user).gradeLevel}\r\n                  </p>\r\n                  <p>\r\n                    <b>Section: </b>{selectedUser ? selectedUser.section : null}\r\n                  </p>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName : null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber : null}\r\n                  </p>\r\n                  <b>Yr./Lvl: </b>\r\n                  <Select className=\"ml-15\" placeholder=\"Select Yr./Level\" onChange={(value) => filterCurrentGradeUser(value)}>\r\n                    <Option value=\"1\">1</Option>\r\n                    <Option value=\"2\">2</Option>\r\n                    <Option value=\"3\">3</Option>\r\n                    <Option value=\"4\">4</Option>\r\n                    <Option value=\"5\">5</Option>\r\n                    <Option value=\"6\">6</Option>\r\n                    <Option value=\"7\">7</Option>\r\n                    <Option value=\"8\">8</Option>\r\n                    <Option value=\"9\">9</Option>\r\n                    <Option value=\"10\">10</Option>\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <UserTable details={selectedUserGrade ? selectedUserGrade : []} />\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Attendance Record</Typography.Title>\r\n            }>\r\n              <AttendanceTable details={attendances}></AttendanceTable>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Collapse } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\n\r\nconst Grade1EditForm = ({ upgradeStudent, add, update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel, isAdviser = false }) => {\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  const userRole = JSON.parse(sessionStorage.user).role;\r\n\r\n  let lowestGrade = 50;\r\n  const hasUpdate = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n\r\n    if (subject && subject.recommendedGrade && subject.recommendedGrade[quarter] && subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter]) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  let updatesHolder = {};\r\n  let mapehObj = {\r\n    MAPEH1: 0,\r\n    MAPEH2: 0,\r\n    MAPEH3: 0,\r\n    MAPEH4: 0\r\n  };\r\n\r\n  const autoFillGrade = (subjectName = '', quarter = '', field = '', isDefault = false, quarterNum = 0) => {\r\n    let activeQuarter = sessionStorage.quarter;\r\n    let index = selectedGrade.subjects.findIndex(subject => subject.subjectName === subjectName);\r\n    let value = (selectedGrade.subjects[index] && selectedGrade.subjects[index].recommendedGrade) ? selectedGrade.subjects[index].recommendedGrade[quarter] : null;\r\n    let dafaultVal = (selectedGrade.subjects[index]) ? selectedGrade.subjects[index].subjectGrade[quarter] : lowestGrade;\r\n    dafaultVal = (dafaultVal && dafaultVal >= 50) ? dafaultVal : (activeQuarter === quarterNum) ? lowestGrade : 0;\r\n    value = (isDefault) ? dafaultVal : value;\r\n    let holder = {\r\n      [field]: value\r\n    };\r\n    updatesHolder = Object.assign(updatesHolder, holder);\r\n    return value;\r\n  };\r\n\r\n  //used to get the confirmed grades\r\n  const getGrade = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n    if (subject) {\r\n      return subject.subjectGrade[quarter];\r\n    } else {\r\n      return '0';\r\n    };\r\n  };\r\n\r\n  // const getMAPEHGrades = (quarter) => {\r\n  //   let q1 = document.getElementbyId('Music' + quarter).value;\r\n  //   let q2 = document.getElementbyId('Art' + quarter).value;\r\n  //   let q3 = document.getElementbyId('PE' + quarter).value;\r\n  //   let q4 = document.getElementbyId('Health' + quarter).value;\r\n  //   let average = (q1 + q2 + q3 + q4) / 4;\r\n  //   let key = 'MAPEH' + quarter;\r\n  //   mapehObj[key] = average;\r\n  // };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedGrade}\r\n      enableReinitialize={true}\r\n      onSubmit={async inputValues => {\r\n\r\n        let values = {};\r\n        values = Object.assign(values, updatesHolder);\r\n        values = Object.assign(values, inputValues);\r\n\r\n        let newValues = {\r\n          _id: values._id\r\n        };\r\n        let English = {};\r\n        let Filipino = {};\r\n        let Science = {};\r\n        let Math = {};\r\n        let MAPEH = {};\r\n        let Values = {};\r\n        let Music = {};\r\n        let Art = {};\r\n        let PE = {};\r\n        let Health = {};\r\n\r\n        if (values.English1 || values.English2 || values.English3 || values.English4) {\r\n          English = {\r\n            firstQuarter: values.English1,\r\n            secondQuarter: values.English2,\r\n            thirdQuarter: values.English3,\r\n            fourthQuarter: values.English4\r\n          }\r\n          newValues.English = English;\r\n        }\r\n        if (values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\r\n          Filipino = {\r\n            firstQuarter: values.Filipino1,\r\n            secondQuarter: values.Filipino2,\r\n            thirdQuarter: values.Filipino3,\r\n            fourthQuarter: values.Filipino4\r\n          }\r\n          newValues.Filipino = Filipino;\r\n        }\r\n        if (values.Science1 || values.Science2 || values.Science3 || values.Science4) {\r\n          Science = {\r\n            firstQuarter: values.Science1,\r\n            secondQuarter: values.Science2,\r\n            thirdQuarter: values.Science3,\r\n            fourthQuarter: values.Science4\r\n          }\r\n          newValues.Science = Science;\r\n        }\r\n        if (values.Math1 || values.Math2 || values.Math3 || values.Math4) {\r\n          Math = {\r\n            firstQuarter: values.Math1,\r\n            secondQuarter: values.Math2,\r\n            thirdQuarter: values.Math3,\r\n            fourthQuarter: values.Math4\r\n          }\r\n          newValues.Math = Math;\r\n        }\r\n        if (values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\r\n          MAPEH = {\r\n            firstQuarter: values.MAPEH1,\r\n            secondQuarter: values.MAPEH2,\r\n            thirdQuarter: values.MAPEH3,\r\n            fourthQuarter: values.MAPEH4\r\n          }\r\n          newValues.MAPEH = MAPEH;\r\n        }\r\n        if (values.Values1 || values.Values2 || values.Values3 || values.Values4) {\r\n          Values = {\r\n            firstQuarter: values.Values1,\r\n            secondQuarter: values.Values2,\r\n            thirdQuarter: values.Values3,\r\n            fourthQuarter: values.Values4\r\n          }\r\n          newValues.Values = Values;\r\n        };\r\n\r\n        if (values.Music1 || values.Music2 || values.Music3 || values.Music4) {\r\n          Music = {\r\n            firstQuarter: values.Music1,\r\n            secondQuarter: values.Music2,\r\n            thirdQuarter: values.Music3,\r\n            fourthQuarter: values.Music4\r\n          }\r\n          newValues.Music = Music;\r\n        };\r\n\r\n        if (values.Art1 || values.Art2 || values.Art3 || values.Art4) {\r\n          Art = {\r\n            firstQuarter: values.Art1,\r\n            secondQuarter: values.Art2,\r\n            thirdQuarter: values.Art3,\r\n            fourthQuarter: values.Art4\r\n          }\r\n          newValues.Art = Art;\r\n        };\r\n\r\n        if (values.PE1 || values.PE2 || values.PE3 || values.PE4) {\r\n          PE = {\r\n            firstQuarter: values.PE1,\r\n            secondQuarter: values.PE2,\r\n            thirdQuarter: values.PE3,\r\n            fourthQuarter: values.PE4\r\n          }\r\n          newValues.PE = PE;\r\n        };\r\n\r\n        if (values.Health1 || values.Health2 || values.Health3 || values.Health4) {\r\n          Health = {\r\n            firstQuarter: values.Health1,\r\n            secondQuarter: values.Health2,\r\n            thirdQuarter: values.Health3,\r\n            fourthQuarter: values.Health4\r\n          }\r\n          newValues.Health = Health;\r\n        };\r\n        update(newValues, isAdviser);\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\" >\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                  <Input disabled={true} value={values.student.idNumber} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"Name\" name=\"name\">\r\n                  <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                  <Input disabled={true} name=\"schoolYear\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects[0] &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"English\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"English1\"\r\n                              defaultValue={hasUpdate('English', 'firstQuarter') ?\r\n                                autoFillGrade('English', 'firstQuarter', 'English1') :\r\n                                autoFillGrade('English', 'firstQuarter', 'English1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"English2\"\r\n                              defaultValue={hasUpdate('English', 'secondQuarter') ?\r\n                                autoFillGrade('English', 'secondQuarter', 'English2') :\r\n                                autoFillGrade('English', 'secondQuarter', 'English2', true, '2')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"English3\"\r\n                              defaultValue={hasUpdate('English', 'thirdQuarter') ?\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3') :\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3', true, '3')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"English4\"\r\n                              defaultValue={hasUpdate('English', 'fourthQuarter') ?\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4') :\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4', true, '4')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[1] &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Filipino\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Filipino1\"\r\n                              defaultValue={hasUpdate('Filipino', 'firstQuarter') ?\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1') :\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Filipino2\"\r\n                              defaultValue={hasUpdate('Filipino', 'secondQuarter') ?\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2') :\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2', true, '2')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Filipino3\"\r\n                              defaultValue={hasUpdate('Filipino', 'thirdQuarter') ?\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3') :\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3', true, '3')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Filipino4\"\r\n                              defaultValue={hasUpdate('Filipino', 'fourthQuarter') ?\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4') :\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4', true, '4')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects.length !== 0 &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Science\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Science1\"\r\n                              defaultValue={hasUpdate('Science', 'firstQuarter') ?\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1') :\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Science2\"\r\n                              defaultValue={hasUpdate('Science', 'secondQuarter') ?\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2') :\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Science3\"\r\n                              defaultValue={hasUpdate('Science', 'thirdQuarter') ?\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3') :\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Science4\"\r\n                              defaultValue={hasUpdate('Science', 'fourthQuarter') ?\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4') :\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[3] &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Math\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Math1\"\r\n                              defaultValue={hasUpdate('Math', 'firstQuarter') ?\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1') :\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Math2\"\r\n                              defaultValue={hasUpdate('Math', 'secondQuarter') ?\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2') :\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Math3\"\r\n                              defaultValue={hasUpdate('Math', 'thirdQuarter') ?\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3') :\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Math4\"\r\n                              defaultValue={hasUpdate('Math', 'fourthQuarter') ?\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4') :\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4', true, 4)\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {/* {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[4] &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"MAPEH\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"MAPEH1\"\r\n                              defaultValue={hasUpdate('MAPEH', 'firstQuarter') ?\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1') :\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"MAPEH2\"\r\n                              defaultValue={hasUpdate('MAPEH', 'secondQuarter') ?\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2') :\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"MAPEH3\"\r\n                              defaultValue={hasUpdate('MAPEH', 'thirdQuarter') ?\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3') :\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"MAPEH4\"\r\n                              defaultValue={hasUpdate('MAPEH', 'fourthQuarter') ?\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4') :\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null} */}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[5] &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Values\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Values1\"\r\n                              defaultValue={hasUpdate('Values', 'firstQuarter') ?\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1') :\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Values2\"\r\n                              defaultValue={hasUpdate('Values', 'secondQuarter') ?\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2') :\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Values3\"\r\n                              defaultValue={hasUpdate('Values', 'thirdQuarter') ?\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Values4\"\r\n                              defaultValue={hasUpdate('Values', 'fourthQuarter') ?\r\n                                autoFillGrade('Values', 'fourthQuarter', 'Values4') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              {/*============================================================================ */}\r\n              {(isAdviser ||\r\n                selectedTeacherAssignedGrade.subjects[4] &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                ? (\r\n                  <React.Fragment>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"Music\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Music1\"\r\n                                  defaultValue={hasUpdate('Music', 'firstQuarter') ?\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1') :\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Music2\"\r\n                                  defaultValue={hasUpdate('Music', 'secondQuarter') ?\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2') :\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Music3\"\r\n                                  defaultValue={hasUpdate('Music', 'thirdQuarter') ?\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3') :\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Music4\"\r\n                                  defaultValue={hasUpdate('Music', 'fourthQuarter') ?\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4') :\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Art\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Art1\"\r\n                                  defaultValue={hasUpdate('Art', 'firstQuarter') ?\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1') :\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Art2\"\r\n                                  defaultValue={hasUpdate('Art', 'secondQuarter') ?\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2') :\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Art3\"\r\n                                  defaultValue={hasUpdate('Art', 'thirdQuarter') ?\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Art4\"\r\n                                  defaultValue={hasUpdate('Art', 'fourthQuarter') ?\r\n                                    autoFillGrade('Art', 'fourthQuarter', 'Art4') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"PE\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"PE1\"\r\n                                  defaultValue={hasUpdate('PE', 'firstQuarter') ?\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1') :\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"PE2\"\r\n                                  defaultValue={hasUpdate('PE', 'secondQuarter') ?\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2') :\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"PE3\"\r\n                                  defaultValue={hasUpdate('PE', 'thirdQuarter') ?\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3') :\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"PE4\"\r\n                                  defaultValue={hasUpdate('PE', 'fourthQuarter') ?\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4') :\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Health\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Health1\"\r\n                                  defaultValue={hasUpdate('Health', 'firstQuarter') ?\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1') :\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Health2\"\r\n                                  defaultValue={hasUpdate('Health', 'secondQuarter') ?\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2') :\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\" && userRole !== 'Teacher'}\r\n                                  name=\"Health3\"\r\n                                  defaultValue={hasUpdate('Health', 'thirdQuarter') ?\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3') :\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Health4\"\r\n                                  defaultValue={hasUpdate('Health', 'fourthQuarter') ?\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4') :\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                ) : ('')}\r\n              {/*============================================================================ */}\r\n            </>\r\n            {userRole === 'Teacher' ? (\r\n              <Button className=\"btn-save\" htmlType=\"submit\">\r\n                <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n              </Button>\r\n            ) : ('')}\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default Grade1EditForm;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel) \r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"English\" name=\"english\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Filipino\" name=\"filipino\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Science\" name=\"science\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Math\" name=\"math\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Values\" name=\"values\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled, DeleteOutlined } from '@ant-design/icons';\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n  let {\r\n    deleteAdvisory\r\n  } = AdvisorAction({});\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={24}>\r\n            <Form.Item label=\"Advisor\" name=\"advisor\">\r\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n                 { selectedTeacherAssgined ? (\r\n                    <Button type=\"danger\" style={{ marginLeft: '10px' }} ghost htmlType=\"button\" onClick={() => deleteAdvisory(selectedTeacherAssgined._id)}>\r\n                      <DeleteOutlined /> Remove Advisor\r\n                    </Button>\r\n                  ) : ('') }\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import BaseService from '../../baseService';\r\nclass TeacherService extends BaseService {\r\n  constructor() {\r\n    super('teacher');\r\n  }\r\n\r\n  add = teacherObj => {\r\n    return this.axiosInstance.post('/create-teacher', teacherObj);\r\n  };\r\n\r\n  update = teacherObj => {\r\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-teacher/' + id);\r\n  };\r\n\r\n  findAllTeacher = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new TeacherService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport teacherService from '../grade/teacherService';\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState({});\r\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\r\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\r\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\r\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\r\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\r\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\r\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\r\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\r\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\r\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\r\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\r\n\r\n  const add = async (values, gradeLevel) => {\r\n    let English = await userService.findyById(values.english)\r\n    let Filipino = await userService.findyById(values.filipino)\r\n    let Science = await userService.findyById(values.science)\r\n    let Math = await userService.findyById(values.math)\r\n    let Values = await userService.findyById(values.values)\r\n    let Mapeh = await userService.findyById(values.mapeh)\r\n    let finalAddValue = {\r\n        gradeLevel : gradeLevel,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            teacher: English.data\r\n            },\r\n            {\r\n            subjectName: \"Filipino\",\r\n            teacher: Filipino.data\r\n            },\r\n            {\r\n            subjectName: \"Science\",\r\n            teacher: Science.data\r\n            },   \r\n            {\r\n            subjectName: \"Math\",\r\n            teacher: Math.data\r\n            },   \r\n            {\r\n            subjectName: \"Values\",\r\n            teacher: Values.data\r\n            },     \r\n            {\r\n            subjectName: \"Mapeh\",\r\n            teacher: Mapeh.data\r\n            },                                                    \r\n        ]\r\n    }\r\n    let response = teacherService.add(finalAddValue)\r\n    window.location.reload()\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setSelectedTeacherAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setSelectedTeacherAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setSelectedTeacherAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setSelectedTeacherAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setSelectedTeacherAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setSelectedTeacherAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setSelectedTeacherAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setSelectedTeacherAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setSelectedTeacherAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setSelectedTeacherAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideTeacher = async () => {\r\n    setShowTeacherVisible(false)\r\n  };\r\n\r\n  const showTeacher = async (gradeLevel) => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setSelectedTeacherAssgined(result[0].subjects)\r\n    } else {\r\n        setSelectedTeacherAssgined({})\r\n    }\r\n    setShowTeacherVisible(true)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    selectedTeacher,\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst AdvisoryGrades = () => {\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    advisoryGrades\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Advisory Grades Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={advisoryGrades} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm\r\n\t\tupgradeStudent={upgradeStudent} \r\n\t\tadd={addGrade} update={editGrade} \r\n\t\tselectedTeacher={selectedTeacher} \r\n\t\tselectedGrade={selectedGrade} \r\n\t\tgradeLevel={\"2\"} \r\n\t\tselectedTeacherAssignedGrade={selectedTeacherAssignedGrade2} \r\n\t\tisAdviser=\"true\"/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n    </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default AdvisoryGrades;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\n\r\nimport GradeAction from './gradeAction'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AdvisorAction from './advisoryAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\r\n                <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{ marginLeft: '20px' }}>\r\n            Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 1\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 1\r\n                  </Typography.Title>\r\n          }\r\n          width={500}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"1\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance , attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return ;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\r\n              <PlusCircleOutlined type=\"add-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\r\n              <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                < RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 2\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 2\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"2\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade3Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n            </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 3\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 3\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"3\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade4Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 4\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 4\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"4\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade5Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance , attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return ;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 5\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 5\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"5\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade6Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 6\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 6\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"6\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade7Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 7\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n        </Drawer>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 7\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"7\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade8Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 8\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 8\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"8\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade9Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 9\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 9\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"9\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade10Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Typography.Title level={4} style={{marginLeft: '20px'}}>\r\n              Student Attendance\r\n          </Typography.Title>\r\n          <AttendanceTable details={attendances} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 10\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 10\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"10\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst Grade1EditForm = ({selectedOffspring }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedOffspring}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n                  {console.log(selectedOffspring)}\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>     \r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\r\n                        <Input disabled={true} name=\"gradeLevel\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>                     \r\n                  <Row gutter={16}>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                   \r\n                     <Col span={12}>\r\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                     <Col span={12}>\r\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Grade Level</b>,\r\n        dataIndex: 'gradeLevel',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport GradeForm from '../offspring/offspringForm'\r\n\r\nimport GradeAction from '../grade/gradeAction'\r\n\r\nimport OffspringTable from '../offspring/offspringTable'\r\n\r\nconst OffspringPage = () => {\r\n\r\n\r\n  let {\r\n    selectedGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    gradeDetails\r\n  } = GradeAction({});\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 12 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 12 }}>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <OffspringTable details={gradeDetails.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  \r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm selectedOffspring={selectedGrade}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default OffspringPage;\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Name</b>,\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: <b>ID Number</b>,\r\n        dataIndex: 'idNumber',\r\n     },\r\n      {\r\n         title: <b>Time In</b>,\r\n         dataIndex: 'timeIn',\r\n      },\r\n      {\r\n         title: <b>Time Out</b>,\r\n         dataIndex: 'timeOut',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('timekeeping');\r\n  }\r\n\r\n  add = timekeepingObj => {\r\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\r\n  };\r\n\r\n  update = timekeepingObj => {\r\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\r\n  };\r\n\r\n  findAllTimekeeping = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport TimekeepingService from './timeKeepingService';\r\nimport moment from 'moment';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\r\n  let [timeIn, setTimeIn] = useState(new Date());\r\n  let [timeOut, setTimeOut] = useState(new Date())\r\n\r\n  const filterUsers = async (date) => {\r\n    if(date){\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\r\n      let newArray = await result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } else {\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let newArray = await response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } \r\n\r\n  }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await TimekeepingService.findAllTimekeeping();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        name: user.student.firstName + \" \" + user.student.lastName,\r\n        idNumber: user.student.idNumber,\r\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n    }\r\n    })\r\n    setUserDetails({list: newArray});\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n}, []);\r\n\r\n\r\n  return {\r\n    userDetails,\r\n    filterUsers\r\n  }\r\n};\r\n\r\nexport default UserAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport TimekeepingTable from './timeKeepingTable'\r\nimport AttendanceAction from './AttendanceAction'\r\nconst {Option} = Select;\r\n\r\nconst TimekeepingPage = () => {\r\n    let{\r\n        userDetails  ,\r\n        filterUsers\r\n    } = AttendanceAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\r\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"January\">January</Option>\r\n          <Option value=\"Febuary\">Febuary</Option>\r\n          <Option value=\"March\">March</Option>\r\n          <Option value=\"April\">April</Option>\r\n          <Option value=\"May\">May</Option>\r\n          <Option value=\"June\">June</Option>\r\n          <Option value=\"July\">July</Option>\r\n          <Option value=\"August\">August</Option>\r\n          <Option value=\"September\">September</Option>\r\n          <Option value=\"October\">October</Option>\r\n          <Option value=\"November\">November</Option>\r\n          <Option value=\"December\">December</Option>\r\n        </Select>\r\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"1\">1</Option>\r\n          <Option value=\"2\">2</Option>\r\n          <Option value=\"3\">3</Option>\r\n          <Option value=\"4\">4</Option>\r\n          <Option value=\"5\">5</Option>\r\n          <Option value=\"6\">6</Option>\r\n          <Option value=\"7\">7</Option>\r\n          <Option value=\"8\">8</Option>\r\n          <Option value=\"9\">9</Option>\r\n          <Option value=\"10\">10</Option>\r\n          <Option value=\"11\">11</Option>\r\n          <Option value=\"12\">12</Option>\r\n          <Option value=\"13\">13</Option>\r\n          <Option value=\"14\">14</Option>\r\n          <Option value=\"15\">15</Option>\r\n          <Option value=\"16\">16</Option>\r\n          <Option value=\"17\">17</Option>\r\n          <Option value=\"18\">18</Option>\r\n          <Option value=\"19\">19</Option>\r\n          <Option value=\"20\">20</Option>\r\n          <Option value=\"21\">21</Option>\r\n          <Option value=\"22\">22</Option>\r\n          <Option value=\"23\">23</Option>\r\n          <Option value=\"24\">24</Option>\r\n          <Option value=\"25\">25</Option>\r\n          <Option value=\"26\">26</Option>\r\n          <Option value=\"27\">27</Option>\r\n          <Option value=\"28\">28</Option>\r\n          <Option value=\"29\">29</Option>\r\n          <Option value=\"30\">30</Option>\r\n          <Option value=\"31\">31</Option>\r\n        </Select>\r\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\r\n        </Col>\r\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <TimekeepingTable details={userDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default TimekeepingPage;\r\n\r\n","import React from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\n\r\nconst LoginForm = ({login}) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            username: \"\",\r\n            password: \"\"\r\n         }}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values, actions) => {\r\n             login(values)\r\n            // await login(values)\r\n            // actions.setSubmitting(false);\r\n         }}\r\n         render={\r\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\r\n               <Spin spinning={isSubmitting}>\r\n                  <Form className=\"mt-10P\">\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              USERNAME:\r\n                           </b>\r\n                           <Form.Item name=\"username\">\r\n                              <Input name=\"username\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              PASSWORD:\r\n                           </b>\r\n                           <Form.Item name=\"password\">\r\n                              <Input.Password name=\"password\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\r\n                              Login\r\n                        </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </Spin>\r\n            )}\r\n      />\r\n   );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\r\n\r\nimport '../../App.css';\r\nimport LoginForm from './loginForm';\r\nimport UserAction from '../user/userAction'\r\n\r\nconst version = process.env.REACT_APP_VERSION\r\n\r\n\r\nconst Login = () => {\r\n    let [showLogin, setShowLogin] = useState(false);\r\n    let [showContact, setShowContact] = useState(false);\r\n    let [showAboutUs, setShowAboutUs] = useState(false);\r\n    let [showHome, setShowHome] = useState(true);\r\n    const {Content} = Layout;\r\n    let {\r\n        login,\r\n        loginCounter\r\n      } = UserAction({});\r\n    \r\n    const loginUser = async (credentials) => {\r\n        login(credentials);\r\n    }\r\n\r\n    const loginFunction = async () => {\r\n        setShowHome(false)\r\n        setShowLogin(true)\r\n    }\r\n\r\n    const contactFunction = async () => {\r\n        setShowHome(false)\r\n        setShowContact(true)\r\n    }\r\n\r\n    const aboutUsFunction = async () => {\r\n        setShowHome(false)\r\n        setShowAboutUs(true)\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"login\">\r\n            {/* Landing Page */}\r\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\r\n                <Row className=\"center\">\r\n                    <Col>\r\n                        <Button className=\"btn-home mr-10\">HOME</Button>\r\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\r\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\r\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Content> : null}\r\n            \r\n\r\n            {/* Login Page */}\r\n            {showLogin \r\n            \r\n            ?             <Content className=\"contentLogin mt-5P\">\r\n            <div className=\"center mb-15\">\r\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\r\n            </div>\r\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\r\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\r\n            <Row className=\"mt-10 center\">\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\r\n                    <LoginForm login={loginUser}/>\r\n                </Col>\r\n            </Row>\r\n        </Content> : null}\r\n\r\n\r\n             {/* Contact Page */}\r\n            {showContact ?            <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center mb-40\">\r\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    <b>Telephone Number:</b> 8 245 4148<br/>\r\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\r\n                    <b>Email Address: </b>\r\n                    <u className=\"blue\">\r\n                        admission.snss@gmail.com\r\n                    </u>\r\n                </Typography>\r\n            </Content>:null}\r\n \r\n\r\n\r\n            {/* About Page */}\r\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center h-70 mb-35\">\r\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\r\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\r\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\r\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\r\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\r\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \r\n                </Typography>\r\n            </Content> : null}\r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\r\n\r\nimport {\r\n    UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\r\n  } from '@ant-design/icons';\r\n  const { SubMenu } = Menu;\r\nconst SiderMenu = ({theme, collapsed}) => {\r\n    return ( \r\n        <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 1 Management</span>\r\n                    <Link to={'/grade1'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 2 Management</span>\r\n                    <Link to={'/grade2'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 3 Management</span>\r\n                    <Link to={'/grade3'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 4 Management</span>\r\n                    <Link to={'/grade4'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 5 Management</span>\r\n                    <Link to={'/grade5'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 6 Management</span>\r\n                    <Link to={'/grade6'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 7 Management</span>\r\n                    <Link to={'/grade7'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 8 Management</span>\r\n                    <Link to={'/grade8'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 9 Management</span>\r\n                    <Link to={'/grade9'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 10 Management</span>\r\n                    <Link to={'/grade10'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n           \r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"dashboard\" className=\"menus\">\r\n                    <DashboardOutlined />\r\n                    <span className=\"fs-13\">Dashboard</span>\r\n                    <Link to={'/dashboard'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n           \r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Admin</span>\r\n                    <Link to={'/admin'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Parent</span>\r\n                    <Link to={'/parent'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Student</span>\r\n                    <Link to={'/student'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Teacher</span>\r\n                    <Link to={'/teacher'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"timekeeping\" className=\"menus\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Attendance</span>\r\n                    <Link to={'/timekeeping'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n                {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?  \r\n                <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Grade</span>\r\n                    <Link to={'/offspring'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"auditTrail\" className=\"menus\">\r\n                   <AuditOutlined />\r\n                    <span className=\"fs-13\">Audit Trail</span>\r\n                    <Link to={'/auditTrail'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n    \r\n                {JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                    <Menu.Item key=\"advisoryClass\" className=\"menus\">\r\n                        <UserOutlined/>\r\n                        <span className=\"fs-13\">Advisory Class</span>\r\n                        <Link to={'/advisoryclass'} className=\"nav-link\" />\r\n                    </Menu.Item>  :\r\n                null}\r\n            </Menu>\r\n    );\r\n}\r\n \r\nexport default SiderMenu;\r\n","import {createContext} from 'react';\r\n\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\r\nimport {  Menu } from 'antd';\r\nimport { UserContext } from './userContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    LogoutOutlined,\r\n    SettingOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst UserMenu = () => {\r\n\r\n   const { setLoggedUser } = useContext(UserContext);\r\n\r\n   const logout = async () => {\r\n    sessionStorage.removeItem('user');\r\n    window.location.reload(false);\r\n    //   setLoggedUser(null);\r\n    //   sessionStorage.removeItem('token');\r\n    //   sessionStorage.removeItem('user');\r\n   }\r\n\r\n   return (\r\n      <Menu className=\"mt-20\">\r\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\r\n            <LogoutOutlined />Logout\r\n         </Menu.Item>\r\n         <Menu.Item className=\"dropdown-item\">\r\n            <SettingOutlined /> Settings\r\n            <Link to={'/settings'} className=\"nav-link\" />\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AuditTrailTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: 'Name',\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Activity',\r\n        dataIndex: 'activity',\r\n     },\r\n      {\r\n         title: 'Date',\r\n         dataIndex: 'date',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\r\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\r\n\r\n    const addAudit = async values => {\r\n    let finalAudit = {\r\n        user : values.user,\r\n        activity: values.activity,\r\n        date: values.date,\r\n    }\r\n    let response = auditTrailService.add(finalAudit)\r\n    };\r\n    \r\n    const getListOfAudit = async () => {\r\n      let response = await auditTrailService.findAllAudit();\r\n      let newArray = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format('MMMM Do YYYY'),\r\n          activity: user.activity,\r\n        }\r\n      })\r\n      setAuditTrailDetails({list: newArray})\r\n    };\r\n\r\n    const filterAudit = async (date) => {\r\n      let datas = [];\r\n      if (date) {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = await response.data.filter(\r\n          (user) =>\r\n            moment(user.date).format(\"MMMM Do YYYY\") ===\r\n            moment(date).format(\"MMMM Do YYYY\")\r\n        );\r\n      } else {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = response.data;\r\n      };\r\n\r\n      let newArray = await datas.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\r\n          activity: user.activity\r\n        };\r\n      });\r\n\r\n    setAuditTrailDetails({ list: newArray });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getListOfAudit();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    addAudit,\r\n    auditTrailDetails,\r\n    filterAudit\r\n  }\r\n};\r\n\r\nexport default AuditTrailAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport AuditTrailTable from './auditTrailTable'\r\nimport AuditTrailAction from './auditTrailAction'\r\nconst {Option} = Select;\r\n\r\nconst AuditTrailPage = () => {\r\n  let { auditTrailDetails, filterAudit } = AuditTrailAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n\t<Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">\r\n            Audit Trail\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n          <DatePicker\r\n            className=\"w-100P\"\r\n            placeholder={\"Input Date Here\"}\r\n            onChange={(date, dateString) => filterAudit(date)}\r\n          />\r\n        </Col>\r\n        {/* <Col lg={{ span: 24 }}>\r\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\r\n          </Button>\r\n        </Col> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <AuditTrailTable details={auditTrailDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default AuditTrailPage;\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport User from \"./components/user/user.js\";\r\nimport Student from \"./components/user/student.js\";\r\nimport Parent from \"./components/user/parent.js\";\r\nimport Teacher from \"./components/user/teacher.js\";\r\nimport UserSetting from \"./components/user/userSetting.js\";\r\nimport UserDetail from \"./components/userDetails/userDetails.js\";\r\nimport AdvisoryGrades from \"./components/grade/advisoryGrades\";\r\nimport Grade1 from \"./components/grade/grade1\";\r\nimport Grade2 from \"./components/grade/grade2\";\r\nimport Grade3 from \"./components/grade/grade3\";\r\nimport Grade4 from \"./components/grade/grade4\";\r\nimport Grade5 from \"./components/grade/grade5\";\r\nimport Grade6 from \"./components/grade/grade6\";\r\nimport Grade7 from \"./components/grade/grade7\";\r\nimport Grade8 from \"./components/grade/grade8\";\r\nimport Grade9 from \"./components/grade/grade9\";\r\nimport Grade10 from \"./components/grade/grade10\";\r\nimport Offspring from \"./components/offspring/offspring.js\";\r\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\r\nimport QuarterService from \"../src/components/quarter/quarterService\"\r\n// import Item from \"./components/item/item.js\";\r\nimport Login from \"./components/login/login.js\";\r\nimport SiderMenu from \"./components/siderMenu\"\r\nimport UserMenu from \"./components/userMenu\"\r\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\r\n\r\nimport { UserContext } from './components/userContext'\r\n\r\nconst { Option } = Select;\r\n\r\nconst renderStudents = isAdvisory => {\r\n  return (<Student />);\r\n};\r\n\r\nconst App = () => {\r\n  const { Content, Sider, Header } = Layout;\r\n  let [loggedUser, setLoggedUser] = useState(null);\r\n  let [collapsed, setCollapsed] = useState(false);\r\n  let [theme] = useState(\"dark\");\r\n\r\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.user) {\r\n      setLoggedUser(JSON.parse(sessionStorage.user));\r\n    }\r\n  }, []);\r\n\r\n  const onChangeFunction = async (value) => {\r\n    // console.log(value)\r\n    let response = await QuarterService.update({_id: sessionStorage._id, quarter : value})\r\n    sessionStorage.setItem(\"quarter\", value)\r\n    window.location.reload(false)\r\n    // console.log(sessionStorage._id)\r\n    // console.log(sessionStorage.quarter)\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      {\r\n        loggedUser ?\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <BrowserRouter>\r\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\r\n                  <Sider className=\"sider\" collapsed={collapsed}>\r\n                    <Header className=\"sideBarHeader text-white\">\r\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\r\n                    </Header>\r\n                    <Content className=\"mt-20\">\r\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\r\n                    </Content>\r\n                  </Sider>\r\n                : null}\r\n                <Layout>\r\n                  <Header className=\"bg-white\">\r\n                    <a href onClick={() => {\r\n                      setCollapsed(!collapsed)\r\n                    }}>\r\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\r\n                    </a>\r\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ?                     <span className=\"left\">\r\n                      Quarter: &nbsp;\r\n                    <Select onChange={\r\n                      (value)=> \r\n                      onChangeFunction(value)\r\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\r\n                              <Option value=\"1\">1</Option>\r\n                              <Option value=\"2\">2</Option>\r\n                              <Option value=\"3\">3</Option>\r\n                              <Option value=\"4\">4</Option>\r\n                           </Select>\r\n                    </span> : null}\r\n\r\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                      <span>\r\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\"/>\r\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\r\n                      </span>\r\n                    : null}\r\n\r\n\r\n                    <span className=\"right\">\r\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\r\n                      <Dropdown overlay={<UserMenu />}>\r\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\r\n                      </Dropdown>\r\n                    </span>\r\n                  </Header>\r\n                  <Layout>\r\n                    <Content className=\"pt-30 pb-30\">\r\n                      <Switch>\r\n                      {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/dashboard\"\r\n                       /> :   \r\n                       JSON.parse(sessionStorage.user).role === \"Parent\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/offspring\"\r\n                       /> :                        JSON.parse(sessionStorage.user).role === \"Teacher\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/grade1\"\r\n                       />: <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/\"\r\n                       />}\r\n                            <Route path=\"/settings\" component={UserSetting} />\r\n                            <Route path=\"/admin\" component={User} />\r\n                            <Route path=\"/student\" component={ Student } />\r\n                            <Route path=\"/parent\" component={Parent} />\r\n                            <Route path=\"/teacher\" component={Teacher} />\r\n                            <Route path=\"/dashboard\" component={Dashboard}/>\r\n                            <Route path=\"/advisoryclass\" component={AdvisoryGrades} />\r\n                            <Route path=\"/grade1\" component={Grade1} />\r\n                            <Route path=\"/grade2\" component={Grade2} />\r\n                            <Route path=\"/grade3\" component={Grade3} />\r\n                            <Route path=\"/grade4\" component={Grade4} />\r\n                            <Route path=\"/grade5\" component={Grade5} />\r\n                            <Route path=\"/grade6\" component={Grade6} />\r\n                            <Route path=\"/grade7\" component={Grade7} />\r\n                            <Route path=\"/grade8\" component={Grade8} />\r\n                            <Route path=\"/grade9\" component={Grade9} />\r\n                            <Route path=\"/grade10\" component={Grade10} />\r\n                            <Route path=\"/offspring\" component={Offspring} />\r\n                            <Route path=\"/timekeeping\" component={Timekeeping}/>\r\n                            <Route path=\"/auditTrail\" component={AuditTrail}/>\r\n                            <Route path=\"/\" component={UserDetail} />\r\n                      </Switch>\r\n                    </Content>\r\n                  </Layout>\r\n                </Layout>\r\n              </BrowserRouter>\r\n            </Layout>\r\n            <Layout>\r\n            </Layout>\r\n          </BrowserRouter>\r\n                    :\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Redirect from=\"*\" to=\"/login\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n          }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}