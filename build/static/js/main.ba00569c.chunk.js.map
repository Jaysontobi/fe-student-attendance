{"version":3,"sources":["config.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/dashboard/dashboard.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/auditTrail/auditTrailService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/grade/advisoryService.js","components/grade/gradeAction.js","components/grade/advisoryAction.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/grade/teacherAction.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/offspring/offspringTable.js","components/offspring/offspring.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","id","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","userObj","update","_id","findAllUser","findyById","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","a","userService","response","parent","data","filter","user","role","student","teacher","length","useEffect","EmployeePage","DashboardAtion","className","gutter","xs","span","sm","md","lg","title","bordered","Option","Select","UserEditForm","selectedUser","selectedParent","loading","initialValues","enableReinitialize","onSubmit","values","console","log","render","touched","setFieldValue","spinning","delay","Item","label","name","disabled","JSON","parse","sessionStorage","value","firstName","lastName","map","Password","htmlType","CheckCircleFilled","type","gradesObj","findAllGrades","level","quarterObj","findAllQuarter","auditTrailObj","findAllAudit","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","idNumber","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","loggedDate","toISOString","details","auditTrailService","setItem","stringify","filterStudent","newArray","key","action","onClick","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","loadParent","loadAdmin","newArrayCredentials","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","columns","dataIndex","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","Title","placeholder","e","target","PlusCircleOutlined","width","visible","onClose","bodyStyle","paddingBottom","TimeKeepingTable","advisoryObj","findAllAdvisory","Grade1Action","studentAdvisor","setStudentAdvisor","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","setSelectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","upgradeStudent","userCurrentGrade","parseInt","currentUser","allStudent","result1","currentStudent","toString","editGrade","grade","English","newEnglishGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","MAPEH","newMAPEHGrade","Values","newValuesGrade","showGrade","loadGrade","getCurrentGradeUser","getListOfTeacher","filterCurrentGradeUser","subject","remarks","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","FinalGrade","Remarks","advisoryService","currentGradeUser","loadGrades","finalOffspring","offspring","off","push","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","TeacherAction","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","addAdvisor","advisor","advisorTeacher","finalAddValue","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","GradeAction","Grade1EditForm","selectedTeacherAssignedGrade","newValues","English1","English2","English3","English4","Filipino1","Filipino2","Filipino3","Filipino4","Science1","Science2","Science3","Science4","Math1","Math2","Math3","Math4","MAPEH1","MAPEH2","MAPEH3","MAPEH4","Values1","Values2","Values3","Values4","undefined","style","defaultValue","TeacherForm","selectedTeacherAssgined","GradeTable","teacherObj","findAllTeacher","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","hideTeacher","showTeacher","GradePage","addGrade","AdvisorAction","RiseOutlined","selectedOffspring","OffspringPage","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","AttendanceAction","dateString","LoginForm","actions","errors","isSubmitting","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","src","SubMenu","Menu","SiderMenu","theme","collapsed","mode","icon","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","filterAudit","datas","AuditTrailPage","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","href","overlay","Text","exact","from","path","component","User","Student","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Offspring","Timekeeping","AuditTrail","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba00569c.chunk.js","sourcesContent":["/**\r\n * declare all configurations in here\r\n */\r\n\r\n//declare as LOCAL for local and PRODUCTION for production\r\nconst ENVIRONMENT = 'PRODUCTION';\r\n\r\nconst LOCAL_BE = 'http://localhost:14000';\r\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\r\n\r\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE };","import axios from 'axios';\r\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\r\nclass BaseService {\r\n  constructor(moduleUrl) {\r\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\r\n      PRODUCTION_BE + \"/\" + moduleUrl :\r\n      LOCAL_BE + \"/\" + moduleUrl;\r\n    this.axiosInstance = axios.create({\r\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\r\n        PRODUCTION_BE + \"/\" + moduleUrl :\r\n        LOCAL_BE + \"/\" + moduleUrl\r\n    })\r\n    \r\n    // this.axiosInstance.interceptors.request.use(function (config) {\r\n    //   const token = sessionStorage.getItem('token');\r\n    //   config.headers[\"x-authorization\"] = token;\r\n    //   return config;\r\n    // });\r\n  }\r\n\r\n  edit = newObj => {\r\n    return this.axiosInstance.put('', newObj);\r\n  };\r\n\r\n  add = newObj => {\r\n    return this.axiosInstance.post('', newObj);\r\n  };\r\n\r\n  getById = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  delete = crudId => {\r\n    return this.axiosInstance.delete('/' + crudId);\r\n  };\r\n  softDelete = crudId => {\r\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\r\n  };\r\n}\r\nexport default BaseService;\r\n","import BaseService from '../../baseService';\r\nclass UserService extends BaseService {\r\n  constructor() {\r\n    super('user');\r\n  }\r\n\r\n  add = userObj => {\r\n    return this.axiosInstance.post('/create-user', userObj);\r\n  };\r\n\r\n  update = userObj => {\r\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\r\n  };\r\n\r\n  findAllUser = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-user/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( \r\n      {numberOfStudents : 0, \r\n      numberOfTeachers: 0,\r\n      numberOfParents : 0}\r\n      );\r\n\r\n  const getListOfUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let parent = response.data.filter(user => user.role === \"Parent\");\r\n    let student = response.data.filter(user => user.role === \"Student\");\r\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\r\n    setUserDetails({\r\n        numberOfParents: parent.length,\r\n        numberOfStudents : student.length, \r\n        numberOfTeachers: teacher.length\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfUsers();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    userDetails\r\n  }\r\n};\r\n\r\nexport default UserAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport DashboardAtion from \"../dashboard/dashboardAction\"\r\n\r\nconst EmployeePage = () => { \r\n    let{\r\n        userDetails\r\n      } = DashboardAtion({});\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n    <Row gutter={16}>\r\n      <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\r\n        <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfStudents}\r\n            </span>\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n            {userDetails.numberOfParents}\r\n          </span>\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n            {userDetails.numberOfTeachers}\r\n          </span>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst UserEditForm = ({ add,update, selectedUser, selectedParent }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n   let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            if(values._id) {\r\n               console.log(values)\r\n               update(values)\r\n            } else {\r\n               add(values)\r\n      \r\n               // window.location.reload(false);\r\n            }\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n               <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"First Name\" name=\"firstName\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Middle Name\" name=\"middleName\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Last Name\" name=\"lastName\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Gender\" name=\"gender\">\r\n                          <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\r\n                              <Option value=\"Male\">Male</Option>\r\n                              <Option value=\"Female\">Female</Option>\r\n                           </Select>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\r\n                        <Select disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gradeLevel\">\r\n                              <Option value=\"1\">1</Option>\r\n                              <Option value=\"2\">2</Option>\r\n                              <Option value=\"3\">3</Option>\r\n                              <Option value=\"4\">4</Option>\r\n                              <Option value=\"5\">5</Option>\r\n                              <Option value=\"6\">6</Option>\r\n                              <Option value=\"7\">7</Option>\r\n                              <Option value=\"8\">8</Option>\r\n                              <Option value=\"9\">9</Option>\r\n                              <Option value=\"10\">10</Option>\r\n                           </Select>\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"section\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Birth Day\" name=\"birthDate\">\r\n                           <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Birth Place\" name=\"birthPlace\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Age\" name=\"age\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"Parent\" name=\"parentId\">\r\n                     <Select value={values.parent ? values.parent.firstName + \" \" + values.parent.lastName : \"\"} name=\"parentId\" disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"}>\r\n                        {selectedParent.map(parent => {\r\n                                 return <Option value={parent._id}>{parent.firstName + \" \" + parent.lastName}</Option>\r\n                        })}\r\n                     </Select>\r\n                     </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Contact Number\" name=\"contactNumber\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Email\" name=\"email\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Role\" name=\"role\">\r\n                           <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"role\">\r\n                              <Option value=\"Admin\">Admin</Option>\r\n                              <Option value=\"Student\">Student</Option>\r\n                              <Option value=\"Parent\">Parent</Option>\r\n                              <Option value=\"Teacher\">Teacher</Option>\r\n                           </Select>\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Password\" name=\"password\">\r\n                           <Input.Password disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                 {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                   <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button> : null}\r\n                 \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;","import BaseService from '../../baseService';\r\nclass GradesService extends BaseService {\r\n  constructor() {\r\n    super('grades');\r\n  }\r\n\r\n  add = gradesObj => {\r\n    return this.axiosInstance.post('/create-grades', gradesObj);\r\n  };\r\n\r\n  update = gradesObj => {\r\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-grades/' + id);\r\n  };\r\n\r\n  findAllGrades = (level ='') => {\r\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new GradesService();\r\n","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('quarter');\r\n  }\r\n\r\n  add = quarterObj => {\r\n    return this.axiosInstance.post('/create-quarter', quarterObj);\r\n  };\r\n\r\n  update = quarterObj => {\r\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\r\n  };\r\n\r\n  findAllQuarter = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-quarter/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import BaseService from '../../baseService';\r\nclass AuditTrailService extends BaseService {\r\n  constructor() {\r\n    super('auditTrail');\r\n  }\r\n\r\n  add = auditTrailObj => {\r\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\r\n  };\r\n\r\n  update = auditTrailObj => {\r\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\r\n  };\r\n\r\n  findAllAudit = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-autditrail/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new AuditTrailService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from './userService';\r\nimport gradesService from '../grade/gradesService';\r\nimport quarterService from '../quarter/quarterService'\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\r\n  let [adminList, setAdminList] = useState([])\r\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\r\n  let [parentList, setParentList] = useState([])\r\n  let [studentList, setStudentList] = useState([])\r\n  let [teacherList, setTeacherList] = useState([])\r\n  let [showUserVisible, setShowUserVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n  let [selectedParent, setSelectedParent] = useState([]);\r\n\r\n  let [loginCounter, setLoginCounter] = useState(false);\r\n\r\n  const addUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Add User\",\r\n      date:new Date()\r\n    }\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.add(values)\r\n    .then(function (res) {\r\n      if(values.role === \"Student\"){\r\n        let gradeObj = {\r\n          status: true,\r\n          student: values,\r\n          gradeLevel: values.gradeLevel,\r\n          section: values.section,\r\n          schoolYear : values.schoolYear,\r\n          subjects: [{\r\n              subjectName: \"English\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Filipino\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Science\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Math\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"MAPEH\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Values\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          }]\r\n      }\r\n      let response = gradesService.add(gradeObj)\r\n      }\r\n    \r\n        \r\n        setSelectedUser({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            employeeNumber: \"\",\r\n            department: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n        window.location.reload(false);\r\n    })\r\n  };\r\n\r\n  const editUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Edit User\",\r\n      date:new Date()}\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.update(values)\r\n    .then(function (res) {\r\n        setSelectedUser({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          middleName: \"\",\r\n          idNumber: \"\",\r\n          gender: \"\",\r\n          birthDate: \"\",\r\n          birthPlace: \"\",\r\n          age: \"\",\r\n          contactNumber: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n    })\r\n  };\r\n\r\n  const getListOfParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    setSelectedParent(result)\r\n  };\r\n\r\n  const showUser = () => {\r\n    setSelectedUser({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        idNumber: \"\",\r\n        gender: \"\",\r\n        birthDate: \"\",\r\n        birthPlace: \"\",\r\n        age: \"\",\r\n        contactNumber: \"\",\r\n        email: \"\",\r\n        status: \"\",\r\n      });\r\n    setShowUserVisible(true)\r\n  };\r\n\r\n  const loadUser = (userObj) => {\r\n    setSelectedUser({...userObj});\r\n    setShowUserVisible(true);\r\n  };\r\n\r\n  const loadQuarter = async () => {\r\n    let response = await quarterService.findAllQuarter();\r\n    if (response.data && response.data.length > 0) {\r\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\r\n    };\r\n  }\r\n\r\n  const login = async (credentials) => {\r\n    let ctr = 0;\r\n    let loggedInUser = {};\r\n    userDetails.list.map((user) => {\r\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\r\n            ctr = ctr + 1;\r\n            loggedInUser = user;\r\n        }\r\n    })\r\n    if(ctr === 0) {\r\n        setLoginCounter(false)\r\n    } else {\r\n         //if user is parent log in audit trail\r\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\r\n          let loggedDate =  new Date().toISOString();\r\n          let details = {\r\n            user: loggedInUser,\r\n            activity: 'Parent logged in',\r\n            date: loggedDate\r\n          };\r\n          await auditTrailService.add(details);\r\n        };\r\n    \r\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\r\n        sessionStorage.setItem(\"_id\", quarter._id)\r\n        window.location.reload(false);\r\n        setLoginCounter(true);\r\n    }\r\n  };\r\n\r\n  const filterStudent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setStudentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList( newArray)\r\n    }\r\n  } \r\n  \r\n  const filterTeacher = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setTeacherList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterParent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setParentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterAdmin = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setAdminList(\r\n        newArray\r\n      )\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(\r\n      newArray\r\n    )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList(newArray)\r\n\r\n  }  \r\n\r\n  const loadStudent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Student\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList(newArray)\r\n\r\n  }  \r\n\r\n  const loadParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList(newArray)\r\n\r\n  }\r\n\r\n  const loadAdmin = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Admin\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(newArray)\r\n\r\n  }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    let newArrayCredentials = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          idNumber: user.idNumber,\r\n          password: user.password,\r\n        }\r\n      })\r\n\r\n    setUserDetails({\r\n      list: newArray,\r\n      credentials: newArrayCredentials\r\n    })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n    getListOfParent();\r\n    loadAdmin();\r\n    loadStudent();\r\n    loadTeacher();\r\n    loadParent();\r\n    loadQuarter();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadUsers,\r\n    addUser,\r\n    loginCounter,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    login,\r\n    selectedParent,\r\n    filterAdmin,\r\n    filterStudent,\r\n    filterParent,\r\n    filterTeacher,\r\n    adminList,\r\n    studentList,\r\n    parentList,\r\n    teacherList,\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\r\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n  }, []);\r\n\r\n\r\n  return {\r\n    today\r\n  }\r\n};\r\n\r\nexport default TimeKeepingAction;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst EmployeeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      },\r\n      {\r\n         title: <b>Gender</b>,\r\n         dataIndex: 'gender',\r\n      },\r\n      {\r\n        title: <b>Age</b>,\r\n        dataIndex: 'age',\r\n      },   \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Role</b>,\r\n        dataIndex: 'role',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         console.log(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterAdmin,\r\n    adminList\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        {console.log(adminList)}\r\n        <UserTable details={adminList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    studentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterStudent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\r\n      </Col>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n      <>\r\n        <Col lg={{ span: 6 }}>\r\n          <Input placeholder=\"Search\" onChange={(e)=> filterStudent(e.target.value)}/>\r\n          {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n          </Button> */}\r\n        </Col>\r\n        <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n          <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n        </Button>\r\n      </>\r\n        : null}\r\n\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={studentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    parentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterParent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\r\n        <UserTable details={parentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    teacherList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterTeacher\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={teacherList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Subject</b>,\r\n         dataIndex: 'subject',\r\n      },\r\n      {\r\n        title: <b>1st Quarter</b>,\r\n        dataIndex: 'Quarter1st',\r\n     },\r\n      {\r\n         title: <b>2nd Quarter</b>,\r\n         dataIndex: 'Quarter2nd',\r\n      },\r\n      {\r\n         title: <b>3rd Quarter</b>,\r\n         dataIndex: 'Quarter3rd',\r\n      },\r\n      {\r\n        title: <b>4th Quarter</b>,\r\n        dataIndex: 'Quarter4th',\r\n     },\r\n     {\r\n        title: <b>Final Grade</b>,\r\n        dataIndex: 'FinalGrade',\r\n     },\r\n     {\r\n        title: <b>Remarks</b>,\r\n        dataIndex: 'Remarks',\r\n     }\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst UserEditForm = ({ selectedUser }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n               <Card className=\"p-70\">\r\n               <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n                <br/>\r\n                {console.log(values)}\r\n               \r\n                <Row gutter={16}>\r\n\r\n{/* <Col span={12}>\r\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n \r\n   <Col span={12}>\r\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n   <Col span={12}>\r\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col> */}\r\n</Row>\r\n             \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;","import BaseService from '../../baseService';\r\nclass AdvisoryService extends BaseService {\r\n  constructor() {\r\n    super('advisory');\r\n  }\r\n\r\n  add = advisoryObj => {\r\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\r\n  };\r\n\r\n  update = advisoryObj => {\r\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-advisory/' + id);\r\n  };\r\n\r\n  findAllAdvisory = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new AdvisoryService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport gradesService from './gradesService';\r\nimport userService from '../user/userService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Grade1Action = (initial = { searchRequest: {} }) => {\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\r\n  let [gradeDetails, setGradeDetails] = useState( {list : []});\r\n  let [grade1Details, setGrade1Details] = useState( {list : []});\r\n  let [grade2Details, setGrade2Details] = useState( {list : []});\r\n  let [grade3Details, setGrade3Details] = useState( {list : []});\r\n  let [grade4Details, setGrade4Details] = useState( {list : []});\r\n  let [grade5Details, setGrade5Details] = useState( {list : []});\r\n  let [grade6Details, setGrade6Details] = useState( {list : []});\r\n  let [grade7Details, setGrade7Details] = useState( {list : []});\r\n  let [grade8Details, setGrade8Details] = useState( {list : []});\r\n  let [grade9Details, setGrade9Details] = useState( {list : []});\r\n  let [grade10Details, setGrade10Details] = useState( {list : []});\r\n\r\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\r\n  let [selectedGrade, setSelectedGrade] = useState({});\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n\r\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\r\n\r\n  const upgradeStudent = async values => {\r\n    let auditTrailObj = {\r\n    user: JSON.parse(sessionStorage.user),\r\n    activity : \"Upgrade Student\",\r\n    date:new Date()}\r\n    auditTrailService.add(auditTrailObj)\r\n    let ctr = 0;\r\n    await selectedListOfStudent.map(async student => {\r\n    setLoading(true)\r\n    let result = await gradesService.findyById(student.id);\r\n\r\n    let userCurrentGrade = (parseInt(result.data.gradeLevel))\r\n\r\n\r\n    if(userCurrentGrade < 10) {\r\n      let currentUser = result.data\r\n      let allStudent = await userService.findAllUser();\r\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n      let currentStudent = result1[0]\r\n      currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\r\n      let response = await userService.update(currentStudent)\r\n\r\n      currentUser.status = false;\r\n      let response1 = await gradesService.update(currentUser)\r\n\r\n      let gradeObj = {\r\n        status: true,\r\n        student: currentUser.student,\r\n        gradeLevel: (userCurrentGrade + 1).toString(),\r\n        section: currentUser.student.section,\r\n        schoolYear : currentStudent.schoolYear,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Filipino\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Science\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Math\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"MAPEH\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Values\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        }]\r\n    }\r\n\r\n    let response2 = gradesService.add(gradeObj)\r\n  \r\n\r\n    } else {\r\n      let currentUser = result.data\r\n      let allStudent = await userService.findAllUser();\r\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n      let currentStudent = result1[0]\r\n      currentStudent.gradeLevel = \"Graduate\"\r\n      let response = await userService.update(currentStudent)\r\n\r\n      currentUser.status = false;\r\n      let response1 = await gradesService.update(currentUser)\r\n    }\r\n    ctr= ctr+1\r\n    if(ctr === selectedListOfStudent.length) {\r\n      setLoading(false)\r\n      window.location.reload(false)\r\n    }\r\n    })\r\n\r\n  };\r\n\r\n  const editGrade = async values => {\r\n    let result = await gradesService.findyById(values._id);\r\n    let grade = result.data\r\n\r\n    if(values.English) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.English.firstQuarter) {\r\n        firstQuarter = values.English.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.English.secondQuarter) {\r\n        secondQuarter = values.English.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.English.thirdQuarter) {\r\n        thirdQuarter = values.English.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.English.fourthQuarter) {\r\n        fourthQuarter = values.English.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newEnglishGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[0].subjectGrade = newEnglishGrade;\r\n    }    \r\n\r\n    if(values.Filipino) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Filipino.firstQuarter) {\r\n        firstQuarter = values.Filipino.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Filipino.secondQuarter) {\r\n        secondQuarter = values.Filipino.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Filipino.thirdQuarter) {\r\n        thirdQuarter = values.Filipino.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Filipino.fourthQuarter) {\r\n        fourthQuarter = values.Filipino.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newFilipinoGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[1].subjectGrade = newFilipinoGrade;\r\n    }\r\n\r\n    if(values.Science) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Science.firstQuarter) {\r\n        firstQuarter = values.Science.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Science.secondQuarter) {\r\n        secondQuarter = values.Science.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Science.thirdQuarter) {\r\n        thirdQuarter = values.Science.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Science.fourthQuarter) {\r\n        fourthQuarter = values.Science.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newScienceGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[2].subjectGrade = newScienceGrade;\r\n    }\r\n\r\n    if(values.Math) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Math.firstQuarter) {\r\n        firstQuarter = values.Math.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Math.secondQuarter) {\r\n        secondQuarter = values.Math.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Math.thirdQuarter) {\r\n        thirdQuarter = values.Math.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Math.fourthQuarter) {\r\n        fourthQuarter = values.Math.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newMathGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[3].subjectGrade = newMathGrade;\r\n    }\r\n\r\n    if(values.MAPEH) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.MAPEH.firstQuarter) {\r\n        firstQuarter = values.MAPEH.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.MAPEH.secondQuarter) {\r\n        secondQuarter = values.MAPEH.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.MAPEH.thirdQuarter) {\r\n        thirdQuarter = values.MAPEH.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.MAPEH.fourthQuarter) {\r\n        fourthQuarter = values.MAPEH.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newMAPEHGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[4].subjectGrade = newMAPEHGrade;\r\n    }\r\n\r\n    if(values.Values) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Values.firstQuarter) {\r\n        firstQuarter = values.Values.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Values.secondQuarter) {\r\n        secondQuarter = values.Values.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Values.thirdQuarter) {\r\n        thirdQuarter = values.Values.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Values.fourthQuarter) {\r\n        fourthQuarter = values.Values.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newValuesGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[5].subjectGrade = newValuesGrade;\r\n    }\r\n\r\n    let updateResult = await gradesService.update(grade);\r\n    //add record  to audit trail\r\n    let loggedDate =  new Date().toISOString();\r\n    let userDetails = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: 'Teacher has updated student grades',\r\n      date: loggedDate\r\n    };\r\n    await auditTrailService.add(userDetails);\r\n    window.location.reload();\r\n  };\r\n\r\n  const showGrade = () => {\r\n    setSelectedGrade({\r\n        schoolYear: \"\",\r\n        subjects: {},\r\n        grade: \"\",\r\n        student: {},\r\n        gradeLevel: \"\",\r\n        section: \"\",\r\n      })\r\n    setShowGradeVisible(true)\r\n  };\r\n\r\n  const loadGrade = (gradeObj, idNumber, level = '') => {\r\n    getCurrentGradeUser(idNumber, level)\r\n    setSelectedGrade({...gradeObj});\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const loadSelectedGrade = async (gradeId) => {\r\n    let response = await gradesService.findyById(gradeId);\r\n    setSelectedGrade({...response.data});\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const filterCurrentGradeUser = async (gradeLevel) => {\r\n    setLoading(true)\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\r\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        let remarks = \"\";\r\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\r\n          remarks = \"Passed\"\r\n        } else {\r\n          remarks = \"Failed\"\r\n        }\r\n        return {\r\n          key: subject._id,\r\n          id: subject._id,\r\n          subject: subject.subjectName,\r\n          Quarter1st: subject.subjectGrade.firstQuarter,\r\n          Quarter2nd: subject.subjectGrade.secondQuarter,\r\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\r\n          Quarter4th: subject.subjectGrade.fourthQuarter,\r\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\r\n          Remarks : remarks\r\n        }\r\n      })\r\n      \r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1=[];\r\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    \r\n      setSelectedUser(result[0].student)\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n   \r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const currentGradeUser = async () => {\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\r\n    } else {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\r\n    }\r\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student)\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        let remarks = \"\";\r\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\r\n          remarks = \"Passed\"\r\n        } else {\r\n          remarks = \"Failed\"\r\n        }\r\n        return {\r\n          key: subject._id,\r\n          id: subject._id,\r\n          subject: subject.subjectName,\r\n          Quarter1st: subject.subjectGrade.firstQuarter,\r\n          Quarter2nd: subject.subjectGrade.secondQuarter,\r\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\r\n          Quarter4th: subject.subjectGrade.fourthQuarter,\r\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\r\n          Remarks : remarks\r\n        }\r\n      })\r\n      \r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1=[];\r\n      if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\r\n      } else {\r\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n      }\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n   \r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    }\r\n\r\n  }\r\n\r\n  const getCurrentGradeUser = async (idNumber, level = '') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\r\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student);\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        let remarks = \"\";\r\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\r\n          remarks = \"Passed\"\r\n        } else {\r\n          remarks = \"Failed\"\r\n        }\r\n        return {\r\n          key: subject._id,\r\n          id: subject._id,\r\n          subject: subject.subjectName,\r\n          Quarter1st: subject.subjectGrade.firstQuarter,\r\n          Quarter2nd: subject.subjectGrade.secondQuarter,\r\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\r\n          Quarter4th: subject.subjectGrade.fourthQuarter,\r\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\r\n          Remarks : remarks\r\n        }\r\n      });\r\n      setSelectedGradeUser(newArray);\r\n   \r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedGradeUser([])\r\n    }\r\n\r\n    \r\n   \r\n\r\n  }\r\n\r\n  const loadGrades = async () => {\r\n    let finalOffspring = [];\r\n    let response = await gradesService.findAllGrades();\r\n    let parent = await userService.findAllUser();\r\n    let result = parent.data.filter(user => user.parent);\r\n    let newArray = [];\r\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\r\n    await response.data.map((user) => {\r\n      offspring.map((off) => {\r\n        if(user.student.idNumber === off.idNumber){\r\n          finalOffspring.push(user)\r\n        }\r\n      });\r\n    });\r\n    newArray = finalOffspring.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.student.firstName,\r\n          lastName: user.student.lastName,\r\n          middleName: user.student.middleName,\r\n          idNumber: user.student.idNumber,\r\n          contactNumber: user.student.contactNumber,\r\n          email: user.student.email,\r\n          section: user.section,\r\n          gradeLevel: user.gradeLevel,\r\n          action: \r\n            <Button onClick={() => loadGrade(user,user.student.idNumber)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      setGradeDetails({\r\n        list: newArray\r\n      })\r\n  }\r\n\r\nconst loadGrades1 = async () => {\r\n    let response = await gradesService.findAllGrades('1');\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '1')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade1Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades2 = async () => {\r\n    let response = await gradesService.findAllGrades('2');\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '2')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade2Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades3 = async () => {\r\n    let response = await gradesService.findAllGrades('3');\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '3')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade3Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades4 = async () => {\r\n    let response = await gradesService.findAllGrades('4');\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '4')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade4Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades5 = async () => {\r\n    let response = await gradesService.findAllGrades('5');\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '5')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade5Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades6 = async () => {\r\n    let response = await gradesService.findAllGrades('6');\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '6')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade6Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades7 = async () => {\r\n    let response = await gradesService.findAllGrades('7');\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '7')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade7Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades8 = async () => {\r\n    let response = await gradesService.findAllGrades('8');\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '8')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade8Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades9 = async () => {\r\n    let response = await gradesService.findAllGrades('9');\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '9')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade9Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades10 = async () => {\r\n    let response = await gradesService.findAllGrades('10');\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '10')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade10Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadGrades1();\r\n    loadGrades2();\r\n    loadGrades3();\r\n    loadGrades4();\r\n    loadGrades5();\r\n    loadGrades6();\r\n    loadGrades7();\r\n    loadGrades8();\r\n    loadGrades9();\r\n    loadGrades10();\r\n    loadGrades();\r\n    currentGradeUser();\r\n    getListOfTeacher();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadGrades1,\r\n    grade2Details,\r\n    grade3Details,\r\n    grade4Details,\r\n    grade5Details,\r\n    grade6Details,\r\n    grade7Details,\r\n    grade8Details,\r\n    grade9Details,\r\n    grade10Details,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    gradeDetails,\r\n    selectedUserGrade,\r\n    showAllGradeVisible, \r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser\r\n  }\r\n};\r\n\r\nexport default Grade1Action;\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\r\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\r\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n\r\n  const addAdvisor = async (values, gradeLevel) => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Added Advisor\",\r\n      date:new Date()}\r\n    let advisorTeacher = await userService.findyById(values.advisor)\r\n    let finalAddValue = {\r\n      gradeLevel: gradeLevel,\r\n      teacher: advisorTeacher.data\r\n    }\r\n    let response = await advisoryService.add(finalAddValue);\r\n    window.location.reload();\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setselectedAdvisoryAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setselectedAdvisoryAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setselectedAdvisoryAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setselectedAdvisoryAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setselectedAdvisoryAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setselectedAdvisoryAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setselectedAdvisoryAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setselectedAdvisoryAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setselectedAdvisoryAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setselectedAdvisoryAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideAdvisor = async () => {\r\n    setshowAdvisorVisible(false)\r\n  };\r\n\r\n  const showAdvisor = async (gradeLevel) => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setselectedAdvisoryAssgined(result[0].subjects)\r\n    } else {\r\n        setselectedAdvisoryAssgined({})\r\n    }\r\n    setshowAdvisorVisible(true)\r\n  };\r\n\r\n  const getStudentAdvisor = async () => {\r\n    let response = await advisoryService.findAllAdvisory()\r\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n    setStudentAdvisor(result[0])\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudentAdvisor();\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    studentAdvisor\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport UserForm from './userDetailsForm'\r\nimport UserTable from './gradeTable'\r\nimport GradeAction from '../grade/gradeAction'\r\nimport AdvisorAction from '../grade/advisoryAction'\r\nconst { Option } = Select;\r\n\r\n\r\nconst EmployeePage = () => {\r\n\r\n  let {\r\n    selectedUserGrade,\r\n    showAllGradeVisible, \r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Student Details</Typography.Title>\r\n            }>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Full Name: </b>{selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName: null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Grade Level: </b>{JSON.parse(sessionStorage.user).gradeLevel}\r\n                  </p>\r\n                  <p>\r\n                    <b>Section: </b>{selectedUser ? selectedUser.section: null}\r\n                  </p>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName: null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber: null}\r\n                  </p>\r\n                  <b>Yr./Lvl: </b>\r\n                  <Select className=\"ml-15\" placeholder=\"Select Yr./Level\" onChange={(value)=> filterCurrentGradeUser(value) }>\r\n                    <Option value=\"1\">1</Option>\r\n                    <Option value=\"2\">2</Option>\r\n                    <Option value=\"3\">3</Option>\r\n                    <Option value=\"4\">4</Option>\r\n                    <Option value=\"5\">5</Option>\r\n                    <Option value=\"6\">6</Option>\r\n                    <Option value=\"7\">7</Option>\r\n                    <Option value=\"8\">8</Option>\r\n                    <Option value=\"9\">9</Option>\r\n                    <Option value=\"10\">10</Option>\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <UserTable details={selectedUserGrade ? selectedUserGrade: []}/>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card>   \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nconst Grade1EditForm = ({ upgradeStudent,add,update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel   }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedGrade}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         \r\n            let newValues = {\r\n               _id : values._id\r\n            };\r\n            let English = {};\r\n            let Filipino = {};\r\n            let Science = {};\r\n            let Math = {};\r\n            let MAPEH = {};\r\n            let Values = {};\r\n            if(values.English1 || values.English2 || values.English3 || values.English4) {\r\n               English = {\r\n                  firstQuarter:values.English1,\r\n                  secondQuarter:values.English2,\r\n                  thirdQuarter:values.English3,\r\n                  fourthQuarter:values.English4\r\n               }\r\n               newValues.English = English;\r\n            }\r\n            if(values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\r\n               Filipino = {\r\n                  firstQuarter:values.Filipino1,\r\n                  secondQuarter:values.Filipino2,\r\n                  thirdQuarter:values.Filipino3,\r\n                  fourthQuarter:values.Filipino4\r\n               }\r\n               newValues.Filipino = Filipino;\r\n            }\r\n            if(values.Science1 || values.Science2 || values.Science3 || values.Science4) {\r\n               Science = {\r\n                  firstQuarter:values.Science1,\r\n                  secondQuarter:values.Science2,\r\n                  thirdQuarter:values.Science3,\r\n                  fourthQuarter:values.Science4\r\n               }\r\n               newValues.Science = Science;\r\n            }\r\n            if(values.Math1 || values.Math2 || values.Math3 || values.Math4) {\r\n               Math = {\r\n                  firstQuarter:values.Math1,\r\n                  secondQuarter:values.Math2,\r\n                  thirdQuarter:values.Math3,\r\n                  fourthQuarter:values.Math4\r\n               }\r\n               newValues.Math = Math;\r\n            }\r\n            if(values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\r\n               MAPEH = {\r\n                  firstQuarter:values.MAPEH1,\r\n                  secondQuarter:values.MAPEH2,\r\n                  thirdQuarter:values.MAPEH3,\r\n                  fourthQuarter:values.MAPEH4\r\n               }\r\n               newValues.MAPEH = MAPEH;\r\n            }\r\n            if(values.Values1 || values.Values2 || values.Values3 || values.Values4) {\r\n               Values = {\r\n                  firstQuarter:values.Values1,\r\n                  secondQuarter:values.Values2,\r\n                  thirdQuarter:values.Values3,\r\n                  fourthQuarter:values.Values4\r\n               }\r\n               newValues.Values = Values;\r\n            }\r\n            update(newValues)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\" >\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student.idNumber}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <>      \r\n                    <Row gutter={16}>\r\n                     {\r\n                     (selectedTeacherAssignedGrade && selectedTeacherAssignedGrade.subjects && selectedTeacherAssignedGrade.subjects != undefined && selectedTeacherAssignedGrade.subjects[0] && selectedTeacherAssignedGrade.subjects[0].teacher && selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                     ?                      \r\n                     <Col span={12}>\r\n                     <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"English1\" defaultValue={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[0].subjectGrade.secondQuarter} name=\"English2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[0].subjectGrade.thirdQuarter} name=\"English3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[0].subjectGrade.fourthQuarter} name=\"English4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>:\r\n                     null}\r\n                  {\r\n                (selectedTeacherAssignedGrade.subjects[1] && selectedTeacherAssignedGrade.subjects[1].teacher && selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ? \r\n                     <Col span={12}>\r\n                     <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Filipino1\" defaultValue={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[1].subjectGrade.secondQuarter} name=\"Filipino2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[1].subjectGrade.thirdQuarter} name=\"Filipino3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[1].subjectGrade.fourthQuarter} name=\"Filipino4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n\r\n               </Col>\r\n                  : null}\r\n                     \r\n                  </Row>    \r\n                     <Row gutter={16}>\r\n                     {\r\n(selectedTeacherAssignedGrade && selectedTeacherAssignedGrade.subjects && selectedTeacherAssignedGrade.subjects != undefined && selectedTeacherAssignedGrade.subjects.length !==0 && selectedTeacherAssignedGrade.subjects[2] && selectedTeacherAssignedGrade.subjects[2] && selectedTeacherAssignedGrade.subjects[2].teacher && selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                     ?                      \r\n                     <Col span={12}>\r\n                     <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Science1\" defaultValue={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[2].subjectGrade.secondQuarter} name=\"Science2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[2].subjectGrade.thirdQuarter} name=\"Science3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[2].subjectGrade.fourthQuarter} name=\"Science4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>:\r\n                     null}\r\n                  {\r\n  (selectedTeacherAssignedGrade.subjects[3] && selectedTeacherAssignedGrade.subjects[3].teacher && selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ? \r\n                     <Col span={12}>\r\n                     <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Math1\" defaultValue={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[3].subjectGrade.secondQuarter} name=\"Math2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[3].subjectGrade.thirdQuarter} name=\"Math3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[3].subjectGrade.fourthQuarter} name=\"Math4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>\r\n                  : null}\r\n                     \r\n                  </Row>    \r\n                  <Row gutter={16}>\r\n                     {\r\n  (selectedTeacherAssignedGrade.subjects[4] && selectedTeacherAssignedGrade.subjects[4].teacher && selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                     ?                      \r\n                     <Col span={12}>\r\n                     <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"MAPEH1\" defaultValue={values.subjects[4].subjectGrade.firstQuarter} />\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[4].subjectGrade.secondQuarter} name=\"MAPEH2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[4].subjectGrade.thirdQuarter} name=\"MAPEH3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[4].subjectGrade.fourthQuarter} name=\"MAPEH4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>:\r\n                     null}\r\n                  {\r\n              (selectedTeacherAssignedGrade.subjects[5] && selectedTeacherAssignedGrade.subjects[5].teacher && selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ? \r\n                     <Col span={12}>\r\n                     <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Values1\" defaultValue={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[5].subjectGrade.secondQuarter} name=\"Values2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[5].subjectGrade.thirdQuarter} name=\"Values3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[5].subjectGrade.fourthQuarter} name=\"Values4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>\r\n                  : null}\r\n                     \r\n                  </Row>\r\n                  </>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel) \r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"English\" name=\"english\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Filipino\" name=\"filipino\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Science\" name=\"science\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Math\" name=\"math\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Values\" name=\"values\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={24}>\r\n            <Form.Item label=\"Advisor\" name=\"advisor\">\r\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import BaseService from '../../baseService';\r\nclass TeacherService extends BaseService {\r\n  constructor() {\r\n    super('teacher');\r\n  }\r\n\r\n  add = teacherObj => {\r\n    return this.axiosInstance.post('/create-teacher', teacherObj);\r\n  };\r\n\r\n  update = teacherObj => {\r\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-teacher/' + id);\r\n  };\r\n\r\n  findAllTeacher = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new TeacherService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport teacherService from '../grade/teacherService';\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState({});\r\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\r\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\r\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\r\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\r\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\r\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\r\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\r\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\r\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\r\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\r\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\r\n\r\n  const add = async (values, gradeLevel) => {\r\n    let English = await userService.findyById(values.english)\r\n    let Filipino = await userService.findyById(values.filipino)\r\n    let Science = await userService.findyById(values.science)\r\n    let Math = await userService.findyById(values.math)\r\n    let Values = await userService.findyById(values.values)\r\n    let Mapeh = await userService.findyById(values.mapeh)\r\n    let finalAddValue = {\r\n        gradeLevel : gradeLevel,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            teacher: English.data\r\n            },\r\n            {\r\n            subjectName: \"Filipino\",\r\n            teacher: Filipino.data\r\n            },\r\n            {\r\n            subjectName: \"Science\",\r\n            teacher: Science.data\r\n            },   \r\n            {\r\n            subjectName: \"Math\",\r\n            teacher: Math.data\r\n            },   \r\n            {\r\n            subjectName: \"Values\",\r\n            teacher: Values.data\r\n            },     \r\n            {\r\n            subjectName: \"Mapeh\",\r\n            teacher: Mapeh.data\r\n            },                                                    \r\n        ]\r\n    }\r\n    let response = teacherService.add(finalAddValue)\r\n    window.location.reload()\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setSelectedTeacherAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setSelectedTeacherAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setSelectedTeacherAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setSelectedTeacherAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setSelectedTeacherAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setSelectedTeacherAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setSelectedTeacherAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setSelectedTeacherAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setSelectedTeacherAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setSelectedTeacherAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideTeacher = async () => {\r\n    setShowTeacherVisible(false)\r\n  };\r\n\r\n  const showTeacher = async (gradeLevel) => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setSelectedTeacherAssgined(result[0].subjects)\r\n    } else {\r\n        setSelectedTeacherAssgined({})\r\n    }\r\n    setShowTeacherVisible(true)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    selectedTeacher,\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\n\r\nimport GradeAction from './gradeAction'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?       \r\n        <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n        }\r\n              {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 1\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                    Advisor for grade 1\r\n                  </Typography.Title>\r\n              }\r\n              width={500}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"1\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\r\n          <PlusCircleOutlined type=\"add-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                           {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\r\n          <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          < RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 2\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 2\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"2\"}/>\r\n          </Drawer>\r\n    </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade3Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                  {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n      \r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher}  gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 3\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 3\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"3\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade4Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 4\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 4\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"4\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade5Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 5\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 5\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"5\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade6Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 6\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 6\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"6\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade7Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 7\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 7\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"7\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade8Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 8\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 8\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"8\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade9Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 9\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 9\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"9\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade10Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 10\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"}/>\r\n          </Drawer>\r\n    \r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 10\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"10\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst Grade1EditForm = ({selectedOffspring }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedOffspring}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n                  {console.log(selectedOffspring)}\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>     \r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\r\n                        <Input disabled={true} name=\"gradeLevel\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>                     \r\n                  <Row gutter={16}>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                   \r\n                     <Col span={12}>\r\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                     <Col span={12}>\r\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Grade Level</b>,\r\n        dataIndex: 'gradeLevel',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport GradeForm from '../offspring/offspringForm'\r\n\r\nimport GradeAction from '../grade/gradeAction'\r\n\r\nimport OffspringTable from '../offspring/offspringTable'\r\n\r\nconst OffspringPage = () => {\r\n\r\n\r\n  let {\r\n    selectedGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    gradeDetails\r\n  } = GradeAction({});\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 12 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 12 }}>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <OffspringTable details={gradeDetails.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  \r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm selectedOffspring={selectedGrade}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default OffspringPage;\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Name</b>,\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: <b>ID Number</b>,\r\n        dataIndex: 'idNumber',\r\n     },\r\n      {\r\n         title: <b>Time In</b>,\r\n         dataIndex: 'timeIn',\r\n      },\r\n      {\r\n         title: <b>Time Out</b>,\r\n         dataIndex: 'timeOut',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('timekeeping');\r\n  }\r\n\r\n  add = timekeepingObj => {\r\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\r\n  };\r\n\r\n  update = timekeepingObj => {\r\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\r\n  };\r\n\r\n  findAllTimekeeping = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport TimekeepingService from './timeKeepingService';\r\nimport moment from 'moment';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\r\n  let [timeIn, setTimeIn] = useState(new Date());\r\n  let [timeOut, setTimeOut] = useState(new Date())\r\n\r\n  const filterUsers = async (date) => {\r\n    if(date){\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\r\n      let newArray = await result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } else {\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let newArray = await response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } \r\n\r\n  }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await TimekeepingService.findAllTimekeeping();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        name: user.student.firstName + \" \" + user.student.lastName,\r\n        idNumber: user.student.idNumber,\r\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n    }\r\n    })\r\n    setUserDetails({list: newArray});\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n}, []);\r\n\r\n\r\n  return {\r\n    userDetails,\r\n    filterUsers\r\n  }\r\n};\r\n\r\nexport default UserAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport TimekeepingTable from './timeKeepingTable'\r\nimport AttendanceAction from './AttendanceAction'\r\nconst {Option} = Select;\r\n\r\nconst TimekeepingPage = () => {\r\n    let{\r\n        userDetails  ,\r\n        filterUsers\r\n    } = AttendanceAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\r\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"January\">January</Option>\r\n          <Option value=\"Febuary\">Febuary</Option>\r\n          <Option value=\"March\">March</Option>\r\n          <Option value=\"April\">April</Option>\r\n          <Option value=\"May\">May</Option>\r\n          <Option value=\"June\">June</Option>\r\n          <Option value=\"July\">July</Option>\r\n          <Option value=\"August\">August</Option>\r\n          <Option value=\"September\">September</Option>\r\n          <Option value=\"October\">October</Option>\r\n          <Option value=\"November\">November</Option>\r\n          <Option value=\"December\">December</Option>\r\n        </Select>\r\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"1\">1</Option>\r\n          <Option value=\"2\">2</Option>\r\n          <Option value=\"3\">3</Option>\r\n          <Option value=\"4\">4</Option>\r\n          <Option value=\"5\">5</Option>\r\n          <Option value=\"6\">6</Option>\r\n          <Option value=\"7\">7</Option>\r\n          <Option value=\"8\">8</Option>\r\n          <Option value=\"9\">9</Option>\r\n          <Option value=\"10\">10</Option>\r\n          <Option value=\"11\">11</Option>\r\n          <Option value=\"12\">12</Option>\r\n          <Option value=\"13\">13</Option>\r\n          <Option value=\"14\">14</Option>\r\n          <Option value=\"15\">15</Option>\r\n          <Option value=\"16\">16</Option>\r\n          <Option value=\"17\">17</Option>\r\n          <Option value=\"18\">18</Option>\r\n          <Option value=\"19\">19</Option>\r\n          <Option value=\"20\">20</Option>\r\n          <Option value=\"21\">21</Option>\r\n          <Option value=\"22\">22</Option>\r\n          <Option value=\"23\">23</Option>\r\n          <Option value=\"24\">24</Option>\r\n          <Option value=\"25\">25</Option>\r\n          <Option value=\"26\">26</Option>\r\n          <Option value=\"27\">27</Option>\r\n          <Option value=\"28\">28</Option>\r\n          <Option value=\"29\">29</Option>\r\n          <Option value=\"30\">30</Option>\r\n          <Option value=\"31\">31</Option>\r\n        </Select>\r\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\r\n        </Col>\r\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <TimekeepingTable details={userDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default TimekeepingPage;\r\n\r\n","import React from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\n\r\nconst LoginForm = ({login}) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            username: \"\",\r\n            password: \"\"\r\n         }}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values, actions) => {\r\n             login(values)\r\n            // await login(values)\r\n            // actions.setSubmitting(false);\r\n         }}\r\n         render={\r\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\r\n               <Spin spinning={isSubmitting}>\r\n                  <Form className=\"mt-10P\">\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              USERNAME:\r\n                           </b>\r\n                           <Form.Item name=\"username\">\r\n                              <Input name=\"username\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              PASSWORD:\r\n                           </b>\r\n                           <Form.Item name=\"password\">\r\n                              <Input.Password name=\"password\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\r\n                              Login\r\n                        </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </Spin>\r\n            )}\r\n      />\r\n   );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\r\n\r\nimport '../../App.css';\r\nimport LoginForm from './loginForm';\r\nimport UserAction from '../user/userAction'\r\n\r\nconst version = process.env.REACT_APP_VERSION\r\n\r\n\r\nconst Login = () => {\r\n    let [showLogin, setShowLogin] = useState(false);\r\n    let [showContact, setShowContact] = useState(false);\r\n    let [showAboutUs, setShowAboutUs] = useState(false);\r\n    let [showHome, setShowHome] = useState(true);\r\n    const {Content} = Layout;\r\n    let {\r\n        login,\r\n        loginCounter\r\n      } = UserAction({});\r\n    \r\n    const loginUser = async (credentials) => {\r\n        login(credentials);\r\n    }\r\n\r\n    const loginFunction = async () => {\r\n        setShowHome(false)\r\n        setShowLogin(true)\r\n    }\r\n\r\n    const contactFunction = async () => {\r\n        setShowHome(false)\r\n        setShowContact(true)\r\n    }\r\n\r\n    const aboutUsFunction = async () => {\r\n        setShowHome(false)\r\n        setShowAboutUs(true)\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"login\">\r\n            {/* Landing Page */}\r\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\r\n                <Row className=\"center\">\r\n                    <Col>\r\n                        <Button className=\"btn-home mr-10\">HOME</Button>\r\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\r\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\r\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Content> : null}\r\n            \r\n\r\n            {/* Login Page */}\r\n            {showLogin \r\n            \r\n            ?             <Content className=\"contentLogin mt-5P\">\r\n            <div className=\"center mb-15\">\r\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\r\n            </div>\r\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\r\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\r\n            <Row className=\"mt-10 center\">\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\r\n                    <LoginForm login={loginUser}/>\r\n                </Col>\r\n            </Row>\r\n        </Content> : null}\r\n\r\n\r\n             {/* Contact Page */}\r\n            {showContact ?            <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center mb-40\">\r\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    <b>Telephone Number:</b> 8 245 4148<br/>\r\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\r\n                    <b>Email Address: </b>\r\n                    <u className=\"blue\">\r\n                        admission.snss@gmail.com\r\n                    </u>\r\n                </Typography>\r\n            </Content>:null}\r\n \r\n\r\n\r\n            {/* About Page */}\r\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center h-70 mb-35\">\r\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\r\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\r\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\r\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\r\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\r\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \r\n                </Typography>\r\n            </Content> : null}\r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\r\n\r\nimport {\r\n    UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\r\n  } from '@ant-design/icons';\r\n  const { SubMenu } = Menu;\r\nconst SiderMenu = ({theme, collapsed}) => {\r\n    return ( \r\n        <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 1 Management</span>\r\n                    <Link to={'/grade1'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 2 Management</span>\r\n                    <Link to={'/grade2'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 3 Management</span>\r\n                    <Link to={'/grade3'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 4 Management</span>\r\n                    <Link to={'/grade4'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 5 Management</span>\r\n                    <Link to={'/grade5'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 6 Management</span>\r\n                    <Link to={'/grade6'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 7 Management</span>\r\n                    <Link to={'/grade7'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 8 Management</span>\r\n                    <Link to={'/grade8'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 9 Management</span>\r\n                    <Link to={'/grade9'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 10 Management</span>\r\n                    <Link to={'/grade10'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n           \r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"dashboard\" className=\"menus\">\r\n                    <DashboardOutlined />\r\n                    <span className=\"fs-13\">Dashboard</span>\r\n                    <Link to={'/dashboard'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n           \r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Admin</span>\r\n                    <Link to={'/admin'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Parent</span>\r\n                    <Link to={'/parent'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Student</span>\r\n                    <Link to={'/student'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Teacher</span>\r\n                    <Link to={'/teacher'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"timekeeping\" className=\"menus\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Attendance</span>\r\n                    <Link to={'/timekeeping'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n                {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?  \r\n                <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Grade</span>\r\n                    <Link to={'/offspring'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"auditTrail\" className=\"menus\">\r\n                   <AuditOutlined />\r\n                    <span className=\"fs-13\">Audit Trail</span>\r\n                    <Link to={'/auditTrail'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </Menu>\r\n    );\r\n}\r\n \r\nexport default SiderMenu;","import {createContext} from 'react';\r\n\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\r\nimport {  Menu } from 'antd';\r\nimport { UserContext } from './userContext';\r\n\r\nimport {\r\n    LogoutOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst UserMenu = () => {\r\n\r\n   const { setLoggedUser } = useContext(UserContext);\r\n\r\n   const logout = async () => {\r\n    sessionStorage.removeItem('user');\r\n    window.location.reload(false);\r\n    //   setLoggedUser(null);\r\n    //   sessionStorage.removeItem('token');\r\n    //   sessionStorage.removeItem('user');\r\n   }\r\n\r\n   return (\r\n      <Menu className=\"mt-20\">\r\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\r\n            <LogoutOutlined />Logout\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport default UserMenu;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AuditTrailTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: 'Name',\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Activity',\r\n        dataIndex: 'activity',\r\n     },\r\n      {\r\n         title: 'Date',\r\n         dataIndex: 'date',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\r\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\r\n\r\n    const addAudit = async values => {\r\n    let finalAudit = {\r\n        user : values.user,\r\n        activity: values.activity,\r\n        date: values.date,\r\n    }\r\n    let response = auditTrailService.add(finalAudit)\r\n    };\r\n    \r\n    const getListOfAudit = async () => {\r\n      let response = await auditTrailService.findAllAudit();\r\n      let newArray = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format('MMMM Do YYYY'),\r\n          activity: user.activity,\r\n        }\r\n      })\r\n      setAuditTrailDetails({list: newArray})\r\n    };\r\n\r\n    const filterAudit = async (date) => {\r\n      let datas = [];\r\n      if (date) {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = await response.data.filter(\r\n          (user) =>\r\n            moment(user.date).format(\"MMMM Do YYYY\") ===\r\n            moment(date).format(\"MMMM Do YYYY\")\r\n        );\r\n      } else {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = response.data;\r\n      };\r\n\r\n      let newArray = await datas.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\r\n          activity: user.activity\r\n        };\r\n      });\r\n\r\n    setAuditTrailDetails({ list: newArray });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getListOfAudit();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    addAudit,\r\n    auditTrailDetails,\r\n    filterAudit\r\n  }\r\n};\r\n\r\nexport default AuditTrailAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport AuditTrailTable from './auditTrailTable'\r\nimport AuditTrailAction from './auditTrailAction'\r\nconst {Option} = Select;\r\n\r\nconst AuditTrailPage = () => {\r\n  let { auditTrailDetails, filterAudit } = AuditTrailAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n\t<Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">\r\n            Audit Trail\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n          <DatePicker\r\n            className=\"w-100P\"\r\n            placeholder={\"Input Date Here\"}\r\n            onChange={(date, dateString) => filterAudit(date)}\r\n          />\r\n        </Col>\r\n        {/* <Col lg={{ span: 24 }}>\r\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\r\n          </Button>\r\n        </Col> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <AuditTrailTable details={auditTrailDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default AuditTrailPage;\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport User from \"./components/user/user.js\";\r\nimport Student from \"./components/user/student.js\";\r\nimport Parent from \"./components/user/parent.js\";\r\nimport Teacher from \"./components/user/teacher.js\";\r\nimport UserDetail from \"./components/userDetails/userDetails.js\";\r\nimport Grade1 from \"./components/grade/grade1\";\r\nimport Grade2 from \"./components/grade/grade2\";\r\nimport Grade3 from \"./components/grade/grade3\";\r\nimport Grade4 from \"./components/grade/grade4\";\r\nimport Grade5 from \"./components/grade/grade5\";\r\nimport Grade6 from \"./components/grade/grade6\";\r\nimport Grade7 from \"./components/grade/grade7\";\r\nimport Grade8 from \"./components/grade/grade8\";\r\nimport Grade9 from \"./components/grade/grade9\";\r\nimport Grade10 from \"./components/grade/grade10\";\r\nimport Offspring from \"./components/offspring/offspring.js\";\r\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\r\nimport QuarterService from \"../src/components/quarter/quarterService\"\r\n// import Item from \"./components/item/item.js\";\r\nimport Login from \"./components/login/login.js\";\r\nimport SiderMenu from \"./components/siderMenu\"\r\nimport UserMenu from \"./components/userMenu\"\r\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\r\n\r\nimport { UserContext } from './components/userContext'\r\n\r\nconst { Option } = Select;\r\n\r\nconst App = () => {\r\n  const { Content, Sider, Header } = Layout;\r\n  let [loggedUser, setLoggedUser] = useState(null);\r\n  let [collapsed, setCollapsed] = useState(false);\r\n  let [theme] = useState(\"dark\");\r\n\r\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.user) {\r\n      setLoggedUser(JSON.parse(sessionStorage.user));\r\n    }\r\n  }, []);\r\n\r\n  const onChangeFunction = async (value) => {\r\n    // console.log(value)\r\n    let response = await QuarterService.update({_id: sessionStorage._id, quarter : value})\r\n    sessionStorage.setItem(\"quarter\", value)\r\n    window.location.reload(false)\r\n    // console.log(sessionStorage._id)\r\n    // console.log(sessionStorage.quarter)\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      {\r\n        loggedUser ?\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <BrowserRouter>\r\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\r\n                  <Sider className=\"sider\" collapsed={collapsed}>\r\n                    <Header className=\"sideBarHeader text-white\">\r\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\r\n                    </Header>\r\n                    <Content className=\"mt-20\">\r\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\r\n                    </Content>\r\n                  </Sider>\r\n                : null}\r\n                <Layout>\r\n                  <Header className=\"bg-white\">\r\n                    <a href onClick={() => {\r\n                      setCollapsed(!collapsed)\r\n                    }}>\r\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\r\n                    </a>\r\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ?                     <span className=\"left\">\r\n                      Quarter: &nbsp;\r\n                    <Select onChange={\r\n                      (value)=> \r\n                      onChangeFunction(value)\r\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\r\n                              <Option value=\"1\">1</Option>\r\n                              <Option value=\"2\">2</Option>\r\n                              <Option value=\"3\">3</Option>\r\n                              <Option value=\"4\">4</Option>\r\n                           </Select>\r\n                    </span> : null}\r\n\r\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                      <span>\r\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\"/>\r\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\r\n                      </span>\r\n                    : null}\r\n\r\n\r\n                    <span className=\"right\">\r\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\r\n                      <Dropdown overlay={<UserMenu />}>\r\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\r\n                      </Dropdown>\r\n                    </span>\r\n                  </Header>\r\n                  <Layout>\r\n                    <Content className=\"pt-30 pb-30\">\r\n                      <Switch>\r\n                      {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/dashboard\"\r\n                       /> :   \r\n                       JSON.parse(sessionStorage.user).role === \"Parent\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/offspring\"\r\n                       /> :                        JSON.parse(sessionStorage.user).role === \"Teacher\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/grade1\"\r\n                       />: <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/\"\r\n                       />}\r\n \r\n                            <Route path=\"/admin\" component={User} />\r\n                            <Route path=\"/student\" component={Student} />\r\n                            <Route path=\"/parent\" component={Parent} />\r\n                            <Route path=\"/teacher\" component={Teacher} />\r\n                            <Route path=\"/dashboard\" component={Dashboard}/>\r\n                            <Route path=\"/grade1\" component={Grade1} />\r\n                            <Route path=\"/grade2\" component={Grade2} />\r\n                            <Route path=\"/grade3\" component={Grade3} />\r\n                            <Route path=\"/grade4\" component={Grade4} />\r\n                            <Route path=\"/grade5\" component={Grade5} />\r\n                            <Route path=\"/grade6\" component={Grade6} />\r\n                            <Route path=\"/grade7\" component={Grade7} />\r\n                            <Route path=\"/grade8\" component={Grade8} />\r\n                            <Route path=\"/grade9\" component={Grade9} />\r\n                            <Route path=\"/grade10\" component={Grade10} />\r\n                            <Route path=\"/offspring\" component={Offspring} />\r\n                            <Route path=\"/timekeeping\" component={Timekeeping}/>\r\n                            <Route path=\"/auditTrail\" component={AuditTrail}/>\r\n                            <Route path=\"/\" component={UserDetail} />\r\n                      </Switch>\r\n                    </Content>\r\n                  </Layout>\r\n                </Layout>\r\n              </BrowserRouter>\r\n            </Layout>\r\n            <Layout>\r\n            </Layout>\r\n          </BrowserRouter>\r\n                    :\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Redirect from=\"*\" to=\"/login\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n          }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}