{"version":3,"sources":["config.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/dashboard/dashboard.js","components/user/additionalService.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/auditTrail/auditTrailService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/grade/advisoryService.js","components/grade/advisoryAction.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/user/userSetting.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/grade/gradeAction.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/grade/teacherAction.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/offspring/offspringTable.js","components/offspring/offspring.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","id","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","userObj","update","_id","findAllUser","findyById","getGenIdNumber","role","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","a","userService","response","parent","data","filter","user","student","teacher","length","useEffect","EmployeePage","DashboardAtion","className","gutter","xs","span","sm","md","lg","title","bordered","getAdvisory","getAdvisoryStudents","level","Option","Select","UserEditForm","selectedUser","selectedParent","isNewData","AdditionalService","idNumber","getId","loading","initialValues","enableReinitialize","onSubmit","values","console","log","render","touched","setFieldValue","spinning","delay","Item","label","name","disabled","JSON","parse","sessionStorage","value","firstName","lastName","map","htmlType","CheckCircleFilled","type","gradesObj","findAllGrades","quarterObj","findAllQuarter","auditTrailObj","findAllAudit","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","loggedDate","toISOString","details","auditTrailService","setItem","stringify","filterStudent","newArray","key","action","onClick","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","loadParent","loadAdmin","getNewGenId","newArrayCredentials","buildStudentList","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","columns","dataIndex","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","Title","placeholder","e","target","PlusCircleOutlined","width","visible","onClose","bodyStyle","paddingBottom","advisoryObj","findAllAdvisory","TeacherAction","setSelectedTeacher","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","studentAdvisor","setStudentAdvisor","advisoryStudents","setAdvisoryStudents","addAdvisor","advisor","advisorTeacher","finalAddValue","advisoryService","getListOfTeacher","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","loadAdvisoryStudents","userData","advisory","students","isAdvisory","AdvisoryAction","Settings","newPassword","confirmPassword","changePassword","style","textAlign","offset","marginTop","align","TimeKeepingTable","Grade1Action","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","upgradeStudent","userCurrentGrade","parseInt","currentUser","allStudent","result1","currentStudent","toString","editGrade","grade","English","newEnglishGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","MAPEH","newMAPEHGrade","Values","newValuesGrade","showGrade","loadGrade","getCurrentGradeUser","filterCurrentGradeUser","subject","remarks","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","FinalGrade","Remarks","currentGradeUser","loadGrades","finalOffspring","offspring","off","push","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","GradeAction","Grade1EditForm","selectedTeacherAssignedGrade","newValues","English1","English2","English3","English4","Filipino1","Filipino2","Filipino3","Filipino4","Science1","Science2","Science3","Science4","Math1","Math2","Math3","Math4","MAPEH1","MAPEH2","MAPEH3","MAPEH4","Values1","Values2","Values3","Values4","undefined","defaultValue","TeacherForm","selectedTeacherAssgined","GradeTable","teacherObj","findAllTeacher","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","hideTeacher","showTeacher","GradePage","addGrade","AdvisorAction","RiseOutlined","selectedOffspring","OffspringPage","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","AttendanceAction","dateString","LoginForm","actions","errors","isSubmitting","Password","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","src","SubMenu","Menu","SiderMenu","theme","collapsed","mode","icon","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","SettingOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","filterAudit","datas","AuditTrailPage","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","href","overlay","Text","exact","from","path","component","UserSetting","User","Student","props","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Offspring","Timekeeping","AuditTrail","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.809c9fe0.chunk.js","sourcesContent":["/**\r\n * declare all configurations in here\r\n */\r\n\r\n//declare as LOCAL for local and PRODUCTION for production\r\nconst ENVIRONMENT = 'PRODUCTION';\r\n\r\nconst LOCAL_BE = 'http://localhost:14000';\r\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\r\n\r\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE };","import axios from 'axios';\r\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\r\nclass BaseService {\r\n  constructor(moduleUrl) {\r\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\r\n      PRODUCTION_BE + \"/\" + moduleUrl :\r\n      LOCAL_BE + \"/\" + moduleUrl;\r\n    this.axiosInstance = axios.create({\r\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\r\n        PRODUCTION_BE + \"/\" + moduleUrl :\r\n        LOCAL_BE + \"/\" + moduleUrl\r\n    })\r\n    \r\n    // this.axiosInstance.interceptors.request.use(function (config) {\r\n    //   const token = sessionStorage.getItem('token');\r\n    //   config.headers[\"x-authorization\"] = token;\r\n    //   return config;\r\n    // });\r\n  }\r\n\r\n  edit = newObj => {\r\n    return this.axiosInstance.put('', newObj);\r\n  };\r\n\r\n  add = newObj => {\r\n    return this.axiosInstance.post('', newObj);\r\n  };\r\n\r\n  getById = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  delete = crudId => {\r\n    return this.axiosInstance.delete('/' + crudId);\r\n  };\r\n  softDelete = crudId => {\r\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\r\n  };\r\n}\r\nexport default BaseService;\r\n","import BaseService from '../../baseService';\r\nclass UserService extends BaseService {\r\n  constructor() {\r\n    super('user');\r\n  }\r\n\r\n  add = userObj => {\r\n    return this.axiosInstance.post('/create-user', userObj);\r\n  };\r\n\r\n  update = userObj => {\r\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\r\n  };\r\n\r\n  findAllUser = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-user/' + id);\r\n  };\r\n\r\n  getGenIdNumber = (role) => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( \r\n      {numberOfStudents : 0, \r\n      numberOfTeachers: 0,\r\n      numberOfParents : 0}\r\n      );\r\n\r\n  const getListOfUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let parent = response.data.filter(user => user.role === \"Parent\");\r\n    let student = response.data.filter(user => user.role === \"Student\");\r\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\r\n    setUserDetails({\r\n        numberOfParents: parent.length,\r\n        numberOfStudents : student.length, \r\n        numberOfTeachers: teacher.length\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfUsers();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    userDetails\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport DashboardAtion from \"../dashboard/dashboardAction\"\r\n\r\nconst EmployeePage = () => { \r\n    let{\r\n        userDetails\r\n      } = DashboardAtion({});\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n    <Row gutter={16}>\r\n      <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\r\n        <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfStudents}\r\n            </span>\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n            {userDetails.numberOfParents}\r\n          </span>\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n            {userDetails.numberOfTeachers}\r\n          </span>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdditionalService extends BaseService {\r\n  constructor() {\r\n    super('');\r\n  };\r\n\r\n  getGenIdNumber = role => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  getAdvisory = teacher => {\r\n    return this.axiosInstance.post('/teacher-advisory', teacher);\r\n  };\r\n\r\n  getAdvisoryStudents = level => {\r\n    return this.axiosInstance.get('/advisory-students/' + level);\r\n  };\r\n\r\n}\r\n\r\nexport default new AdditionalService();\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nimport AdditionalService from './additionalService';\r\nconst { Option } = Select;\r\n\r\nconst UserEditForm = ({ add,update, selectedUser, selectedParent, role, isNewData = true}) => {\r\n\r\n   let getId = async role => {\r\n      let response = await AdditionalService.getGenIdNumber(role);\r\n      selectedUser.idNumber = response.data;\r\n   };\r\n   \r\n   let newGenId = '';\r\n  \r\n   if (isNewData) {\r\n      getId(role);\r\n   };\r\n\r\n   let [loading, setLoading] = useState(false);\r\n   let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            if(values._id) {\r\n               console.log(values)\r\n               update(values)\r\n            } else {\r\n               values.role = role;\r\n               add(values)\r\n      \r\n               // window.location.reload(false);\r\n            }\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n                  \r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"User ID\" name=\"idNumber\">\r\n                           <Input disabled=\"true\" name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     { role===\"Student\" ? (\r\n                        <Col span={12}>\r\n                           <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                              <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     ) :(\"\")}\r\n                     \r\n                  </Row>\r\n               \r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"First Name\" name=\"firstName\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Middle Name\" name=\"middleName\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Last Name\" name=\"lastName\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Gender\" name=\"gender\">\r\n                          <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\r\n                              <Option value=\"Male\">Male</Option>\r\n                              <Option value=\"Female\">Female</Option>\r\n                           </Select>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  to be remove\r\n                  {selectedUser.role === \"Student\" ? (\r\n                     <Row gutter={16}>\r\n                        <Col span={12}>\r\n                           <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                              <Select\r\n                                 disabled={\r\n                                   values.role != \"Student\" ||\r\n                                   JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                                 }\r\n                                 name=\"gradeLevel\"\r\n                              >\r\n                                 <Option value=\"1\">1</Option>\r\n                                 <Option value=\"2\">2</Option>\r\n                                 <Option value=\"3\">3</Option>\r\n                                 <Option value=\"4\">4</Option>\r\n                                 <Option value=\"5\">5</Option>\r\n                                 <Option value=\"6\">6</Option>\r\n                                 <Option value=\"7\">7</Option>\r\n                                 <Option value=\"8\">8</Option>\r\n                                 <Option value=\"9\">9</Option>\r\n                                 <Option value=\"10\">10</Option>\r\n                              </Select>\r\n                           </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                        {/* <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input\r\n                              disabled={\r\n                                 values.role != \"Student\" ||\r\n                                 JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                              }\r\n                              name=\"section\"\r\n                           />\r\n                        </Form.Item> */}\r\n                        </Col>\r\n                     </Row>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Birth Day\" name=\"birthDate\">\r\n                           <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Birth Place\" name=\"birthPlace\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Age\" name=\"age\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        {role === \"Student\" ? (\r\n                           <Form.Item label=\"Guardian\" name=\"parentId\">\r\n                              <Select\r\n                                 value={\r\n                                    values.parent\r\n                                    ? values.parent.firstName +\r\n                                    \" \" +\r\n                                    values.parent.lastName\r\n                                    : \"\"\r\n                                    }\r\n                                 name=\"parentId\"\r\n                              >\r\n                                 {selectedParent.map((parent) => {\r\n                                    return (\r\n                                       <Option value={parent._id}>\r\n                                          {parent.firstName + \" \" + parent.lastName}\r\n                                       </Option>\r\n                                    );\r\n                                 })}\r\n                             </Select>\r\n                           </Form.Item>\r\n                        ) : (\r\n                           \"\"\r\n                        )}\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Contact Number\" name=\"contactNumber\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Email\" name=\"email\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     {/* <Col span={12}>\r\n                     <Form.Item label=\"Role\" name=\"role\">\r\n                        <Select\r\n                           disabled={\r\n                              JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                           }\r\n                           name=\"role\"\r\n                        >\r\n                           <Option value=\"Admin\">Admin</Option>\r\n                           <Option value=\"Student\">Student</Option>\r\n                           <Option value=\"Parent\">Parent</Option>\r\n                           <Option value=\"Teacher\">Teacher</Option>\r\n                        </Select>\r\n                     </Form.Item>\r\n                   </Col> */}\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"BadgeId\" name=\"badgeID\">\r\n                           <Input name=\"badgeID\"/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Password\" name=\"password\">\r\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                 {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                   <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button> : null}\r\n                 \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;\r\n","import BaseService from '../../baseService';\r\nclass GradesService extends BaseService {\r\n  constructor() {\r\n    super('grades');\r\n  }\r\n\r\n  add = gradesObj => {\r\n    return this.axiosInstance.post('/create-grades', gradesObj);\r\n  };\r\n\r\n  update = gradesObj => {\r\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-grades/' + id);\r\n  };\r\n\r\n  findAllGrades = (level ='') => {\r\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new GradesService();\r\n","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('quarter');\r\n  }\r\n\r\n  add = quarterObj => {\r\n    return this.axiosInstance.post('/create-quarter', quarterObj);\r\n  };\r\n\r\n  update = quarterObj => {\r\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\r\n  };\r\n\r\n  findAllQuarter = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-quarter/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import BaseService from '../../baseService';\r\nclass AuditTrailService extends BaseService {\r\n  constructor() {\r\n    super('auditTrail');\r\n  }\r\n\r\n  add = auditTrailObj => {\r\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\r\n  };\r\n\r\n  update = auditTrailObj => {\r\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\r\n  };\r\n\r\n  findAllAudit = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-autditrail/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new AuditTrailService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from './userService';\r\nimport gradesService from '../grade/gradesService';\r\nimport quarterService from '../quarter/quarterService'\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from './additionalService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\r\n  let [adminList, setAdminList] = useState([])\r\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\r\n  let [parentList, setParentList] = useState([])\r\n  let [studentList, setStudentList] = useState([])\r\n  let [teacherList, setTeacherList] = useState([])\r\n  let [showUserVisible, setShowUserVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n  let [selectedParent, setSelectedParent] = useState([]);\r\n\r\n  let [loginCounter, setLoginCounter] = useState(false);\r\n\r\n  const addUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Add User\",\r\n      date:new Date()\r\n    }\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.add(values)\r\n    .then(function (res) {\r\n      if(values.role === \"Student\"){\r\n        let gradeObj = {\r\n          status: true,\r\n          student: values,\r\n          gradeLevel: values.gradeLevel,\r\n          section: values.section,\r\n          schoolYear : values.schoolYear,\r\n          subjects: [{\r\n              subjectName: \"English\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Filipino\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Science\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Math\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"MAPEH\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Values\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          }]\r\n      }\r\n      let response = gradesService.add(gradeObj)\r\n      }\r\n    \r\n        \r\n        setSelectedUser({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            employeeNumber: \"\",\r\n            department: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n        window.location.reload(false);\r\n    })\r\n  };\r\n\r\n  const editUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Edit User\",\r\n      date:new Date()}\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.update(values)\r\n    .then(function (res) {\r\n        setSelectedUser({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          middleName: \"\",\r\n          idNumber: \"\",\r\n          gender: \"\",\r\n          birthDate: \"\",\r\n          birthPlace: \"\",\r\n          age: \"\",\r\n          contactNumber: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n    })\r\n  };\r\n\r\n  const getListOfParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    setSelectedParent(result)\r\n  };\r\n\r\n  const showUser = () => {\r\n    setSelectedUser({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        idNumber: \"\",\r\n        gender: \"\",\r\n        birthDate: \"\",\r\n        birthPlace: \"\",\r\n        age: \"\",\r\n        contactNumber: \"\",\r\n        email: \"\",\r\n        status: \"\",\r\n      });\r\n    setShowUserVisible(true)\r\n  };\r\n\r\n  const loadUser = (userObj) => {\r\n    setSelectedUser({...userObj});\r\n    setShowUserVisible(true);\r\n  };\r\n\r\n  const loadQuarter = async () => {\r\n    let response = await quarterService.findAllQuarter();\r\n    if (response.data && response.data.length > 0) {\r\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\r\n    };\r\n  }\r\n\r\n  const login = async (credentials) => {\r\n    let ctr = 0;\r\n    let loggedInUser = {};\r\n    userDetails.list.map((user) => {\r\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\r\n            ctr = ctr + 1;\r\n            loggedInUser = user;\r\n        }\r\n    })\r\n    if(ctr === 0) {\r\n        setLoginCounter(false)\r\n    } else {\r\n         //if user is parent log in audit trail\r\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\r\n          let loggedDate =  new Date().toISOString();\r\n          let details = {\r\n            user: loggedInUser,\r\n            activity: 'Parent logged in',\r\n            date: loggedDate\r\n          };\r\n          await auditTrailService.add(details);\r\n        };\r\n    \r\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\r\n        sessionStorage.setItem(\"_id\", quarter._id);\r\n        window.location.reload(false);\r\n        setLoginCounter(true);\r\n    }\r\n  };\r\n\r\n  const filterStudent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setStudentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList( newArray)\r\n    }\r\n  } \r\n  \r\n  const filterTeacher = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setTeacherList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterParent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setParentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterAdmin = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setAdminList(\r\n        newArray\r\n      )\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(\r\n      newArray\r\n    )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList(newArray)\r\n\r\n  }  \r\n\r\n  const loadStudent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Student\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList(newArray)\r\n\r\n  }  \r\n\r\n  const loadParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList(newArray)\r\n\r\n  }\r\n\r\n  const loadAdmin = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Admin\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(newArray)\r\n\r\n  }\r\n  \r\nconst getNewGenId = async (role) => {\r\n      let response = await userService.getGenIdNumber(role);\r\n      return response;\r\n    }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    let newArrayCredentials = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          idNumber: user.idNumber,\r\n          password: user.password,\r\n        }\r\n      })\r\n\r\n    setUserDetails({\r\n      list: newArray,\r\n      credentials: newArrayCredentials\r\n    })\r\n  \r\n    \r\n\r\n  };\r\n  \r\n  const buildStudentList = (list) => {\r\n    let newlist = list.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n    return newlist;\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadUsers();\r\n    getListOfParent();\r\n    loadAdmin();\r\n    loadStudent();\r\n    loadTeacher();\r\n    loadParent();\r\n    loadQuarter();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadUsers,\r\n    addUser,\r\n    loginCounter,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    login,\r\n    selectedParent,\r\n    filterAdmin,\r\n    filterStudent,\r\n    filterParent,\r\n    filterTeacher,\r\n    adminList,\r\n    studentList,\r\n    parentList,\r\n    teacherList,\r\n    getNewGenId,\r\n    buildStudentList\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\r\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n  }, []);\r\n\r\n\r\n  return {\r\n    today\r\n  }\r\n};\r\n\r\nexport default TimeKeepingAction;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst EmployeeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      },\r\n      {\r\n         title: <b>Gender</b>,\r\n         dataIndex: 'gender',\r\n      },\r\n      {\r\n        title: <b>Age</b>,\r\n        dataIndex: 'age',\r\n      },   \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Role</b>,\r\n        dataIndex: 'role',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         console.log(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterAdmin,\r\n    adminList\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        {console.log(adminList)}\r\n        <UserTable details={adminList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Admin' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdvisoryService extends BaseService {\r\n  constructor() {\r\n    super('advisory');\r\n  }\r\n\r\n  add = advisoryObj => {\r\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\r\n  };\r\n\r\n  update = advisoryObj => {\r\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-advisory/' + id);\r\n  };\r\n\r\n  findAllAdvisory = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new AdvisoryService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport UserAction from '../user/userAction';\r\n\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\r\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\r\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [advisoryStudents, setAdvisoryStudents] = useState([]);\r\n  \r\n  let {\r\n    buildStudentList\r\n  } = UserAction({});\r\n\r\n  const addAdvisor = async (values, gradeLevel) => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Added Advisor\",\r\n      date:new Date()}\r\n    let advisorTeacher = await userService.findyById(values.advisor)\r\n    let finalAddValue = {\r\n      gradeLevel: gradeLevel,\r\n      teacher: advisorTeacher.data\r\n    }\r\n    let response = await advisoryService.add(finalAddValue);\r\n    window.location.reload();\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result);\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setselectedAdvisoryAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setselectedAdvisoryAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setselectedAdvisoryAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setselectedAdvisoryAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setselectedAdvisoryAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setselectedAdvisoryAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setselectedAdvisoryAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setselectedAdvisoryAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setselectedAdvisoryAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setselectedAdvisoryAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideAdvisor = async () => {\r\n    setshowAdvisorVisible(false)\r\n  };\r\n\r\n  const showAdvisor = async (gradeLevel) => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setselectedAdvisoryAssgined(result[0].subjects)\r\n    } else {\r\n        setselectedAdvisoryAssgined({})\r\n    }\r\n    setshowAdvisorVisible(true)\r\n  };\r\n\r\n  const getStudentAdvisor = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n    setStudentAdvisor(result[0]);\r\n  };\r\n  \r\n   const loadAdvisoryStudents = async () => {\r\n     let user = JSON.parse(sessionStorage.user);\r\n     const userData = {\r\n       firstName: user.firstName,\r\n       lastName: user.lastName,\r\n       middleName: user.middleName\r\n     };\r\n     try {\r\n       let advisory = await AdditionalService.getAdvisory(userData);\r\n   \r\n       if (!advisory) return;\r\n     \r\n       const students = await AdditionalService.getAdvisoryStudents(advisory.data.gradeLevel);\r\n       let list = buildStudentList(students.data);\r\n       await setAdvisoryStudents(list);\r\n       console.log('YHVH is great', students.data);\r\n       return list;\r\n     } catch (error) {\r\n       return [];\r\n     };\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudentAdvisor();\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n    loadAdvisoryStudents();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    studentAdvisor,\r\n    advisoryStudents,\r\n    loadAdvisoryStudents\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm';\r\nimport AdvisoryAction from '../grade/advisoryAction';\r\n\r\nimport UserAction from './userAction';\r\nimport AdditionalService from './additionalService';\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable';\r\n\r\nconst EmployeePage = ({isAdvisory}) => {\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    studentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterStudent\r\n  } = UserAction({});\r\n\t\r\n  let {\r\n    advisoryStudents,\r\n    loadAdvisoryStudents\r\n  } = AdvisoryAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\t\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\r\n      </Col>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n      <>\r\n        <Col lg={{ span: 6 }}>\r\n          <Input placeholder=\"Search\" onChange={(e)=> filterStudent(e.target.value)}/>\r\n          {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n          </Button> */}\r\n        </Col>\r\n        <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n          <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n        </Button>\r\n      </>\r\n        : null}\r\n\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={ isAdvisory ? advisoryStudents : studentList } />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Student' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    parentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterParent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\r\n        <UserTable details={parentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Parent' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    teacherList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterTeacher\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={teacherList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Teacher' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Space, Alert } from 'antd';\r\n\r\nimport UserAction from './userAction';\r\n\r\nconst Settings = () => {\r\n  let password = '';\r\n  let newPassword = '';\r\n  let confirmPassword = '';\r\n  let error = false;\r\n  let success = false;\r\n  \r\n  const changePassword = () => {\r\n    console.log('________');\r\n    if (password === '' || newPassword === '' || confirmPassword === '') return error = true;\r\n    return success = true;\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\" style={{textAlign: 'center'}}>\r\n     <Row className=\"mt-15\">\r\n       <Col lg={{ span: 6, offset: 9  }}>\r\n         <Typography.Title level={3} className=\"ml-15\">Setting</Typography.Title>\r\n       </Col>\r\n     </Row>\r\n      <form onSubmit={() => changePassword()}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 6, offset: 9 }}>\r\n            <Input placeholder=\"Old Password\" onChange={(e) => password = e.target.value}/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n           <Input placeholder=\"New Password\" onChange={(e) => newPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n          <Input placeholder=\"Confirm Password\" onChange={(e) => confirmPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row style={{marginTop: '15px'}}>\r\n        <Col lg={{ span: 6, offset: 9 }}>\r\n         <Space align=\"center\">\r\n           <Button  className=\"addUser btn-add\" onClick={()=> changePassword()}>\r\n            Change Password\r\n          </Button>\r\n         </Space>\r\n        </Col>\r\n       </Row>\r\n      </form>\r\n    </Card>     \r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Subject</b>,\r\n         dataIndex: 'subject',\r\n      },\r\n      {\r\n        title: <b>1st Quarter</b>,\r\n        dataIndex: 'Quarter1st',\r\n     },\r\n      {\r\n         title: <b>2nd Quarter</b>,\r\n         dataIndex: 'Quarter2nd',\r\n      },\r\n      {\r\n         title: <b>3rd Quarter</b>,\r\n         dataIndex: 'Quarter3rd',\r\n      },\r\n      {\r\n        title: <b>4th Quarter</b>,\r\n        dataIndex: 'Quarter4th',\r\n     },\r\n     {\r\n        title: <b>Final Grade</b>,\r\n        dataIndex: 'FinalGrade',\r\n     },\r\n     {\r\n        title: <b>Remarks</b>,\r\n        dataIndex: 'Remarks',\r\n     }\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst UserEditForm = ({ selectedUser }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n               <Card className=\"p-70\">\r\n               <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n                <br/>\r\n                {console.log(values)}\r\n               \r\n                <Row gutter={16}>\r\n\r\n{/* <Col span={12}>\r\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n \r\n   <Col span={12}>\r\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n   <Col span={12}>\r\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col> */}\r\n</Row>\r\n             \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;","import React, { useState, useEffect } from 'react';\r\nimport gradesService from './gradesService';\r\nimport userService from '../user/userService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Grade1Action = (initial = { searchRequest: {} }) => {\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\r\n  let [gradeDetails, setGradeDetails] = useState( {list : []});\r\n  let [grade1Details, setGrade1Details] = useState( {list : []});\r\n  let [grade2Details, setGrade2Details] = useState( {list : []});\r\n  let [grade3Details, setGrade3Details] = useState( {list : []});\r\n  let [grade4Details, setGrade4Details] = useState( {list : []});\r\n  let [grade5Details, setGrade5Details] = useState( {list : []});\r\n  let [grade6Details, setGrade6Details] = useState( {list : []});\r\n  let [grade7Details, setGrade7Details] = useState( {list : []});\r\n  let [grade8Details, setGrade8Details] = useState( {list : []});\r\n  let [grade9Details, setGrade9Details] = useState( {list : []});\r\n  let [grade10Details, setGrade10Details] = useState( {list : []});\r\n\r\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\r\n  let [selectedGrade, setSelectedGrade] = useState({});\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n\r\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\r\n\r\n  const upgradeStudent = async values => {\r\n    let auditTrailObj = {\r\n    user: JSON.parse(sessionStorage.user),\r\n    activity : \"Upgrade Student\",\r\n    date:new Date()}\r\n    auditTrailService.add(auditTrailObj)\r\n    let ctr = 0;\r\n    await selectedListOfStudent.map(async student => {\r\n    setLoading(true)\r\n    let result = await gradesService.findyById(student.id);\r\n\r\n    let userCurrentGrade = (parseInt(result.data.gradeLevel))\r\n\r\n\r\n    if(userCurrentGrade < 10) {\r\n      let currentUser = result.data\r\n      let allStudent = await userService.findAllUser();\r\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n      let currentStudent = result1[0]\r\n      currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\r\n      let response = await userService.update(currentStudent)\r\n\r\n      currentUser.status = false;\r\n      let response1 = await gradesService.update(currentUser)\r\n\r\n      let gradeObj = {\r\n        status: true,\r\n        student: currentUser.student,\r\n        gradeLevel: (userCurrentGrade + 1).toString(),\r\n        section: currentUser.student.section,\r\n        schoolYear : currentStudent.schoolYear,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Filipino\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Science\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Math\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"MAPEH\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        },\r\n        {\r\n          schoolYear : currentUser.schoolYear,\r\n            subjectName: \"Values\",\r\n              subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n          }\r\n        }]\r\n    }\r\n\r\n    let response2 = gradesService.add(gradeObj)\r\n  \r\n\r\n    } else {\r\n      let currentUser = result.data\r\n      let allStudent = await userService.findAllUser();\r\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n      let currentStudent = result1[0]\r\n      currentStudent.gradeLevel = \"Graduate\"\r\n      let response = await userService.update(currentStudent)\r\n\r\n      currentUser.status = false;\r\n      let response1 = await gradesService.update(currentUser)\r\n    }\r\n    ctr= ctr+1\r\n    if(ctr === selectedListOfStudent.length) {\r\n      setLoading(false)\r\n      window.location.reload(false)\r\n    }\r\n    })\r\n\r\n  };\r\n\r\n  const editGrade = async values => {\r\n    let result = await gradesService.findyById(values._id);\r\n    let grade = result.data\r\n\r\n    if(values.English) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.English.firstQuarter) {\r\n        firstQuarter = values.English.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.English.secondQuarter) {\r\n        secondQuarter = values.English.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.English.thirdQuarter) {\r\n        thirdQuarter = values.English.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.English.fourthQuarter) {\r\n        fourthQuarter = values.English.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newEnglishGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[0].subjectGrade = newEnglishGrade;\r\n    }    \r\n\r\n    if(values.Filipino) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Filipino.firstQuarter) {\r\n        firstQuarter = values.Filipino.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Filipino.secondQuarter) {\r\n        secondQuarter = values.Filipino.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Filipino.thirdQuarter) {\r\n        thirdQuarter = values.Filipino.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Filipino.fourthQuarter) {\r\n        fourthQuarter = values.Filipino.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newFilipinoGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[1].subjectGrade = newFilipinoGrade;\r\n    }\r\n\r\n    if(values.Science) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Science.firstQuarter) {\r\n        firstQuarter = values.Science.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Science.secondQuarter) {\r\n        secondQuarter = values.Science.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Science.thirdQuarter) {\r\n        thirdQuarter = values.Science.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Science.fourthQuarter) {\r\n        fourthQuarter = values.Science.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newScienceGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[2].subjectGrade = newScienceGrade;\r\n    }\r\n\r\n    if(values.Math) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Math.firstQuarter) {\r\n        firstQuarter = values.Math.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Math.secondQuarter) {\r\n        secondQuarter = values.Math.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Math.thirdQuarter) {\r\n        thirdQuarter = values.Math.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Math.fourthQuarter) {\r\n        fourthQuarter = values.Math.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newMathGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[3].subjectGrade = newMathGrade;\r\n    }\r\n\r\n    if(values.MAPEH) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.MAPEH.firstQuarter) {\r\n        firstQuarter = values.MAPEH.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.MAPEH.secondQuarter) {\r\n        secondQuarter = values.MAPEH.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.MAPEH.thirdQuarter) {\r\n        thirdQuarter = values.MAPEH.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.MAPEH.fourthQuarter) {\r\n        fourthQuarter = values.MAPEH.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newMAPEHGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[4].subjectGrade = newMAPEHGrade;\r\n    }\r\n\r\n    if(values.Values) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if(values.Values.firstQuarter) {\r\n        firstQuarter = values.Values.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if(values.Values.secondQuarter) {\r\n        secondQuarter = values.Values.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if(values.Values.thirdQuarter) {\r\n        thirdQuarter = values.Values.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if(values.Values.fourthQuarter) {\r\n        fourthQuarter = values.Values.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\r\n      }      \r\n\r\n      let newValuesGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter:secondQuarter,\r\n        thirdQuarter:thirdQuarter,\r\n        fourthQuarter:fourthQuarter\r\n      }\r\n      grade.subjects[5].subjectGrade = newValuesGrade;\r\n    }\r\n\r\n    let updateResult = await gradesService.update(grade);\r\n    //add record  to audit trail\r\n    let loggedDate =  new Date().toISOString();\r\n    let userDetails = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: 'Teacher has updated student grades',\r\n      date: loggedDate\r\n    };\r\n    await auditTrailService.add(userDetails);\r\n    window.location.reload();\r\n  };\r\n\r\n  const showGrade = () => {\r\n    setSelectedGrade({\r\n        schoolYear: \"\",\r\n        subjects: {},\r\n        grade: \"\",\r\n        student: {},\r\n        gradeLevel: \"\",\r\n        section: \"\",\r\n      })\r\n    setShowGradeVisible(true)\r\n  };\r\n\r\n  const loadGrade = (gradeObj, idNumber, level = '') => {\r\n    getCurrentGradeUser(idNumber, level)\r\n    setSelectedGrade({...gradeObj});\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const loadSelectedGrade = async (gradeId) => {\r\n    let response = await gradesService.findyById(gradeId);\r\n    setSelectedGrade({...response.data});\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const filterCurrentGradeUser = async (gradeLevel) => {\r\n    setLoading(true)\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\r\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        let remarks = \"\";\r\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\r\n          remarks = \"Passed\"\r\n        } else {\r\n          remarks = \"Failed\"\r\n        }\r\n        return {\r\n          key: subject._id,\r\n          id: subject._id,\r\n          subject: subject.subjectName,\r\n          Quarter1st: subject.subjectGrade.firstQuarter,\r\n          Quarter2nd: subject.subjectGrade.secondQuarter,\r\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\r\n          Quarter4th: subject.subjectGrade.fourthQuarter,\r\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\r\n          Remarks : remarks\r\n        }\r\n      })\r\n      \r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1=[];\r\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    \r\n      setSelectedUser(result[0].student)\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n   \r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const currentGradeUser = async () => {\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\r\n    } else {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\r\n    }\r\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student)\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        let remarks = \"\";\r\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\r\n          remarks = \"Passed\"\r\n        } else {\r\n          remarks = \"Failed\"\r\n        }\r\n        return {\r\n          key: subject._id,\r\n          id: subject._id,\r\n          subject: subject.subjectName,\r\n          Quarter1st: subject.subjectGrade.firstQuarter,\r\n          Quarter2nd: subject.subjectGrade.secondQuarter,\r\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\r\n          Quarter4th: subject.subjectGrade.fourthQuarter,\r\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\r\n          Remarks : remarks\r\n        }\r\n      })\r\n      \r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1=[];\r\n      if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\r\n      } else {\r\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n      }\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n   \r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    }\r\n\r\n  }\r\n\r\n  const getCurrentGradeUser = async (idNumber, level = '') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\r\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student);\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        let remarks = \"\";\r\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\r\n          remarks = \"Passed\"\r\n        } else {\r\n          remarks = \"Failed\"\r\n        }\r\n        return {\r\n          key: subject._id,\r\n          id: subject._id,\r\n          subject: subject.subjectName,\r\n          Quarter1st: subject.subjectGrade.firstQuarter,\r\n          Quarter2nd: subject.subjectGrade.secondQuarter,\r\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\r\n          Quarter4th: subject.subjectGrade.fourthQuarter,\r\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\r\n          Remarks : remarks\r\n        }\r\n      });\r\n      setSelectedGradeUser(newArray);\r\n   \r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedGradeUser([])\r\n    }\r\n\r\n    \r\n   \r\n\r\n  }\r\n\r\n  const loadGrades = async () => {\r\n    let finalOffspring = [];\r\n    let response = await gradesService.findAllGrades();\r\n    let parent = await userService.findAllUser();\r\n    let result = parent.data.filter(user => user.parent);\r\n    let newArray = [];\r\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\r\n    await response.data.map((user) => {\r\n      offspring.map((off) => {\r\n        if(user.student.idNumber === off.idNumber){\r\n          finalOffspring.push(user)\r\n        }\r\n      });\r\n    });\r\n    newArray = finalOffspring.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.student.firstName,\r\n          lastName: user.student.lastName,\r\n          middleName: user.student.middleName,\r\n          idNumber: user.student.idNumber,\r\n          contactNumber: user.student.contactNumber,\r\n          email: user.student.email,\r\n          section: user.section,\r\n          gradeLevel: user.gradeLevel,\r\n          action: \r\n            <Button onClick={() => loadGrade(user,user.student.idNumber)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      setGradeDetails({\r\n        list: newArray\r\n      })\r\n  }\r\n\r\nconst loadGrades1 = async () => {\r\n    let response = await gradesService.findAllGrades('1');\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '1')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade1Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades2 = async () => {\r\n    let response = await gradesService.findAllGrades('2');\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '2')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade2Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades3 = async () => {\r\n    let response = await gradesService.findAllGrades('3');\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '3')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade3Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades4 = async () => {\r\n    let response = await gradesService.findAllGrades('4');\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '4')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade4Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades5 = async () => {\r\n    let response = await gradesService.findAllGrades('5');\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '5')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade5Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades6 = async () => {\r\n    let response = await gradesService.findAllGrades('6');\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '6')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade6Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades7 = async () => {\r\n    let response = await gradesService.findAllGrades('7');\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '7')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade7Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades8 = async () => {\r\n    let response = await gradesService.findAllGrades('8');\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '8')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade8Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades9 = async () => {\r\n    let response = await gradesService.findAllGrades('9');\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '9')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade9Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  const loadGrades10 = async () => {\r\n    let response = await gradesService.findAllGrades('10');\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\" && user.status)\r\n        let newArray = result.map((user ) => {\r\n            return {\r\n              key: user._id,\r\n              id: user._id,\r\n              firstName: user.student.firstName,\r\n              lastName: user.student.lastName,\r\n              middleName: user.student.middleName,\r\n              idNumber: user.student.idNumber,\r\n              contactNumber: user.student.contactNumber,\r\n              email: user.student.email,\r\n              section: user.student.section,\r\n              action: \r\n                <Button onClick={() => loadGrade(user,user.student.idNumber, '10')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n            }\r\n          })\r\n      \r\n          setGrade10Details({\r\n            list: newArray\r\n          })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadGrades1();\r\n    loadGrades2();\r\n    loadGrades3();\r\n    loadGrades4();\r\n    loadGrades5();\r\n    loadGrades6();\r\n    loadGrades7();\r\n    loadGrades8();\r\n    loadGrades9();\r\n    loadGrades10();\r\n    loadGrades();\r\n    currentGradeUser();\r\n    getListOfTeacher();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadGrades1,\r\n    grade2Details,\r\n    grade3Details,\r\n    grade4Details,\r\n    grade5Details,\r\n    grade6Details,\r\n    grade7Details,\r\n    grade8Details,\r\n    grade9Details,\r\n    grade10Details,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    gradeDetails,\r\n    selectedUserGrade,\r\n    showAllGradeVisible, \r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser\r\n  }\r\n};\r\n\r\nexport default Grade1Action;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport UserForm from './userDetailsForm'\r\nimport UserTable from './gradeTable'\r\nimport GradeAction from '../grade/gradeAction'\r\nimport AdvisorAction from '../grade/advisoryAction'\r\nconst { Option } = Select;\r\n\r\n\r\nconst EmployeePage = () => {\r\n\r\n  let {\r\n    selectedUserGrade,\r\n    showAllGradeVisible, \r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Student Details</Typography.Title>\r\n            }>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Full Name: </b>{selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName: null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Grade Level: </b>{JSON.parse(sessionStorage.user).gradeLevel}\r\n                  </p>\r\n                  <p>\r\n                    <b>Section: </b>{selectedUser ? selectedUser.section: null}\r\n                  </p>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName: null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber: null}\r\n                  </p>\r\n                  <b>Yr./Lvl: </b>\r\n                  <Select className=\"ml-15\" placeholder=\"Select Yr./Level\" onChange={(value)=> filterCurrentGradeUser(value) }>\r\n                    <Option value=\"1\">1</Option>\r\n                    <Option value=\"2\">2</Option>\r\n                    <Option value=\"3\">3</Option>\r\n                    <Option value=\"4\">4</Option>\r\n                    <Option value=\"5\">5</Option>\r\n                    <Option value=\"6\">6</Option>\r\n                    <Option value=\"7\">7</Option>\r\n                    <Option value=\"8\">8</Option>\r\n                    <Option value=\"9\">9</Option>\r\n                    <Option value=\"10\">10</Option>\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <UserTable details={selectedUserGrade ? selectedUserGrade: []}/>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card>   \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nconst Grade1EditForm = ({ upgradeStudent,add,update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel   }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedGrade}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         \r\n            let newValues = {\r\n               _id : values._id\r\n            };\r\n            let English = {};\r\n            let Filipino = {};\r\n            let Science = {};\r\n            let Math = {};\r\n            let MAPEH = {};\r\n            let Values = {};\r\n            if(values.English1 || values.English2 || values.English3 || values.English4) {\r\n               English = {\r\n                  firstQuarter:values.English1,\r\n                  secondQuarter:values.English2,\r\n                  thirdQuarter:values.English3,\r\n                  fourthQuarter:values.English4\r\n               }\r\n               newValues.English = English;\r\n            }\r\n            if(values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\r\n               Filipino = {\r\n                  firstQuarter:values.Filipino1,\r\n                  secondQuarter:values.Filipino2,\r\n                  thirdQuarter:values.Filipino3,\r\n                  fourthQuarter:values.Filipino4\r\n               }\r\n               newValues.Filipino = Filipino;\r\n            }\r\n            if(values.Science1 || values.Science2 || values.Science3 || values.Science4) {\r\n               Science = {\r\n                  firstQuarter:values.Science1,\r\n                  secondQuarter:values.Science2,\r\n                  thirdQuarter:values.Science3,\r\n                  fourthQuarter:values.Science4\r\n               }\r\n               newValues.Science = Science;\r\n            }\r\n            if(values.Math1 || values.Math2 || values.Math3 || values.Math4) {\r\n               Math = {\r\n                  firstQuarter:values.Math1,\r\n                  secondQuarter:values.Math2,\r\n                  thirdQuarter:values.Math3,\r\n                  fourthQuarter:values.Math4\r\n               }\r\n               newValues.Math = Math;\r\n            }\r\n            if(values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\r\n               MAPEH = {\r\n                  firstQuarter:values.MAPEH1,\r\n                  secondQuarter:values.MAPEH2,\r\n                  thirdQuarter:values.MAPEH3,\r\n                  fourthQuarter:values.MAPEH4\r\n               }\r\n               newValues.MAPEH = MAPEH;\r\n            }\r\n            if(values.Values1 || values.Values2 || values.Values3 || values.Values4) {\r\n               Values = {\r\n                  firstQuarter:values.Values1,\r\n                  secondQuarter:values.Values2,\r\n                  thirdQuarter:values.Values3,\r\n                  fourthQuarter:values.Values4\r\n               }\r\n               newValues.Values = Values;\r\n            }\r\n            update(newValues)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\" >\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student.idNumber}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <>      \r\n                    <Row gutter={16}>\r\n                     {\r\n                     (selectedTeacherAssignedGrade && selectedTeacherAssignedGrade.subjects && selectedTeacherAssignedGrade.subjects != undefined && selectedTeacherAssignedGrade.subjects[0] && selectedTeacherAssignedGrade.subjects[0].teacher && selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                     ?                      \r\n                     <Col span={12}>\r\n                     <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"English1\" defaultValue={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[0].subjectGrade.secondQuarter} name=\"English2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[0].subjectGrade.thirdQuarter} name=\"English3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[0].subjectGrade.fourthQuarter} name=\"English4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>:\r\n                     null}\r\n                  {\r\n                (selectedTeacherAssignedGrade.subjects[1] && selectedTeacherAssignedGrade.subjects[1].teacher && selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ? \r\n                     <Col span={12}>\r\n                     <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Filipino1\" defaultValue={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[1].subjectGrade.secondQuarter} name=\"Filipino2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[1].subjectGrade.thirdQuarter} name=\"Filipino3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[1].subjectGrade.fourthQuarter} name=\"Filipino4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n\r\n               </Col>\r\n                  : null}\r\n                     \r\n                  </Row>    \r\n                     <Row gutter={16}>\r\n                     {\r\n(selectedTeacherAssignedGrade && selectedTeacherAssignedGrade.subjects && selectedTeacherAssignedGrade.subjects != undefined && selectedTeacherAssignedGrade.subjects.length !==0 && selectedTeacherAssignedGrade.subjects[2] && selectedTeacherAssignedGrade.subjects[2] && selectedTeacherAssignedGrade.subjects[2].teacher && selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                     ?                      \r\n                     <Col span={12}>\r\n                     <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Science1\" defaultValue={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[2].subjectGrade.secondQuarter} name=\"Science2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[2].subjectGrade.thirdQuarter} name=\"Science3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[2].subjectGrade.fourthQuarter} name=\"Science4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>:\r\n                     null}\r\n                  {\r\n  (selectedTeacherAssignedGrade.subjects[3] && selectedTeacherAssignedGrade.subjects[3].teacher && selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ? \r\n                     <Col span={12}>\r\n                     <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Math1\" defaultValue={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[3].subjectGrade.secondQuarter} name=\"Math2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[3].subjectGrade.thirdQuarter} name=\"Math3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[3].subjectGrade.fourthQuarter} name=\"Math4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>\r\n                  : null}\r\n                     \r\n                  </Row>    \r\n                  <Row gutter={16}>\r\n                     {\r\n  (selectedTeacherAssignedGrade.subjects[4] && selectedTeacherAssignedGrade.subjects[4].teacher && selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                     ?                      \r\n                     <Col span={12}>\r\n                     <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"MAPEH1\" defaultValue={values.subjects[4].subjectGrade.firstQuarter} />\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[4].subjectGrade.secondQuarter} name=\"MAPEH2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[4].subjectGrade.thirdQuarter} name=\"MAPEH3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[4].subjectGrade.fourthQuarter} name=\"MAPEH4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>:\r\n                     null}\r\n                  {\r\n              (selectedTeacherAssignedGrade.subjects[5] && selectedTeacherAssignedGrade.subjects[5].teacher && selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ? \r\n                     <Col span={12}>\r\n                     <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"1st Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"1\"} name=\"Values1\" defaultValue={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"2nd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"2\"} defaultValue={values.subjects[5].subjectGrade.secondQuarter} name=\"Values2\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                     <Row gutter={16}>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"3rd Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"3\"} defaultValue={values.subjects[5].subjectGrade.thirdQuarter} name=\"Values3\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <Form.Item label=\"4th Q\" name=\"values\">\r\n                        <Input disabled={sessionStorage.quarter !== \"4\"} defaultValue={values.subjects[5].subjectGrade.fourthQuarter} name=\"Values4\"/>\r\n                     </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                  </Card>\r\n               </Col>\r\n                  : null}\r\n                     \r\n                  </Row>\r\n                  </>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel) \r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"English\" name=\"english\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Filipino\" name=\"filipino\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Science\" name=\"science\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Math\" name=\"math\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Values\" name=\"values\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={24}>\r\n            <Form.Item label=\"Advisor\" name=\"advisor\">\r\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import BaseService from '../../baseService';\r\nclass TeacherService extends BaseService {\r\n  constructor() {\r\n    super('teacher');\r\n  }\r\n\r\n  add = teacherObj => {\r\n    return this.axiosInstance.post('/create-teacher', teacherObj);\r\n  };\r\n\r\n  update = teacherObj => {\r\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-teacher/' + id);\r\n  };\r\n\r\n  findAllTeacher = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new TeacherService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport teacherService from '../grade/teacherService';\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState({});\r\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\r\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\r\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\r\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\r\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\r\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\r\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\r\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\r\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\r\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\r\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\r\n\r\n  const add = async (values, gradeLevel) => {\r\n    let English = await userService.findyById(values.english)\r\n    let Filipino = await userService.findyById(values.filipino)\r\n    let Science = await userService.findyById(values.science)\r\n    let Math = await userService.findyById(values.math)\r\n    let Values = await userService.findyById(values.values)\r\n    let Mapeh = await userService.findyById(values.mapeh)\r\n    let finalAddValue = {\r\n        gradeLevel : gradeLevel,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            teacher: English.data\r\n            },\r\n            {\r\n            subjectName: \"Filipino\",\r\n            teacher: Filipino.data\r\n            },\r\n            {\r\n            subjectName: \"Science\",\r\n            teacher: Science.data\r\n            },   \r\n            {\r\n            subjectName: \"Math\",\r\n            teacher: Math.data\r\n            },   \r\n            {\r\n            subjectName: \"Values\",\r\n            teacher: Values.data\r\n            },     \r\n            {\r\n            subjectName: \"Mapeh\",\r\n            teacher: Mapeh.data\r\n            },                                                    \r\n        ]\r\n    }\r\n    let response = teacherService.add(finalAddValue)\r\n    window.location.reload()\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setSelectedTeacherAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setSelectedTeacherAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setSelectedTeacherAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setSelectedTeacherAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setSelectedTeacherAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setSelectedTeacherAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setSelectedTeacherAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setSelectedTeacherAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setSelectedTeacherAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setSelectedTeacherAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideTeacher = async () => {\r\n    setShowTeacherVisible(false)\r\n  };\r\n\r\n  const showTeacher = async (gradeLevel) => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setSelectedTeacherAssgined(result[0].subjects)\r\n    } else {\r\n        setSelectedTeacherAssgined({})\r\n    }\r\n    setShowTeacherVisible(true)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    selectedTeacher,\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\n\r\nimport GradeAction from './gradeAction'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?       \r\n        <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n        }\r\n              {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 1\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                    Advisor for grade 1\r\n                  </Typography.Title>\r\n              }\r\n              width={500}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"1\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\r\n          <PlusCircleOutlined type=\"add-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                           {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\r\n          <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          < RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 2\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 2\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"2\"}/>\r\n          </Drawer>\r\n    </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade3Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                  {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n      \r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher}  gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 3\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 3\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"3\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade4Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 4\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 4\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"4\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade5Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 5\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 5\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"5\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade6Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 6\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 6\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"6\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade7Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 7\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 7\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"7\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade8Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 8\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 8\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"8\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade9Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 9\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 9\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"9\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade10Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 10\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"}/>\r\n          </Drawer>\r\n    \r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 10\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"10\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst Grade1EditForm = ({selectedOffspring }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedOffspring}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n                  {console.log(selectedOffspring)}\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>     \r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\r\n                        <Input disabled={true} name=\"gradeLevel\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>                     \r\n                  <Row gutter={16}>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                   \r\n                     <Col span={12}>\r\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                     <Col span={12}>\r\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Grade Level</b>,\r\n        dataIndex: 'gradeLevel',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport GradeForm from '../offspring/offspringForm'\r\n\r\nimport GradeAction from '../grade/gradeAction'\r\n\r\nimport OffspringTable from '../offspring/offspringTable'\r\n\r\nconst OffspringPage = () => {\r\n\r\n\r\n  let {\r\n    selectedGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    gradeDetails\r\n  } = GradeAction({});\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 12 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 12 }}>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <OffspringTable details={gradeDetails.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  \r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm selectedOffspring={selectedGrade}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default OffspringPage;\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Name</b>,\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: <b>ID Number</b>,\r\n        dataIndex: 'idNumber',\r\n     },\r\n      {\r\n         title: <b>Time In</b>,\r\n         dataIndex: 'timeIn',\r\n      },\r\n      {\r\n         title: <b>Time Out</b>,\r\n         dataIndex: 'timeOut',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('timekeeping');\r\n  }\r\n\r\n  add = timekeepingObj => {\r\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\r\n  };\r\n\r\n  update = timekeepingObj => {\r\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\r\n  };\r\n\r\n  findAllTimekeeping = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport TimekeepingService from './timeKeepingService';\r\nimport moment from 'moment';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\r\n  let [timeIn, setTimeIn] = useState(new Date());\r\n  let [timeOut, setTimeOut] = useState(new Date())\r\n\r\n  const filterUsers = async (date) => {\r\n    if(date){\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\r\n      let newArray = await result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } else {\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let newArray = await response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } \r\n\r\n  }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await TimekeepingService.findAllTimekeeping();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        name: user.student.firstName + \" \" + user.student.lastName,\r\n        idNumber: user.student.idNumber,\r\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n    }\r\n    })\r\n    setUserDetails({list: newArray});\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n}, []);\r\n\r\n\r\n  return {\r\n    userDetails,\r\n    filterUsers\r\n  }\r\n};\r\n\r\nexport default UserAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport TimekeepingTable from './timeKeepingTable'\r\nimport AttendanceAction from './AttendanceAction'\r\nconst {Option} = Select;\r\n\r\nconst TimekeepingPage = () => {\r\n    let{\r\n        userDetails  ,\r\n        filterUsers\r\n    } = AttendanceAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\r\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"January\">January</Option>\r\n          <Option value=\"Febuary\">Febuary</Option>\r\n          <Option value=\"March\">March</Option>\r\n          <Option value=\"April\">April</Option>\r\n          <Option value=\"May\">May</Option>\r\n          <Option value=\"June\">June</Option>\r\n          <Option value=\"July\">July</Option>\r\n          <Option value=\"August\">August</Option>\r\n          <Option value=\"September\">September</Option>\r\n          <Option value=\"October\">October</Option>\r\n          <Option value=\"November\">November</Option>\r\n          <Option value=\"December\">December</Option>\r\n        </Select>\r\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"1\">1</Option>\r\n          <Option value=\"2\">2</Option>\r\n          <Option value=\"3\">3</Option>\r\n          <Option value=\"4\">4</Option>\r\n          <Option value=\"5\">5</Option>\r\n          <Option value=\"6\">6</Option>\r\n          <Option value=\"7\">7</Option>\r\n          <Option value=\"8\">8</Option>\r\n          <Option value=\"9\">9</Option>\r\n          <Option value=\"10\">10</Option>\r\n          <Option value=\"11\">11</Option>\r\n          <Option value=\"12\">12</Option>\r\n          <Option value=\"13\">13</Option>\r\n          <Option value=\"14\">14</Option>\r\n          <Option value=\"15\">15</Option>\r\n          <Option value=\"16\">16</Option>\r\n          <Option value=\"17\">17</Option>\r\n          <Option value=\"18\">18</Option>\r\n          <Option value=\"19\">19</Option>\r\n          <Option value=\"20\">20</Option>\r\n          <Option value=\"21\">21</Option>\r\n          <Option value=\"22\">22</Option>\r\n          <Option value=\"23\">23</Option>\r\n          <Option value=\"24\">24</Option>\r\n          <Option value=\"25\">25</Option>\r\n          <Option value=\"26\">26</Option>\r\n          <Option value=\"27\">27</Option>\r\n          <Option value=\"28\">28</Option>\r\n          <Option value=\"29\">29</Option>\r\n          <Option value=\"30\">30</Option>\r\n          <Option value=\"31\">31</Option>\r\n        </Select>\r\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\r\n        </Col>\r\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <TimekeepingTable details={userDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default TimekeepingPage;\r\n\r\n","import React from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\n\r\nconst LoginForm = ({login}) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            username: \"\",\r\n            password: \"\"\r\n         }}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values, actions) => {\r\n             login(values)\r\n            // await login(values)\r\n            // actions.setSubmitting(false);\r\n         }}\r\n         render={\r\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\r\n               <Spin spinning={isSubmitting}>\r\n                  <Form className=\"mt-10P\">\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              USERNAME:\r\n                           </b>\r\n                           <Form.Item name=\"username\">\r\n                              <Input name=\"username\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              PASSWORD:\r\n                           </b>\r\n                           <Form.Item name=\"password\">\r\n                              <Input.Password name=\"password\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\r\n                              Login\r\n                        </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </Spin>\r\n            )}\r\n      />\r\n   );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\r\n\r\nimport '../../App.css';\r\nimport LoginForm from './loginForm';\r\nimport UserAction from '../user/userAction'\r\n\r\nconst version = process.env.REACT_APP_VERSION\r\n\r\n\r\nconst Login = () => {\r\n    let [showLogin, setShowLogin] = useState(false);\r\n    let [showContact, setShowContact] = useState(false);\r\n    let [showAboutUs, setShowAboutUs] = useState(false);\r\n    let [showHome, setShowHome] = useState(true);\r\n    const {Content} = Layout;\r\n    let {\r\n        login,\r\n        loginCounter\r\n      } = UserAction({});\r\n    \r\n    const loginUser = async (credentials) => {\r\n        login(credentials);\r\n    }\r\n\r\n    const loginFunction = async () => {\r\n        setShowHome(false)\r\n        setShowLogin(true)\r\n    }\r\n\r\n    const contactFunction = async () => {\r\n        setShowHome(false)\r\n        setShowContact(true)\r\n    }\r\n\r\n    const aboutUsFunction = async () => {\r\n        setShowHome(false)\r\n        setShowAboutUs(true)\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"login\">\r\n            {/* Landing Page */}\r\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\r\n                <Row className=\"center\">\r\n                    <Col>\r\n                        <Button className=\"btn-home mr-10\">HOME</Button>\r\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\r\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\r\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Content> : null}\r\n            \r\n\r\n            {/* Login Page */}\r\n            {showLogin \r\n            \r\n            ?             <Content className=\"contentLogin mt-5P\">\r\n            <div className=\"center mb-15\">\r\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\r\n            </div>\r\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\r\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\r\n            <Row className=\"mt-10 center\">\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\r\n                    <LoginForm login={loginUser}/>\r\n                </Col>\r\n            </Row>\r\n        </Content> : null}\r\n\r\n\r\n             {/* Contact Page */}\r\n            {showContact ?            <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center mb-40\">\r\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    <b>Telephone Number:</b> 8 245 4148<br/>\r\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\r\n                    <b>Email Address: </b>\r\n                    <u className=\"blue\">\r\n                        admission.snss@gmail.com\r\n                    </u>\r\n                </Typography>\r\n            </Content>:null}\r\n \r\n\r\n\r\n            {/* About Page */}\r\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center h-70 mb-35\">\r\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\r\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\r\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\r\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\r\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\r\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \r\n                </Typography>\r\n            </Content> : null}\r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\r\n\r\nimport {\r\n    UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\r\n  } from '@ant-design/icons';\r\n  const { SubMenu } = Menu;\r\nconst SiderMenu = ({theme, collapsed}) => {\r\n    return ( \r\n        <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 1 Management</span>\r\n                    <Link to={'/grade1'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 2 Management</span>\r\n                    <Link to={'/grade2'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 3 Management</span>\r\n                    <Link to={'/grade3'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 4 Management</span>\r\n                    <Link to={'/grade4'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 5 Management</span>\r\n                    <Link to={'/grade5'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 6 Management</span>\r\n                    <Link to={'/grade6'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 7 Management</span>\r\n                    <Link to={'/grade7'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 8 Management</span>\r\n                    <Link to={'/grade8'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 9 Management</span>\r\n                    <Link to={'/grade9'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 10 Management</span>\r\n                    <Link to={'/grade10'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n           \r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"dashboard\" className=\"menus\">\r\n                    <DashboardOutlined />\r\n                    <span className=\"fs-13\">Dashboard</span>\r\n                    <Link to={'/dashboard'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n           \r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Admin</span>\r\n                    <Link to={'/admin'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Parent</span>\r\n                    <Link to={'/parent'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Student</span>\r\n                    <Link to={'/student'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Teacher</span>\r\n                    <Link to={'/teacher'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"timekeeping\" className=\"menus\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Attendance</span>\r\n                    <Link to={'/timekeeping'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n                {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?  \r\n                <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Grade</span>\r\n                    <Link to={'/offspring'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"auditTrail\" className=\"menus\">\r\n                   <AuditOutlined />\r\n                    <span className=\"fs-13\">Audit Trail</span>\r\n                    <Link to={'/auditTrail'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n    \r\n                {JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                    <Menu.Item key=\"advisoryClass\" className=\"menus\">\r\n                        <UserOutlined/>\r\n                        <span className=\"fs-13\">Advisory Class</span>\r\n                        <Link to={'/advisoryclass'} className=\"nav-link\" />\r\n                    </Menu.Item>  :\r\n                null}\r\n            </Menu>\r\n    );\r\n}\r\n \r\nexport default SiderMenu;\r\n","import {createContext} from 'react';\r\n\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\r\nimport {  Menu } from 'antd';\r\nimport { UserContext } from './userContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    LogoutOutlined,\r\n    SettingOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst UserMenu = () => {\r\n\r\n   const { setLoggedUser } = useContext(UserContext);\r\n\r\n   const logout = async () => {\r\n    sessionStorage.removeItem('user');\r\n    window.location.reload(false);\r\n    //   setLoggedUser(null);\r\n    //   sessionStorage.removeItem('token');\r\n    //   sessionStorage.removeItem('user');\r\n   }\r\n\r\n   return (\r\n      <Menu className=\"mt-20\">\r\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\r\n            <LogoutOutlined />Logout\r\n         </Menu.Item>\r\n         <Menu.Item className=\"dropdown-item\">\r\n            <SettingOutlined /> Settings\r\n            <Link to={'/settings'} className=\"nav-link\" />\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AuditTrailTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: 'Name',\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Activity',\r\n        dataIndex: 'activity',\r\n     },\r\n      {\r\n         title: 'Date',\r\n         dataIndex: 'date',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\r\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\r\n\r\n    const addAudit = async values => {\r\n    let finalAudit = {\r\n        user : values.user,\r\n        activity: values.activity,\r\n        date: values.date,\r\n    }\r\n    let response = auditTrailService.add(finalAudit)\r\n    };\r\n    \r\n    const getListOfAudit = async () => {\r\n      let response = await auditTrailService.findAllAudit();\r\n      let newArray = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format('MMMM Do YYYY'),\r\n          activity: user.activity,\r\n        }\r\n      })\r\n      setAuditTrailDetails({list: newArray})\r\n    };\r\n\r\n    const filterAudit = async (date) => {\r\n      let datas = [];\r\n      if (date) {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = await response.data.filter(\r\n          (user) =>\r\n            moment(user.date).format(\"MMMM Do YYYY\") ===\r\n            moment(date).format(\"MMMM Do YYYY\")\r\n        );\r\n      } else {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = response.data;\r\n      };\r\n\r\n      let newArray = await datas.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\r\n          activity: user.activity\r\n        };\r\n      });\r\n\r\n    setAuditTrailDetails({ list: newArray });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getListOfAudit();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    addAudit,\r\n    auditTrailDetails,\r\n    filterAudit\r\n  }\r\n};\r\n\r\nexport default AuditTrailAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport AuditTrailTable from './auditTrailTable'\r\nimport AuditTrailAction from './auditTrailAction'\r\nconst {Option} = Select;\r\n\r\nconst AuditTrailPage = () => {\r\n  let { auditTrailDetails, filterAudit } = AuditTrailAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n\t<Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">\r\n            Audit Trail\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n          <DatePicker\r\n            className=\"w-100P\"\r\n            placeholder={\"Input Date Here\"}\r\n            onChange={(date, dateString) => filterAudit(date)}\r\n          />\r\n        </Col>\r\n        {/* <Col lg={{ span: 24 }}>\r\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\r\n          </Button>\r\n        </Col> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <AuditTrailTable details={auditTrailDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default AuditTrailPage;\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport User from \"./components/user/user.js\";\r\nimport Student from \"./components/user/student.js\";\r\nimport Parent from \"./components/user/parent.js\";\r\nimport Teacher from \"./components/user/teacher.js\";\r\nimport UserSetting from \"./components/user/userSetting.js\";\r\nimport UserDetail from \"./components/userDetails/userDetails.js\";\r\nimport Grade1 from \"./components/grade/grade1\";\r\nimport Grade2 from \"./components/grade/grade2\";\r\nimport Grade3 from \"./components/grade/grade3\";\r\nimport Grade4 from \"./components/grade/grade4\";\r\nimport Grade5 from \"./components/grade/grade5\";\r\nimport Grade6 from \"./components/grade/grade6\";\r\nimport Grade7 from \"./components/grade/grade7\";\r\nimport Grade8 from \"./components/grade/grade8\";\r\nimport Grade9 from \"./components/grade/grade9\";\r\nimport Grade10 from \"./components/grade/grade10\";\r\nimport Offspring from \"./components/offspring/offspring.js\";\r\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\r\nimport QuarterService from \"../src/components/quarter/quarterService\"\r\n// import Item from \"./components/item/item.js\";\r\nimport Login from \"./components/login/login.js\";\r\nimport SiderMenu from \"./components/siderMenu\"\r\nimport UserMenu from \"./components/userMenu\"\r\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\r\n\r\nimport { UserContext } from './components/userContext'\r\n\r\nconst { Option } = Select;\r\n\r\nconst renderStudents = isAdvisory => {\r\n  return (<Student />);\r\n};\r\n\r\nconst App = () => {\r\n  const { Content, Sider, Header } = Layout;\r\n  let [loggedUser, setLoggedUser] = useState(null);\r\n  let [collapsed, setCollapsed] = useState(false);\r\n  let [theme] = useState(\"dark\");\r\n\r\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.user) {\r\n      setLoggedUser(JSON.parse(sessionStorage.user));\r\n    }\r\n  }, []);\r\n\r\n  const onChangeFunction = async (value) => {\r\n    // console.log(value)\r\n    let response = await QuarterService.update({_id: sessionStorage._id, quarter : value})\r\n    sessionStorage.setItem(\"quarter\", value)\r\n    window.location.reload(false)\r\n    // console.log(sessionStorage._id)\r\n    // console.log(sessionStorage.quarter)\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      {\r\n        loggedUser ?\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <BrowserRouter>\r\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\r\n                  <Sider className=\"sider\" collapsed={collapsed}>\r\n                    <Header className=\"sideBarHeader text-white\">\r\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\r\n                    </Header>\r\n                    <Content className=\"mt-20\">\r\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\r\n                    </Content>\r\n                  </Sider>\r\n                : null}\r\n                <Layout>\r\n                  <Header className=\"bg-white\">\r\n                    <a href onClick={() => {\r\n                      setCollapsed(!collapsed)\r\n                    }}>\r\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\r\n                    </a>\r\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ?                     <span className=\"left\">\r\n                      Quarter: &nbsp;\r\n                    <Select onChange={\r\n                      (value)=> \r\n                      onChangeFunction(value)\r\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\r\n                              <Option value=\"1\">1</Option>\r\n                              <Option value=\"2\">2</Option>\r\n                              <Option value=\"3\">3</Option>\r\n                              <Option value=\"4\">4</Option>\r\n                           </Select>\r\n                    </span> : null}\r\n\r\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                      <span>\r\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\"/>\r\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\r\n                      </span>\r\n                    : null}\r\n\r\n\r\n                    <span className=\"right\">\r\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\r\n                      <Dropdown overlay={<UserMenu />}>\r\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\r\n                      </Dropdown>\r\n                    </span>\r\n                  </Header>\r\n                  <Layout>\r\n                    <Content className=\"pt-30 pb-30\">\r\n                      <Switch>\r\n                      {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/dashboard\"\r\n                       /> :   \r\n                       JSON.parse(sessionStorage.user).role === \"Parent\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/offspring\"\r\n                       /> :                        JSON.parse(sessionStorage.user).role === \"Teacher\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/grade1\"\r\n                       />: <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/\"\r\n                       />}\r\n                            <Route path=\"/settings\" component={UserSetting} />\r\n                            <Route path=\"/admin\" component={User} />\r\n                            <Route path=\"/student\" component={ Student } />\r\n                            <Route path=\"/advisoryclass\" render={(props) => { return (<Student isAdvisory=\"true\"/>)}} />\r\n                            <Route path=\"/parent\" component={Parent} />\r\n                            <Route path=\"/teacher\" component={Teacher} />\r\n                            <Route path=\"/dashboard\" component={Dashboard}/>\r\n                            <Route path=\"/grade1\" component={Grade1} />\r\n                            <Route path=\"/grade2\" component={Grade2} />\r\n                            <Route path=\"/grade3\" component={Grade3} />\r\n                            <Route path=\"/grade4\" component={Grade4} />\r\n                            <Route path=\"/grade5\" component={Grade5} />\r\n                            <Route path=\"/grade6\" component={Grade6} />\r\n                            <Route path=\"/grade7\" component={Grade7} />\r\n                            <Route path=\"/grade8\" component={Grade8} />\r\n                            <Route path=\"/grade9\" component={Grade9} />\r\n                            <Route path=\"/grade10\" component={Grade10} />\r\n                            <Route path=\"/offspring\" component={Offspring} />\r\n                            <Route path=\"/timekeeping\" component={Timekeeping}/>\r\n                            <Route path=\"/auditTrail\" component={AuditTrail}/>\r\n                            <Route path=\"/\" component={UserDetail} />\r\n                      </Switch>\r\n                    </Content>\r\n                  </Layout>\r\n                </Layout>\r\n              </BrowserRouter>\r\n            </Layout>\r\n            <Layout>\r\n            </Layout>\r\n          </BrowserRouter>\r\n                    :\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Redirect from=\"*\" to=\"/login\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n          }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}