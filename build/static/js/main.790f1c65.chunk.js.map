{"version":3,"sources":["config.js","components/modelTemplate/observedValues.js","constants/clearance.js","components/modelTemplate/schoolDay.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/userDetails/attendanceService.js","components/userDetails/attendanceAction.js","components/dashboard/dashboard.js","components/user/additionalService.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/auditTrail/auditTrailService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/grade/advisoryService.js","components/grade/advisoryAction.js","components/user/imageUpload.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/user/userSetting.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/clearance/clearanceService.js","components/grade/gradeAction.js","components/userDetails/attendanceTable.js","components/shared/customTable.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/shared/editableTable.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/grade/teacherAction.js","components/grade/advisoryGrades.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","components/clearance/clearanceAction.js","components/clearance/clearance.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","DEFINITIONS","Makadiyos","a","b","Makatao","Makakalikasan","Makabansa","OBSERVED_VALUES","values","statement","key","id","q1","q2","q3","q4","dropdownList","isSubField","isEditable","DESCRIPTOR_TABLE","headers","title","field","body","descriptors","scale","remarks","MARKING_TABLE","marking","rating","OBSERVED_VALUES_HEADER","dataIndex","width","withCondition","value","editable","CLEARANCE_HEADERS","CLEARANCE_DROPDOWN","SchoolDaysTmp","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","userObj","update","_id","findAllUser","findyById","getGenIdNumber","role","updatePassword","obj","updateProfileImg","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","userService","response","parent","data","filter","user","student","teacher","length","useEffect","getAttendance","getSchooldays","saveSchoolDays","AttendanceAction","attendances","setattendances","schoolDays","setSchoolDays","attendanceDatas","AttendanceService","tag","attendedDays","absences","push","getSchoolDays","console","log","DashboardPage","React","visible","setVisible","Form","useForm","form","schoolDaysObj","JSON","parse","stringify","DashboardAtion","onFinish","Object","total","map","monthDays","parseInt","reduce","newValues","assign","setTimeout","className","gutter","xs","span","sm","md","lg","bordered","style","marginTop","type","onClick","marginLeft","marginBottom","onCancel","footer","name","initialValues","children","keys","month","Item","label","placeholder","getFields","textAlign","htmlType","margin","resetFields","getAdvisory","getAdvisoryStudents","level","uploadProfile","file","Option","Select","UserEditForm","selectedUser","selectedParent","isNewData","idNumber","AdditionalService","getId","loading","enableReinitialize","onSubmit","render","touched","setFieldValue","spinning","delay","disabled","sessionStorage","firstName","lastName","CheckCircleFilled","gradesObj","findAllGrades","addUpdateObservedValues","valuesObj","quarterObj","findAllQuarter","auditTrailObj","findAllAudit","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","loggedDate","toISOString","details","auditTrailService","setItem","filterStudent","newArray","action","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","profileImgSrc","loadParent","loadAdmin","getNewGenId","newArrayCredentials","buildStudentList","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","columns","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","EmployeePage","Title","e","target","PlusCircleOutlined","onClose","bodyStyle","paddingBottom","advisoryObj","findAllAdvisory","getAvailableAdvisors","deleteAdvisory","TeacherAction","setSelectedTeacher","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","studentAdvisor","setStudentAdvisor","advisoryStudents","setAdvisoryStudents","availableAdvisors","setAvailableAdvisors","addAdvisor","advisor","advisorTeacher","finalAddValue","advisoryService","advisors","getListOfTeacher","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","loadAdvisoryStudents","userData","advisory","students","UploadImageAction","image","setImage","profileSrc","setProfileSrc","uploadSrc","setUploadSrc","processing","setProcessing","handleChange","input","files","reader","FileReader","onloadend","readAsDataURL","saveUpload","formData","FormData","append","imageUrl","secure_url","setStudentProfile","imgSrc","params","UserService","isAdvisory","AdvisoryAction","uploadButton","height","border","float","LoadingOutlined","PlusOutlined","marginRight","src","alt","updates","icon","UploadOutlined","Settings","newPassword","confirmPassword","changePassword","message","error","currentPassword","success","offset","align","GradeTable","grade","props","color","text","pagination","addUpdateClearance","getClearance","renderUnPaidNotif","studentObj","isParent","person","notification","info","description","placement","Grade1Action","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","advisoryGrades","setAdvisoryGrades","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","finalGrade","overAllGrade","setOverAllGrade","observedValues","setObservedValues","upgradeStudent","userCurrentGrade","currentUser","allStudent","result1","currentStudent","toString","editGrade","English","newEnglishGrade","recommendedGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","Values","newValuesGrade","subjectDummy","Music","subjectIndex","findIndex","subject","subjectGrades","updatedGrades","constructSubjectGrades","newSubject","Art","PE","Health","showGrade","loadGrade","getCurrentGradeUser","filterCurrentGradeUser","gradeRec","record","gradeLevelList","unClearedQuarters","clientUser","ClearanceService","responseClearances","clearance","find","item","entries","forEach","includes","buidSubjectRow","mapehIndex","topic","splice","buildObservedValues","buildOverallRemarks","forceHide","finalGradesholder","FinalGrade","average","toFixed","valuesDatas","observedValuesTmp","grades","currentGradeUser","hiddenQuarters","inComplete","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","Remarks","loadGrades","finalOffspring","offspring","off","recordIndex","loadStudentGradesPerLevel","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","loadAdvisoryGrades","paramsObj","AttendanceTable","CustomTable","head","GradeAction","loadAttendance","filterChild","child","Grade1EditForm","Collapse","Panel","selectedTeacherAssignedGrade","isAdviser","userRole","hasUpdate","updatesHolder","autoFillGrade","isDefault","quarterNum","activeQuarter","index","dafaultVal","holder","inputValues","MAPEH","English1","English2","English3","English4","Filipino1","Filipino2","Filipino3","Filipino4","Science1","Science2","Science3","Science4","Math1","Math2","Math3","Math4","MAPEH1","MAPEH2","MAPEH3","MAPEH4","Values1","Values2","Values3","Values4","Music1","Music2","Music3","Music4","Art1","Art2","Art3","Art4","PE1","PE2","PE3","PE4","Health1","Health2","Health3","Health4","undefined","defaultValue","Fragment","TeacherForm","selectedTeacherAssgined","AdvisorAction","ghost","DeleteOutlined","EditableCell","editing","inputType","restProps","renderMarkings","mark","minWidth","maxWidth","inputNode","EditableTable","setData","editingKey","setEditingKey","isEditing","cancel","save","validateFields","row","newData","operationColumn","_","href","onConfirm","Link","setFieldsValue","mergedColumns","concat","col","onCell","component","components","cell","rowClassName","teacherObj","findAllTeacher","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","hideTeacher","showTeacher","AdvisoryGrades","addGrade","GradePage","RiseOutlined","TimeKeepingTable","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","dateString","LoginForm","actions","errors","isSubmitting","Password","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","SubMenu","Menu","SiderMenu","theme","collapsed","mode","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","SettingOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","filterAudit","datas","AuditTrailPage","filterRole","document","getElementById","filterDate","ClearanceAction","levelClearance","setLevelClearance","levelToEdit","setLevelToEdit","getIndividualRec","responseGradeRecords","clearanceService","responseClearance","clearanceData","studentName","addUpdateLvlClearance","ClearancePage","levels","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","overlay","Text","exact","from","path","UserSetting","User","Student","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Timekeeping","AuditTrail","Clearance","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.790f1c65.chunk.js","sourcesContent":["/**\r\n * declare all configurations in here\r\n */\r\n\r\n//declare as LOCAL for local and PRODUCTION for production\r\nconst ENVIRONMENT = 'PRODUCTION';\r\n\r\nconst LOCAL_BE = 'http://localhost:14000';\r\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\r\n\r\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE };","const DEFINITIONS = {\r\n  Makadiyos: {\r\n    a: `Expres ones's spiritual beliefs while respecting the spriritual beleiefs of others.`,\r\n    b: `Shows adherence to ethical principles by upholding truth`\r\n  },\r\n  Makatao: {\r\n    a: `Is sensitive to individual, social, and cultural differences`,\r\n    b: `Demonstrates contributions toward solidarity`\r\n  },\r\n  Makakalikasan: {\r\n    a: `Cares for the environment and utilizes resources wisely, and economically`\r\n  },\r\n  Makabansa: {\r\n    a: `Demonstrates pride in being a Filipino; exercises the rights and responsibilities of Filipino citizen`,\r\n    b: `Demonstrates appropriate behavior in carrying out activities in the school, community, and country`\r\n  }\r\n};\r\n\r\nconst OBSERVED_VALUES_HEADER = [\r\n  {\r\n    title: 'Core Values',\r\n    field: 'values',\r\n    dataIndex: 'values'\r\n  },\r\n  {\r\n    title: 'Behavior Statements',\r\n    field: 'statement',\r\n    dataIndex: 'statement',\r\n    width: '35%'\r\n  },\r\n  {\r\n    title: 'Q1',\r\n    field: 'q1',\r\n    dataIndex: 'q1', \r\n    withCondition: (value) => { if (value === 'NO') return 'red'},\r\n    isSubField: false,\r\n    editable: true\r\n  },\r\n  {\r\n    title: 'Q2',\r\n    field: 'q2',\r\n    dataIndex: 'q2',\r\n    withCondition: (value) => { if (value === 'NO') return 'red'},\r\n    isSubField: false,\r\n    editable: true\r\n  },\r\n  {\r\n    title: 'Q3',\r\n    field: 'q3',\r\n    dataIndex: 'q3',\r\n    withCondition: (value) => { if (value === 'NO') return 'red'},\r\n    isSubField: false,\r\n    editable: true\r\n  },\r\n  {\r\n    title: 'Q4',\r\n    field: 'q4',\r\n    dataIndex: 'q4',\r\n    withCondition: (value) => { if (value === 'NO') return 'red'},\r\n    isSubField: false,\r\n    editable: true\r\n  }\r\n]\r\n\r\nlet OBSERVED_VALUES = [\r\n  {\r\n    values: '1. Makadiyos',\r\n    statement: DEFINITIONS.Makadiyos.a,\r\n    key: 'Makadiyos.a',\r\n    id: 'Makadiyos.a',\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: '',\r\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\r\n  },\r\n  {\r\n    values: '',\r\n    statement: DEFINITIONS.Makadiyos.b,\r\n    key: 'Makadiyos.b',\r\n    id: 'Makadiyos.b',\r\n    isSubField: true,\r\n    isEditable: true,\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: '',\r\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\r\n  },\r\n  {\r\n    values: '2. Makatao',\r\n    statement: DEFINITIONS.Makatao.a,\r\n    key: 'Makatao.a',\r\n    id: 'Makatao.a',\r\n    isSubField: false,\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: '',\r\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\r\n  },\r\n  {\r\n    values: '',\r\n    statement: DEFINITIONS.Makatao.b,\r\n    key: 'Makatao.b',\r\n    id: 'Makatao.b',\r\n    isSubField: true,\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: '',\r\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\r\n  },\r\n  {\r\n    values: '3. Makakalikasan',\r\n    statement: DEFINITIONS.Makakalikasan.a,\r\n    key: 'Makakalikasan.a',\r\n    id: 'Makakalikasan.a',\r\n    isSubField: false,\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: '',\r\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\r\n  },\r\n  {\r\n    values: '4. Makabansa',\r\n    statement: DEFINITIONS.Makabansa.a,\r\n    key: 'Makabansa.a',\r\n    id: 'Makabansa.a',\r\n    isSubField: false,\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: '',\r\n    dropdownList: ['AO', 'SO', 'RO', 'NO']\r\n  },\r\n  {\r\n    values: '',\r\n    statement: DEFINITIONS.Makabansa.a,\r\n    key: 'Makabansa.b',\r\n    id: 'Makabansa.b',\r\n    isSubField: false,\r\n    q1: '',\r\n    q2: '',\r\n    q3: '',\r\n    q4: ''\r\n  }\r\n];\r\n\r\nconst DESCRIPTOR_TABLE = {\r\n  headers: [\r\n    {\r\n      title: 'Descriptors',\r\n      field: 'descriptors'\r\n    },\r\n    {\r\n      title: 'Grading Scale',\r\n      field: 'scale',\r\n    },\r\n    {\r\n      title: 'Remarks',\r\n      field: 'remarks'\r\n    }\r\n  ],\r\n\r\n  body: [\r\n    {\r\n      key: 'Outstanding_DT',\r\n      id: 'Outstanding_DT',\r\n      descriptors: 'Outstanding',\r\n      scale: '90-100',\r\n      remarks: 'Passed'\r\n    },\r\n    {\r\n      key: 'Very_Satisfactory_DT',\r\n      id: 'Very_Satisfactory_DT',\r\n      descriptors: 'Very Satisfactory',\r\n      scale: '85-89',\r\n      remarks: 'Passed'\r\n    },\r\n    {\r\n      key: 'Satisfactory_DT',\r\n      id: 'Satisfactory_DT',\r\n      descriptors: 'Satisfactory',\r\n      scale: '80-84',\r\n      remarks: 'Passed'\r\n    },\r\n    {\r\n      key: 'Fairly_Satisfactory_DT',\r\n      id: 'Fairly_Satisfactory_DT',\r\n      descriptors: 'Fairly Satisfactory',\r\n      scale: '75-79',\r\n      remarks: 'Passed'\r\n    },\r\n    {\r\n      key: 'Did_Not_Meet_DT',\r\n      id: 'Did_Not_Meet_DT',\r\n      descriptors: 'Did Not Meet Expectations',\r\n      scale: 'Below 75',\r\n      remarks: 'Failed'\r\n    }\r\n  ]\r\n};\r\n\r\nconst MARKING_TABLE = {\r\n  headers: [\r\n    {\r\n      title: 'Marking',\r\n      field: 'marking'\r\n    }, {\r\n      title: 'Non-Numerical Rating',\r\n      field: 'rating'\r\n    }\r\n  ],\r\n  body: [\r\n    {\r\n      key:'AO_MT',\r\n      id: 'AO_MT',\r\n      marking: 'AO',\r\n      rating: 'Always Observed'\r\n    },\r\n    {\r\n      key:'SO_MT',\r\n      id: 'SO_MT',\r\n      marking: 'SO',\r\n      rating: 'Sometimes Observed'\r\n    },\r\n    {\r\n      key:'RO_MT',\r\n      id: 'RO_MT',\r\n      marking: 'RO',\r\n      rating: 'Rarely Observed'\r\n    },\r\n    {\r\n      key:'NO_MT',\r\n      id: 'NO_MT',\r\n      marking: 'NO',\r\n      rating: 'Not Observed'\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nmodule.exports = { \r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  DEFINITIONS,\r\n  OBSERVED_VALUES_HEADER,\r\n  OBSERVED_VALUES\r\n};","const CLEARANCE_DROPDOWN = [\r\n  '',\r\n  'pending',\r\n  'complete'\r\n]\r\n\r\nlet CLEARANCE_HEADERS = [\r\n  {\r\n    title: 'Student Name',\r\n    field: 'studentName',\r\n    dataIndex: 'studentName',\r\n    width: '35%'\r\n  },\r\n  {\r\n    title: 'First Quarter',\r\n    field: 'firstQuarter',\r\n    dataIndex: 'firstQuarter',\r\n    editable: true\r\n  },\r\n  {\r\n    title: 'Second Quarter',\r\n    field: 'secondQuarter',\r\n    dataIndex: 'secondQuarter',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Third Quarter',\r\n    field: 'thirdQuarter',\r\n    dataIndex: 'thirdQuarter',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Fourth Quarter',\r\n    field: 'fouthQuarter',\r\n    dataIndex: 'fourthQuarter',\r\n    editable: true,\r\n  }\r\n];\r\n\r\n\r\nmodule.exports = { CLEARANCE_HEADERS, CLEARANCE_DROPDOWN };","let SchoolDaysTmp = {\r\n  Jan: 0,\r\n  Feb: 0,\r\n  Mar: 0,\r\n  Apr: 0,\r\n  May: 0,\r\n  Jun: 0,\r\n  Jul: 0,\r\n  Aug: 0,\r\n  Sep: 0,\r\n  Oct: 0,\r\n  Nov: 0,\r\n  Dec: 0\r\n};\r\n\r\nmodule.exports = { SchoolDaysTmp };","import axios from 'axios';\r\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\r\nclass BaseService {\r\n  constructor(moduleUrl) {\r\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\r\n      PRODUCTION_BE + \"/\" + moduleUrl :\r\n      LOCAL_BE + \"/\" + moduleUrl;\r\n    this.axiosInstance = axios.create({\r\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\r\n        PRODUCTION_BE + \"/\" + moduleUrl :\r\n        LOCAL_BE + \"/\" + moduleUrl\r\n    })\r\n    \r\n    // this.axiosInstance.interceptors.request.use(function (config) {\r\n    //   const token = sessionStorage.getItem('token');\r\n    //   config.headers[\"x-authorization\"] = token;\r\n    //   return config;\r\n    // });\r\n  }\r\n\r\n  edit = newObj => {\r\n    return this.axiosInstance.put('', newObj);\r\n  };\r\n\r\n  add = newObj => {\r\n    return this.axiosInstance.post('', newObj);\r\n  };\r\n\r\n  getById = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  delete = crudId => {\r\n    return this.axiosInstance.delete('/' + crudId);\r\n  };\r\n  softDelete = crudId => {\r\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\r\n  };\r\n}\r\nexport default BaseService;\r\n","import BaseService from '../../baseService';\r\nclass UserService extends BaseService {\r\n  constructor() {\r\n    super('user');\r\n  }\r\n\r\n  add = userObj => {\r\n    return this.axiosInstance.post('/create-user', userObj);\r\n  };\r\n\r\n  update = userObj => {\r\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\r\n  };\r\n\r\n  findAllUser = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-user/' + id);\r\n  };\r\n\r\n  getGenIdNumber = (role) => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  updatePassword = (obj) => {\r\n    return this.axiosInstance.post('/update-password', obj);\r\n  };\r\n  \r\n  updateProfileImg = (obj) => {\r\n    return this.axiosInstance.post('/update-profile-img', obj);\r\n  };\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( \r\n      {numberOfStudents : 0, \r\n      numberOfTeachers: 0,\r\n      numberOfParents : 0}\r\n      );\r\n\r\n  const getListOfUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let parent = response.data.filter(user => user.role === \"Parent\");\r\n    let student = response.data.filter(user => user.role === \"Student\");\r\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\r\n    setUserDetails({\r\n        numberOfParents: parent.length,\r\n        numberOfStudents : student.length, \r\n        numberOfTeachers: teacher.length\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfUsers();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    userDetails\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import BaseService from '../../baseService';\r\nclass AttendanceService extends BaseService {\r\n  constructor() {\r\n    super('attendance');\r\n  }\r\n\r\n  getAttendance = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  getSchooldays = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  saveSchoolDays = obj => {\r\n    return this.axiosInstance.post('/attendance-table-days', obj)\r\n  };\r\n}\r\n\r\nexport default new AttendanceService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport AttendanceService from './attendanceService';\r\n\r\nconst AttendanceAction = () => {\r\n\r\n  let [ attendances, setattendances ] = useState([]);\r\n  let [ schoolDays, setSchoolDays ] = useState({});\r\n\r\n  const getAttendance = async (id) => {\r\n    let attendanceDatas = [];\r\n    let response = await AttendanceService.getAttendance(id);\r\n    let schoolDays = response.data.schoolDays;\r\n    schoolDays.key = 'schoolDays123';\r\n    schoolDays.id = 'schoolDays123';\r\n    schoolDays.tag = \"No. of School Days\";\r\n    let attendedDays = response.data.attendedDays;\r\n    attendedDays.key = 'attendedDays1123';\r\n    attendedDays.id = 'attendedDays1123';\r\n    attendedDays.tag= \"No. of School Days Present\";\r\n    let absences = response.data.absences;\r\n    absences.key = 'absences1123';\r\n    absences.id = 'absences1123';\r\n    absences.tag = 'No. of Days Absent';\r\n    attendanceDatas.push(schoolDays);\r\n    attendanceDatas.push(attendedDays);\r\n    attendanceDatas.push(absences);\r\n\r\n    setattendances(attendanceDatas);\r\n    return attendanceDatas;\r\n  };\r\n\r\n  const getSchoolDays = async () => {\r\n    let response = await AttendanceService.getSchooldays();\r\n    setSchoolDays(response.data[0]);\r\n    return response;\r\n  };\r\n\r\n\r\n  const saveSchoolDays = async obj => {\r\n    let response = await AttendanceService.saveSchoolDays(obj);\r\n    console.log(response);\r\n  };  \r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return {\r\n    getAttendance,\r\n    attendances,\r\n    getSchoolDays,\r\n    schoolDays,\r\n    saveSchoolDays\r\n  }\r\n};\r\n\r\nexport default AttendanceAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Modal, Form, Input, message } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport DashboardAtion from \"../dashboard/dashboardAction\";\r\nimport { SchoolDaysTmp } from '../modelTemplate/schoolDay';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst DashboardPage = () => {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [form] = Form.useForm();\r\n  const { getSchoolDays, schoolDays, saveSchoolDays } = AttendanceAction();\r\n  let schoolDaysObj = JSON.parse(JSON.stringify(SchoolDaysTmp));\r\n\r\n  getSchoolDays();\r\n\r\n  const loadSchoolDays = () => { \r\n    let daysOfSchool = (schoolDays) ?\r\n      Object.assign(schoolDaysObj, schoolDays) :\r\n      schoolDaysObj;\r\n\r\n      return daysOfSchool;\r\n  }; \r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  let {\r\n    userDetails\r\n  } = DashboardAtion({});\r\n\r\n\r\n  const getFields = () => {\r\n    const count = 12;\r\n    const children = [];\r\n\r\n    Object.keys(SchoolDaysTmp).map((month, key)=> {\r\n      children.push(\r\n        <Col span={8} key={key}>\r\n          <Form.Item\r\n            name={month}\r\n            label={month}\r\n          >\r\n            <Input placeholder=\"\"/>\r\n          </Form.Item>\r\n        </Col>,\r\n      );\r\n    });\r\n\r\n    return children;\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Received values of form: ', values);\r\n\r\n    if (Object.values(values).length > 0) {\r\n      let total = Object.values(values).map(monthDays => { \r\n        return parseInt(monthDays)\r\n      }).reduce((a,b) => a + b, 0);\r\n      \r\n      let newValues = Object.assign(values, { total: total });\r\n      console.log(newValues);\r\n\r\n      await saveSchoolDays(newValues);\r\n      setTimeout(() => {setVisible(false)}, 2000);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      <Row gutter={16}>\r\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\r\n          <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfStudents}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfParents}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfTeachers}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }} >\r\n          <Card title=\"School Days\" bordered={false} style={{ width: '98%', marginTop: '20px' }}>\r\n            <Button type=\"primary\" onClick={showModal} style={{ marginLeft: '10px', marginBottom: '5px', marginTop: '5px' }}>\r\n              Input School Days\r\n            </Button>\r\n            <Modal\r\n              title=\"School Days\"\r\n              visible={visible}\r\n              onCancel={handleCancel}\r\n              footer={null}\r\n            >\r\n              <Form\r\n                form={form}\r\n                name=\"advanced_search\"\r\n                className=\"ant-advanced-search-form\"\r\n                onFinish={onFinish}\r\n                initialValues={loadSchoolDays()}\r\n              >\r\n                <Row gutter={24}>{getFields()}</Row>\r\n                <Row>\r\n                  <Col span={24} style={{textAlign: 'center'}} >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      style={{ margin: '0 8px'}}\r\n                      onClick={() => {\r\n                        form.resetFields();\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Modal>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdditionalService extends BaseService {\r\n  constructor() {\r\n    super('');\r\n  };\r\n\r\n  getGenIdNumber = role => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  getAdvisory = teacher => {\r\n    return this.axiosInstance.post('/teacher-advisory', teacher);\r\n  };\r\n\r\n  getAdvisoryStudents = level => {\r\n    return this.axiosInstance.get('/advisory-students/' + level);\r\n  };\r\n\r\n  uploadProfile = file => {\r\n    return this.axiosInstance.post('/upload-profile', file);\r\n  };\r\n\r\n}\r\n\r\nexport default new AdditionalService();\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nimport AdditionalService from './additionalService';\r\nconst { Option } = Select;\r\n\r\nconst UserEditForm = ({ add, update, selectedUser, selectedParent, role, isNewData = true }) => {\r\n\r\n  let getId = async role => {\r\n    if (selectedUser.idNumber) return;\r\n\r\n    let response = await AdditionalService.getGenIdNumber(role);\r\n    selectedUser.idNumber = response.data;\r\n  };\r\n\r\n  let newGenId = '';\r\n\r\n  if (isNewData) {\r\n    getId(role);\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedUser}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values) => {\r\n        if (values._id) {\r\n          console.log(values)\r\n          update(values)\r\n        } else {\r\n          values.role = role;\r\n          add(values)\r\n\r\n          // window.location.reload(false);\r\n        }\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\">\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"User ID\" name=\"idNumber\">\r\n                  <Input disabled=\"true\" name=\"idNumber\" />\r\n                </Form.Item>\r\n              </Col>\r\n              {role === \"Student\" ? (\r\n                <Col span={12}>\r\n                  <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                    <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              ) : (\"\")}\r\n\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"First Name\" name=\"firstName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Middle Name\" name=\"middleName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Last Name\" name=\"lastName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Gender\" name=\"gender\">\r\n                  <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\r\n                    <Option value=\"Male\">Male</Option>\r\n                    <Option value=\"Female\">Female</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {role === \"Student\" ? (\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                    <Select\r\n                      disabled={\r\n                        JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                      }\r\n                      name=\"gradeLevel\"\r\n                    >\r\n                      <Option value=\"1\">1</Option>\r\n                      <Option value=\"2\">2</Option>\r\n                      <Option value=\"3\">3</Option>\r\n                      <Option value=\"4\">4</Option>\r\n                      <Option value=\"5\">5</Option>\r\n                      <Option value=\"6\">6</Option>\r\n                      <Option value=\"7\">7</Option>\r\n                      <Option value=\"8\">8</Option>\r\n                      <Option value=\"9\">9</Option>\r\n                      <Option value=\"10\">10</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  {/* <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input\r\n                              disabled={\r\n                                 values.role != \"Student\" ||\r\n                                 JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                              }\r\n                              name=\"section\"\r\n                           />\r\n                        </Form.Item> */}\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Birth Day\" name=\"birthDate\">\r\n                  <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Birth Place\" name=\"birthPlace\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={8}>\r\n                <Form.Item label=\"Age\" name=\"age\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={16}>\r\n                {role === \"Student\" ? (\r\n                  <Form.Item label=\"Guardian\" name=\"parentId\">\r\n                    <Select\r\n                      value={\r\n                        values.parent\r\n                          ? values.parent.firstName +\r\n                          \" \" +\r\n                          values.parent.lastName\r\n                          : \"\"\r\n                      }\r\n                      name=\"parentId\"\r\n                    >\r\n                      {selectedParent.map((parent) => {\r\n                        return (\r\n                          <Option value={parent._id}>\r\n                            {parent.firstName + \" \" + parent.lastName}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Contact Number\" name=\"contactNumber\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Email\" name=\"email\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              {/* <Col span={12}>\r\n                     <Form.Item label=\"Role\" name=\"role\">\r\n                        <Select\r\n                           disabled={\r\n                              JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                           }\r\n                           name=\"role\"\r\n                        >\r\n                           <Option value=\"Admin\">Admin</Option>\r\n                           <Option value=\"Student\">Student</Option>\r\n                           <Option value=\"Parent\">Parent</Option>\r\n                           <Option value=\"Teacher\">Teacher</Option>\r\n                        </Select>\r\n                     </Form.Item>\r\n                   </Col> */}\r\n              {role === 'Student' ? (\r\n                <Col span={12}>\r\n                  <Form.Item label=\"BadgeId\" name=\"badgeID\">\r\n                    <Input name=\"badgeID\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              ) : ('')}\r\n              <Col span={12}>\r\n                <Form.Item label=\"Password\" name=\"password\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" type=\"password\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"btn-save\" htmlType=\"submit\">\r\n              <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n            </Button> : null}\r\n\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default UserEditForm;\r\n","import BaseService from '../../baseService';\r\nclass GradesService extends BaseService {\r\n  constructor() {\r\n    super('grades');\r\n  }\r\n\r\n  add = gradesObj => {\r\n    return this.axiosInstance.post('/create-grades', gradesObj);\r\n  };\r\n\r\n  update = gradesObj => {\r\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-grades/' + id);\r\n  };\r\n\r\n  findAllGrades = (level ='') => {\r\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\r\n  };\r\n\r\n  addUpdateObservedValues = valuesObj => {\r\n    return this.axiosInstance.post('/observed-values', valuesObj);\r\n  };\r\n\r\n}\r\n\r\nexport default new GradesService();\r\n","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('quarter');\r\n  }\r\n\r\n  add = quarterObj => {\r\n    return this.axiosInstance.post('/create-quarter', quarterObj);\r\n  };\r\n\r\n  update = quarterObj => {\r\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\r\n  };\r\n\r\n  findAllQuarter = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-quarter/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import BaseService from '../../baseService';\r\nclass AuditTrailService extends BaseService {\r\n  constructor() {\r\n    super('auditTrail');\r\n  }\r\n\r\n  add = auditTrailObj => {\r\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\r\n  };\r\n\r\n  update = auditTrailObj => {\r\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\r\n  };\r\n\r\n  findAllAudit = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-autditrail/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new AuditTrailService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from './userService';\r\nimport gradesService from '../grade/gradesService';\r\nimport quarterService from '../quarter/quarterService'\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from './additionalService';\r\n\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\r\n  let [adminList, setAdminList] = useState([])\r\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\r\n  let [parentList, setParentList] = useState([])\r\n  let [studentList, setStudentList] = useState([])\r\n  let [teacherList, setTeacherList] = useState([])\r\n  let [showUserVisible, setShowUserVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n  let [selectedParent, setSelectedParent] = useState([]);\r\n\r\n  let [loginCounter, setLoginCounter] = useState(false);\r\n\r\n  const addUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Add User\",\r\n      date:new Date()\r\n    }\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.add(values)\r\n    .then(function (res) {\r\n      if(values.role === \"Student\"){\r\n        let gradeObj = {\r\n          status: true,\r\n          student: values,\r\n          gradeLevel: values.gradeLevel,\r\n          section: values.section,\r\n          schoolYear : values.schoolYear,\r\n          subjects: [{\r\n              subjectName: \"English\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Filipino\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Science\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Math\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"MAPEH\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Values\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          }]\r\n      }\r\n      let response = gradesService.add(gradeObj)\r\n      }\r\n    \r\n        \r\n        setSelectedUser({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            employeeNumber: \"\",\r\n            department: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n        window.location.reload(false);\r\n    })\r\n  };\r\n\r\n  const editUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Edit User\",\r\n      date:new Date()}\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.update(values)\r\n    .then(function (res) {\r\n        setSelectedUser({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          middleName: \"\",\r\n          idNumber: \"\",\r\n          gender: \"\",\r\n          birthDate: \"\",\r\n          birthPlace: \"\",\r\n          age: \"\",\r\n          contactNumber: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n    })\r\n  };\r\n\r\n  const getListOfParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    setSelectedParent(result)\r\n  };\r\n\r\n  const showUser = () => {\r\n    setSelectedUser({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        idNumber: \"\",\r\n        gender: \"\",\r\n        birthDate: \"\",\r\n        birthPlace: \"\",\r\n        age: \"\",\r\n        contactNumber: \"\",\r\n        email: \"\",\r\n        status: \"\",\r\n      });\r\n    setShowUserVisible(true)\r\n  };\r\n\r\n  const loadUser = (userObj) => {\r\n    setSelectedUser({...userObj});\r\n    setShowUserVisible(true);\r\n  };\r\n\r\n  const loadQuarter = async () => {\r\n    let response = await quarterService.findAllQuarter();\r\n    if (response.data && response.data.length > 0) {\r\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\r\n    };\r\n  }\r\n\r\n  const login = async (credentials) => {\r\n    let ctr = 0;\r\n    let loggedInUser = {};\r\n    userDetails.list.map((user) => {\r\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\r\n            ctr = ctr + 1;\r\n            loggedInUser = user;\r\n        }\r\n    })\r\n    if(ctr === 0) {\r\n        setLoginCounter(false)\r\n    } else {\r\n         //if user is parent log in audit trail\r\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\r\n          let loggedDate =  new Date().toISOString();\r\n          let details = {\r\n            user: loggedInUser,\r\n            activity: 'Parent logged in',\r\n            date: loggedDate\r\n          };\r\n          await auditTrailService.add(details);\r\n        };\r\n    \r\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\r\n        sessionStorage.setItem(\"_id\", quarter._id);\r\n        window.location.reload(false);\r\n        setLoginCounter(true);\r\n    }\r\n  };\r\n\r\n  const filterStudent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setStudentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList( newArray)\r\n    }\r\n  } \r\n  \r\n  const filterTeacher = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setTeacherList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterParent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setParentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterAdmin = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setAdminList(\r\n        newArray\r\n      )\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(\r\n      newArray\r\n    )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList(newArray)\r\n\r\n  }  \r\n\r\n  const loadStudent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Student\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        profileImgSrc: (user.profileImgSrc) ? user.profileImgSrc : '',\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList(newArray)\r\n\r\n  }  \r\n\r\n  const loadParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList(newArray)\r\n\r\n  }\r\n\r\n  const loadAdmin = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Admin\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(newArray)\r\n\r\n  }\r\n  \r\nconst getNewGenId = async (role) => {\r\n      let response = await userService.getGenIdNumber(role);\r\n      return response;\r\n    }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    let newArrayCredentials = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          idNumber: user.idNumber,\r\n          password: user.password,\r\n        }\r\n      })\r\n\r\n    setUserDetails({\r\n      list: newArray,\r\n      credentials: newArrayCredentials\r\n    })\r\n  \r\n    \r\n\r\n  };\r\n  \r\n  const buildStudentList = (list) => {\r\n    let newlist = list.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n    return newlist;\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadUsers();\r\n    getListOfParent();\r\n    loadAdmin();\r\n    loadStudent();\r\n    loadTeacher();\r\n    loadParent();\r\n    loadQuarter();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadUsers,\r\n    addUser,\r\n    loginCounter,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    login,\r\n    selectedParent,\r\n    filterAdmin,\r\n    filterStudent,\r\n    filterParent,\r\n    filterTeacher,\r\n    adminList,\r\n    studentList,\r\n    parentList,\r\n    teacherList,\r\n    getNewGenId,\r\n    buildStudentList,\r\n    setSelectedUser,\r\n    loadStudent\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\r\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n  }, []);\r\n\r\n\r\n  return {\r\n    today\r\n  }\r\n};\r\n\r\nexport default TimeKeepingAction;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst EmployeeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      },\r\n      {\r\n         title: <b>Gender</b>,\r\n         dataIndex: 'gender',\r\n      },\r\n      {\r\n        title: <b>Age</b>,\r\n        dataIndex: 'age',\r\n      },   \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Role</b>,\r\n        dataIndex: 'role',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         console.log(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterAdmin,\r\n    adminList\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        {console.log(adminList)}\r\n        <UserTable details={adminList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Admin' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdvisoryService extends BaseService {\r\n  constructor() {\r\n    super('advisory');\r\n  }\r\n\r\n  add = advisoryObj => {\r\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\r\n  };\r\n\r\n  update = advisoryObj => {\r\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-advisory/' + id);\r\n  };\r\n\r\n  findAllAdvisory = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  getAvailableAdvisors = () => {\r\n    return this.axiosInstance.get('/available-advisors');\r\n  };\r\n\r\n  deleteAdvisory = (id) => {\r\n    return this.axiosInstance.delete('/delete-advisory/' + id)\r\n  };\r\n}\r\n\r\nexport default new AdvisoryService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport UserAction from '../user/userAction';\r\n\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\r\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\r\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [advisoryStudents, setAdvisoryStudents] = useState([]);\r\n  let [availableAdvisors, setAvailableAdvisors] = useState([]);\r\n  \r\n  let {\r\n    buildStudentList\r\n  } = UserAction({});\r\n\r\n  const addAdvisor = async (values, gradeLevel) => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Added Advisor\",\r\n      date:new Date()}\r\n    let advisorTeacher = await userService.findyById(values.advisor)\r\n    let finalAddValue = {\r\n      gradeLevel: gradeLevel,\r\n      teacher: advisorTeacher.data\r\n    }\r\n    try {\r\n      let response = await advisoryService.add(finalAddValue);\r\n      console.log(response);\r\n       window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n  };\r\n  \r\n  const getAvailableAdvisors = async () => {\r\n    let advisors = await advisoryService.getAvailableAdvisors();\r\n    setAvailableAdvisors(advisors.data);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result);\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setselectedAdvisoryAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setselectedAdvisoryAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setselectedAdvisoryAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setselectedAdvisoryAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setselectedAdvisoryAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setselectedAdvisoryAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setselectedAdvisoryAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setselectedAdvisoryAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setselectedAdvisoryAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setselectedAdvisoryAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideAdvisor = async () => {\r\n    setshowAdvisorVisible(false)\r\n  };\r\n\r\n  const showAdvisor = async (gradeLevel) => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setselectedAdvisoryAssgined(result[0].subjects)\r\n    } else {\r\n        setselectedAdvisoryAssgined({})\r\n    }\r\n    setshowAdvisorVisible(true)\r\n  };\r\n\r\n  const getStudentAdvisor = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n    setStudentAdvisor(result[0]);\r\n  };\r\n  \r\n   const loadAdvisoryStudents = async () => {\r\n     let user = JSON.parse(sessionStorage.user);\r\n     const userData = {\r\n       firstName: user.firstName,\r\n       lastName: user.lastName,\r\n       middleName: user.middleName\r\n     };\r\n     try {\r\n       let advisory = await AdditionalService.getAdvisory(userData);\r\n   \r\n       if (!advisory) return;\r\n     \r\n       const students = await AdditionalService.getAdvisoryStudents(advisory.data.gradeLevel);\r\n       let list = buildStudentList(students.data);\r\n       await setAdvisoryStudents(list);\r\n       console.log('YHVH is great', students.data);\r\n       return list;\r\n     } catch (error) {\r\n       return [];\r\n     };\r\n    \r\n  };\r\n  \r\n  const deleteAdvisory = async (id) => {\r\n    let response = await advisoryService.deleteAdvisory(id);\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudentAdvisor();\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n    loadAdvisoryStudents();\r\n    getAvailableAdvisors();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    studentAdvisor,\r\n    advisoryStudents,\r\n    loadAdvisoryStudents,\r\n    availableAdvisors,\r\n    deleteAdvisory\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import { useState } from 'react';\r\nimport AdditionalService from './additionalService';\r\nimport UserService from './userService';\r\n\r\nconst UploadImageAction = (initial = {}) => {\r\n  const [image, setImage] = useState(null);\r\n  const [profileSrc, setProfileSrc] = useState('');\r\n  const [uploadSrc, setUploadSrc] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const handleChange = input => {\r\n\r\n    if(input.target.files.length === 0) return;\r\n\r\n    let reader = new FileReader();\r\n    let file = input.target.files[0];\r\n\r\n    reader.onloadend = async () => {\r\n      await setUploadSrc(reader.result);\r\n      await setImage(file);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const saveUpload = async idNumber => {\r\n    setProcessing(true);\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    let imageUrl = '';\r\n\r\n    try {\r\n      let response = await AdditionalService.uploadProfile(formData);\r\n      imageUrl = response.data[0].secure_url;\r\n      return await setStudentProfile(imageUrl, idNumber);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setProcessing(false);\r\n    };\r\n  };\r\n\r\n  const setStudentProfile = async (imgSrc = '', idNumber = '') => {\r\n    try {\r\n      let params = {\r\n        idNumber: idNumber,\r\n        profileImgSrc: imgSrc\r\n      };\r\n      let response = await UserService.updateProfileImg(params);\r\n      setProfileSrc(response.data.profileImgSrc);\r\n      setUploadSrc('');\r\n      setProcessing(false);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n  };\r\n\r\n  return {\r\n    saveUpload,\r\n    handleChange,\r\n    profileSrc,\r\n    loading,\r\n    uploadSrc,\r\n    processing,\r\n    setProfileSrc,\r\n    setUploadSrc\r\n  }\r\n};\r\n\r\nexport default UploadImageAction;","import React, { useState } from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Upload } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, PlusOutlined, LoadingOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm';\r\nimport AdvisoryAction from '../grade/advisoryAction';\r\n\r\nimport UserAction from './userAction';\r\nimport AdditionalService from './additionalService';\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction';\r\nimport UploadImageAction from './imageUpload';\r\n\r\nimport UserTable from './userTable';\r\n\r\nconst EmployeePage = ({ isAdvisory }) => {\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    studentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterStudent,\r\n    setSelectedUser,\r\n    loadStudent\r\n  } = UserAction({});\r\n\r\n  let {\r\n    advisoryStudents,\r\n    loadAdvisoryStudents\r\n  } = AdvisoryAction({});\r\n\r\n  let {\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  let {\r\n    handleChange,\r\n    saveUpload,\r\n    profileSrc,\r\n    uploadSrc,\r\n    loading,\r\n    processing,\r\n    setProfileSrc,\r\n    setUploadSrc\r\n  } = UploadImageAction();\r\n\r\n  const uploadButton = (\r\n    <div style={{ height: \"110px\" }}>\r\n      <div style={{ border: \"0.5px dashed grey\", height: \"100px\", width: \"100px\", textAlign: \"center\", float: \"right\" }}>\r\n        {loading ? <LoadingOutlined style={{ marginTop: '20px' }} /> : <PlusOutlined style={{ marginTop: '20px' }} />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (showUserVisible && selectedUser && selectedUser.profileImgSrc) { profileSrc = selectedUser.profileImgSrc };\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\r\n        </Col>\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n          <>\r\n            <Col lg={{ span: 6 }}>\r\n              <Input placeholder=\"Search\" onChange={(e) => filterStudent(e.target.value)} />\r\n              {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n          </Button> */}\r\n            </Col>\r\n            <Button className=\"addUser btn-add\" onClick={() => showUser()}>\r\n              <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n        </Button>\r\n          </>\r\n          : null}\r\n\r\n      </Row>\r\n      <Row>\r\n        <Col lg={{ span: \"24\" }}>\r\n          <UserTable details={isAdvisory ? advisoryStudents : studentList} />\r\n        </Col>\r\n      </Row>\r\n      <Drawer\r\n        title={\r\n          <Typography.Title level={4}>\r\n            {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n          </Typography.Title>\r\n        }\r\n        width={550}\r\n        visible={showUserVisible}\r\n        onClose={() => { setShowUserVisible(false); setProfileSrc(''); setUploadSrc(''); loadStudent() }}\r\n        bodyStyle={{ paddingBottom: 80 }}\r\n      >\r\n        {\r\n          showUserVisible ? (\r\n            <form style={{ textAlign: \"right\", marginRight: \"23px\" }}>\r\n              {(uploadSrc || profileSrc) ? <img src={uploadSrc !== '' ? uploadSrc : profileSrc} alt=\"avatar\" style={{ width: '100px', height: '100px' }} /> : uploadButton}\r\n              <div style={{ textAlign: 'right', marginTop: '5px', marginBottom: '5px' }} >\r\n                <input style={{ width: '85px', marginRight: '5px' }} id=\"profileImgInput\" type=\"file\" onChange={(e) => handleChange(e)} />\r\n              </div>\r\n              <div>\r\n                {uploadSrc ?\r\n                  <Button\r\n                    onClick={async () => { let updates = await saveUpload(selectedUser.idNumber); setSelectedUser(updates) }}\r\n                    style={{ marginRight: \"7px\" }}\r\n                    icon={processing ? <LoadingOutlined /> : <UploadOutlined />}\r\n                  >Save</Button> : ''}\r\n              </div>\r\n            </form>\r\n          ) : ('')\r\n        }\r\n        <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Student' isNewData=\"false\" />\r\n      </Drawer>\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    parentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterParent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\r\n        <UserTable details={parentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Parent' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    teacherList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterTeacher\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={teacherList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Teacher' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Space, message } from 'antd';\r\n\r\nimport userService from './userService';\r\n\r\nconst Settings = () => {\r\n  let password = '';\r\n  let newPassword = '';\r\n  let confirmPassword = '';\r\n  \r\n  const changePassword = async () => {\r\n    if (password === '' || newPassword === '' || confirmPassword === '') {\r\n      return message.error('All fields are required.', 3);\r\n    };\r\n    \r\n     if (newPassword !== confirmPassword) {\r\n      return message.error('New password and confirm must match.', 3);\r\n    };\r\n    \r\n    let user = JSON.parse(sessionStorage.user);\r\n    let body = {\r\n      idNumber: user.idNumber,\r\n      currentPassword: password,\r\n      newPassword: newPassword\r\n    };\r\n    try {\r\n      let response = await userService.updatePassword(body);\r\n      if (response && response.status === 200) {\r\n        return message.success('Password updated', 3);\r\n      };\r\n    } catch (error) {\r\n      return message.error('Unable to update password', 3);\r\n    };\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\" style={{textAlign: 'center'}}>\r\n     <Row className=\"mt-15\">\r\n       <Col lg={{ span: 6, offset: 9  }}>\r\n         <Typography.Title level={3} className=\"ml-15\">Setting</Typography.Title>\r\n       </Col>\r\n     </Row>\r\n      <form onSubmit={() => changePassword()}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 6, offset: 9 }}>\r\n            <Input placeholder=\"Old Password\" type=\"password\" onChange={(e) => password = e.target.value}/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n           <Input placeholder=\"New Password\" type=\"password\" onChange={(e) => newPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n          <Input placeholder=\"Confirm Password\" type=\"password\" onChange={(e) => confirmPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row style={{marginTop: '15px'}}>\r\n        <Col lg={{ span: 6, offset: 9 }}>\r\n         <Space align=\"center\">\r\n           <Button  className=\"addUser btn-add\" onClick={()=> changePassword()}>\r\n            Change Password\r\n          </Button>\r\n         </Space>\r\n        </Col>\r\n       </Row>\r\n      </form>\r\n    </Card>     \r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Subject</b>,\r\n         dataIndex: 'subject',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n        title: <b>1st Quarter</b>,\r\n        dataIndex: 'Quarter1st',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n      {\r\n         title: <b>2nd Quarter</b>,\r\n         dataIndex: 'Quarter2nd',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n         title: <b>3rd Quarter</b>,\r\n         dataIndex: 'Quarter3rd',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n        title: <b>4th Quarter</b>,\r\n        dataIndex: 'Quarter4th',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n     {\r\n        title: <b>Final Grade</b>,\r\n        dataIndex: 'FinalGrade',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n     {\r\n        title: <b>Remarks</b>,\r\n        dataIndex: 'Remarks',\r\n        render (text) {\r\n           return {\r\n            props: {\r\n               style: { color: text === 'Failed' ? \"red\" : \"\" }\r\n             },\r\n             children: <div>{text}</div>\r\n           }\r\n        }\r\n     }\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details} pagination={false} />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst UserEditForm = ({ selectedUser }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n               <Card className=\"p-70\">\r\n               <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n                <br/>\r\n                {console.log(values)}\r\n               \r\n                <Row gutter={16}>\r\n\r\n{/* <Col span={12}>\r\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n \r\n   <Col span={12}>\r\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n   <Col span={12}>\r\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col> */}\r\n</Row>\r\n             \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;","import BaseService from '../../baseService';\r\nclass ClearanceService extends BaseService {\r\n  constructor() {\r\n    super('clearance');\r\n  };\r\n\r\n  addUpdateClearance = obj => {\r\n    return this.axiosInstance.post('/save', obj);\r\n  };\r\n\r\n  getClearance = level => {\r\n    return this.axiosInstance.get('/level/' + level);\r\n  };\r\n}\r\n\r\nexport default new ClearanceService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport gradesService from './gradesService';\r\nimport userService from '../user/userService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport { notification } from 'antd';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport { Button } from 'antd';\r\nimport moment from 'moment';\r\nimport { OBSERVED_VALUES } from '../modelTemplate/observedValues';\r\nimport ClearanceService from '../clearance/clearanceService';\r\n\r\nconst renderUnPaidNotif = (studentObj, isParent = false) => {\r\n  let person = (isParent) ? `${studentObj.lastName}, ${studentObj.firstName} ${studentObj.middleName}` : 'you';\r\n  notification.info({\r\n    message: `Notification`,\r\n    description:\r\n      `This is to inform you that ${person} have an unsettled payments.`,\r\n    placement: 'bottomLeft'\r\n  });\r\n};\r\n\r\nconst Grade1Action = (initial = { searchRequest: {} }) => {\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]); //list of grades\r\n  let [gradeDetails, setGradeDetails] = useState({ list: [] });\r\n  let [grade1Details, setGrade1Details] = useState({ list: [] });\r\n  let [grade2Details, setGrade2Details] = useState({ list: [] });\r\n  let [grade3Details, setGrade3Details] = useState({ list: [] });\r\n  let [grade4Details, setGrade4Details] = useState({ list: [] });\r\n  let [grade5Details, setGrade5Details] = useState({ list: [] });\r\n  let [grade6Details, setGrade6Details] = useState({ list: [] });\r\n  let [grade7Details, setGrade7Details] = useState({ list: [] });\r\n  let [grade8Details, setGrade8Details] = useState({ list: [] });\r\n  let [grade9Details, setGrade9Details] = useState({ list: [] });\r\n  let [grade10Details, setGrade10Details] = useState({ list: [] });\r\n  let [advisoryGrades, setAdvisoryGrades] = useState([]);\r\n\r\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\r\n  let [selectedGrade, setSelectedGrade] = useState({}); //student grade record\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n\r\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\r\n  let [overAllGrade, setOverAllGrade] = useState({ finalGrade: '', remarks: '' });\r\n  let [observedValues, setObservedValues] = useState([]);\r\n  let [showUnpaid, setShowUnpaid] = useState(false);\r\n\r\n  const upgradeStudent = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: \"Upgrade Student\",\r\n      date: new Date()\r\n    }\r\n    auditTrailService.add(auditTrailObj)\r\n    let ctr = 0;\r\n    await selectedListOfStudent.map(async student => {\r\n      setLoading(true)\r\n      let result = await gradesService.findyById(student.id);\r\n\r\n      let userCurrentGrade = (parseInt(result.data.gradeLevel))\r\n\r\n\r\n      if (userCurrentGrade < 10) {\r\n        let currentUser = result.data\r\n        let allStudent = await userService.findAllUser();\r\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n        let currentStudent = result1[0]\r\n        currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\r\n        let response = await userService.update(currentStudent)\r\n\r\n        currentUser.status = false;\r\n        let response1 = await gradesService.update(currentUser)\r\n\r\n        let gradeObj = {\r\n          status: true,\r\n          student: currentUser.student,\r\n          gradeLevel: (userCurrentGrade + 1).toString(),\r\n          section: currentUser.student.section,\r\n          schoolYear: currentStudent.schoolYear,\r\n          subjects: [{\r\n            subjectName: \"English\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Filipino\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Science\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Math\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"MAPEH\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Values\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Music\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Art\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"PE\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Health\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          }]\r\n        }\r\n\r\n        let response2 = gradesService.add(gradeObj)\r\n\r\n\r\n      } else {\r\n        let currentUser = result.data\r\n        let allStudent = await userService.findAllUser();\r\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n        let currentStudent = result1[0]\r\n        currentStudent.gradeLevel = \"Graduate\"\r\n        let response = await userService.update(currentStudent)\r\n\r\n        currentUser.status = false;\r\n        let response1 = await gradesService.update(currentUser)\r\n      }\r\n      ctr = ctr + 1\r\n      if (ctr === selectedListOfStudent.length) {\r\n        setLoading(false)\r\n        window.location.reload(false)\r\n      }\r\n    })\r\n\r\n  };\r\n\r\n  const editGrade = async (values, isAdvisory = false) => {\r\n    console.log(values);\r\n    let result = await gradesService.findyById(values._id);\r\n    let grade = result.data\r\n\r\n    if (values.English) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.English.firstQuarter) {\r\n        firstQuarter = values.English.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.English.secondQuarter) {\r\n        secondQuarter = values.English.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.English.thirdQuarter) {\r\n        thirdQuarter = values.English.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.English.fourthQuarter) {\r\n        fourthQuarter = values.English.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newEnglishGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[0].subjectGrade = newEnglishGrade;\r\n        grade.subjects[0].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[0].recommendedGrade = newEnglishGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Filipino) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Filipino.firstQuarter) {\r\n        firstQuarter = values.Filipino.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Filipino.secondQuarter) {\r\n        secondQuarter = values.Filipino.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Filipino.thirdQuarter) {\r\n        thirdQuarter = values.Filipino.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Filipino.fourthQuarter) {\r\n        fourthQuarter = values.Filipino.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newFilipinoGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      }\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[1].subjectGrade = newFilipinoGrade;\r\n        grade.subjects[1].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[1].recommendedGrade = newFilipinoGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Science) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Science.firstQuarter) {\r\n        firstQuarter = values.Science.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Science.secondQuarter) {\r\n        secondQuarter = values.Science.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Science.thirdQuarter) {\r\n        thirdQuarter = values.Science.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Science.fourthQuarter) {\r\n        fourthQuarter = values.Science.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newScienceGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[2].subjectGrade = newScienceGrade;\r\n        grade.subjects[2].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[2].recommendedGrade = newScienceGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Math) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Math.firstQuarter) {\r\n        firstQuarter = values.Math.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[3].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Math.secondQuarter) {\r\n        secondQuarter = values.Math.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Math.thirdQuarter) {\r\n        thirdQuarter = values.Math.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Math.fourthQuarter) {\r\n        fourthQuarter = values.Math.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newMathGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[3].subjectGrade = newMathGrade;\r\n        grade.subjects[3].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[3].recommendedGrade = newMathGrade;\r\n      };\r\n    }\r\n\r\n    // if (values.MAPEH) {\r\n    //   let firstQuarter = 0;\r\n    //   let secondQuarter = 0;\r\n    //   let thirdQuarter = 0;\r\n    //   let fourthQuarter = 0;\r\n\r\n    //   if (values.MAPEH.firstQuarter) {\r\n    //     firstQuarter = values.MAPEH.firstQuarter\r\n    //   } else {\r\n    //     firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\r\n    //   }\r\n\r\n    //   if (values.MAPEH.secondQuarter) {\r\n    //     secondQuarter = values.MAPEH.secondQuarter\r\n    //   } else {\r\n    //     secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\r\n    //   }\r\n\r\n    //   if (values.MAPEH.thirdQuarter) {\r\n    //     thirdQuarter = values.MAPEH.thirdQuarter\r\n    //   } else {\r\n    //     thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\r\n    //   }\r\n\r\n    //   if (values.MAPEH.fourthQuarter) {\r\n    //     fourthQuarter = values.MAPEH.fourthQuarter\r\n    //   } else {\r\n    //     fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\r\n    //   }\r\n\r\n    //   let newMAPEHGrade = {\r\n    //     firstQuarter: firstQuarter,\r\n    //     secondQuarter: secondQuarter,\r\n    //     thirdQuarter: thirdQuarter,\r\n    //     fourthQuarter: fourthQuarter\r\n    //   };\r\n\r\n    //   if (isAdvisory) {\r\n    //     grade.subjects[4].subjectGrade = newMAPEHGrade;\r\n    //     grade.subjects[4].recommendedGrade = {};\r\n    //   } else {\r\n    //     grade.subjects[4].recommendedGrade = newMAPEHGrade;\r\n    //   };\r\n    // }\r\n\r\n    if (values.Values) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Values.firstQuarter) {\r\n        firstQuarter = values.Values.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Values.secondQuarter) {\r\n        secondQuarter = values.Values.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Values.thirdQuarter) {\r\n        thirdQuarter = values.Values.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Values.fourthQuarter) {\r\n        fourthQuarter = values.Values.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newValuesGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[5].subjectGrade = newValuesGrade;\r\n        grade.subjects[5].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[5].recommendedGrade = newValuesGrade;\r\n      };\r\n    };\r\n\r\n    const subjectDummy = {\r\n      firstQuarter: 0,\r\n      secondQuarter: 0,\r\n      thirdQuarter: 0,\r\n      fourthQuarter: 0\r\n    };\r\n\r\n    if (values.Music) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Music');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Music', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Music',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n\r\n    if (values.Art) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Art');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Art', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Art',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    if (values.PE) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'PE');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'PE', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'PE',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    if (values.Health) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Health');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Health', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Health',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    let updateResult = await gradesService.update(grade);\r\n    //add record  to audit trail\r\n    let loggedDate = new Date().toISOString();\r\n    let userDetails = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: 'Teacher has updated student grades',\r\n      date: loggedDate\r\n    };\r\n    await auditTrailService.add(userDetails);\r\n    window.location.reload();\r\n  };\r\n\r\n  const constructSubjectGrades = (values, subject = '', subjectGrade) => {\r\n    let firstQuarter = 0;\r\n    let secondQuarter = 0;\r\n    let thirdQuarter = 0;\r\n    let fourthQuarter = 0;\r\n\r\n    if (values[subject].firstQuarter) {\r\n      firstQuarter = values[subject].firstQuarter\r\n    } else {\r\n      firstQuarter = subjectGrade.firstQuarter\r\n    }\r\n\r\n    if (values[subject].secondQuarter) {\r\n      secondQuarter = values[subject].secondQuarter\r\n    } else {\r\n      secondQuarter = subjectGrade.secondQuarter\r\n    }\r\n\r\n    if (values[subject].thirdQuarter) {\r\n      thirdQuarter = values[subject].thirdQuarter\r\n    } else {\r\n      thirdQuarter = subjectGrade.thirdQuarter\r\n    }\r\n\r\n    if (values[subject].fourthQuarter) {\r\n      fourthQuarter = values[subject].fourthQuarter\r\n    } else {\r\n      fourthQuarter = subjectGrade.fourthQuarter\r\n    };\r\n\r\n    let gradesObj = {\r\n      firstQuarter: firstQuarter,\r\n      secondQuarter: secondQuarter,\r\n      thirdQuarter: thirdQuarter,\r\n      fourthQuarter: fourthQuarter\r\n    };\r\n\r\n    return gradesObj;\r\n  };\r\n  const showGrade = () => {\r\n    setSelectedGrade({\r\n      schoolYear: \"\",\r\n      subjects: {},\r\n      grade: \"\",\r\n      student: {},\r\n      gradeLevel: \"\",\r\n      section: \"\",\r\n    })\r\n    setShowGradeVisible(true)\r\n  };\r\n\r\n  const loadGrade = (gradeObj, idNumber, level = '') => {\r\n    getCurrentGradeUser(idNumber, level)\r\n    setSelectedGrade({ ...gradeObj });\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const loadSelectedGrade = async (gradeId) => {\r\n    let response = await gradesService.findyById(gradeId);\r\n    setSelectedGrade({ ...response.data });\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const filterCurrentGradeUser = async ({ gradeLevel, studentObj }) => {\r\n    setLoading(true);\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    let student = (studentObj) ? studentObj : JSON.parse(sessionStorage.user);\r\n    gradeLevel = (gradeLevel) ? gradeLevel : (studentObj?.gradeLevel) ? studentObj.gradeLevel : student.gradeLevel;\r\n    result = response.data.filter(user => user.student.idNumber === student.idNumber && user.gradeLevel === gradeLevel);\r\n\r\n    //add field for student previous gradeLevel record\r\n    let gradeRec = [];\r\n    response.data.map(record => {\r\n      if (record.student?.idNumber === student.idNumber) {\r\n        gradeRec.push(record.gradeLevel);\r\n      };\r\n    });\r\n\r\n    //add field for student previous gradeLevel record\r\n    student.gradeLevelList = gradeRec; //marker2\r\n    student.gradeLevel = gradeLevel;\r\n    setSelectedUser(student);\r\n    // setSelectedUser(result[0].student);\r\n    // console.log(result[0].student);\r\n\r\n    //hereEdit\r\n    let unClearedQuarters = [];\r\n    let clientUser = JSON.parse(sessionStorage.user);\r\n\r\n    if (clientUser.role === 'Student' || clientUser.role === 'Parent') {\r\n      let responseClearances = await ClearanceService.getClearance(gradeLevel);\r\n      console.log(gradeLevel);\r\n      if (responseClearances.data) {\r\n        let clearance = responseClearances.data.students\r\n          .find(item => item.idNumber === student.idNumber);\r\n        Object.entries(clearance).forEach(([key, value]) => { if (key.includes('Quarter') && value === 'pending') unClearedQuarters.push(key) });\r\n      }\r\n    };\r\n\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject, unClearedQuarters);\r\n      });\r\n\r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1 = [];\r\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n\r\n      //remove mapeh\r\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\r\n      newArray.splice(mapehIndex, 1);\r\n\r\n      buildObservedValues(result[0].observedValues);\r\n      buildOverallRemarks(newArray, unClearedQuarters.length > 0);\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([]);\r\n    };\r\n    setLoading(false);\r\n\r\n    if (unClearedQuarters.length > 0) {\r\n      renderUnPaidNotif(student, clientUser.role === 'Parent');\r\n    };\r\n  };\r\n\r\n  const buildOverallRemarks = async (newArray, forceHide = false) => {\r\n    let finalGradesholder = [];\r\n\r\n    await newArray.map(subject => {\r\n      if (subject.FinalGrade && subject.FinalGrade !== '') finalGradesholder.push(subject.FinalGrade);\r\n    });\r\n\r\n    if (finalGradesholder.length === newArray.length) {\r\n      let average = finalGradesholder.reduce((a, b) => a + b, 0) / finalGradesholder.length;\r\n      let remarks = '';\r\n\r\n      if (average >= 75) {\r\n        remarks = 'Promoted';\r\n      } else {\r\n        remarks = 'Failed';\r\n      };\r\n\r\n      setTimeout(() => {\r\n        setOverAllGrade({\r\n          finalGrade: !forceHide ? average.toFixed(2) : '',\r\n          remarks: !forceHide ? remarks : ''\r\n        });\r\n      }, 1000);\r\n    };\r\n  };\r\n\r\n  const buildObservedValues = valuesDatas => {\r\n    let observedValuesTmp = JSON.parse(JSON.stringify(OBSERVED_VALUES));\r\n\r\n    if (valuesDatas) {\r\n      observedValuesTmp = observedValuesTmp.map(valuesObj => {\r\n        let newObj = valuesDatas.find(item => item.value === valuesObj.id);\r\n        if (!newObj) {\r\n          return valuesObj;\r\n        } else {\r\n          valuesObj = Object.assign(valuesObj, newObj.grades);\r\n          return valuesObj;\r\n        }\r\n      });\r\n    }\r\n\r\n    setObservedValues(observedValuesTmp);\r\n  };\r\n\r\n  const currentGradeUser = async () => {\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\r\n    } else {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\r\n    }\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student)\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n\r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1 = [];\r\n      if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\r\n      } else {\r\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n      };\r\n\r\n      //remove mapeh\r\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\r\n      newArray.splice(mapehIndex, 1);\r\n\r\n      // buildOverallRemarks(newArray);\r\n      buildObservedValues(result[0].observedValues);\r\n      setStudentAdvisor(result1[0]);\r\n      //setSelectedUserGrade(newArray); //hereEdit2\r\n    } else {\r\n      setSelectedUser({})\r\n      // setSelectedUserGrade([])\r\n    };\r\n\r\n  };\r\n\r\n  /**\r\n   * @description builds the subject row for the table\r\n   * @param {Object} subject  \r\n   * @param {string} hiddenQuarter \r\n   * @returns updated object with its desired values for showing\r\n   */\r\n  const buidSubjectRow = (subject, hiddenQuarters = []) => {\r\n    let remarks = \"\";\r\n    let finalGrade = (subject.subjectGrade.firstQuarter +\r\n      subject.subjectGrade.secondQuarter +\r\n      subject.subjectGrade.thirdQuarter +\r\n      subject.subjectGrade.fourthQuarter) / 4;\r\n\r\n    let inComplete = false;\r\n    let firstQuarter = (hiddenQuarters.includes('firstQuarter')) ? 0 : subject.subjectGrade.firstQuarter;\r\n    let secondQuarter = (hiddenQuarters.includes('secondQuarter')) ? 0 : subject.subjectGrade.secondQuarter;\r\n    let thirdQuarter = (hiddenQuarters.includes('thirdQuarter')) ? 0 : subject.subjectGrade.thirdQuarter;\r\n    let fourthQuarter = (hiddenQuarters.includes('fourthQuarter')) ? 0 : subject.subjectGrade.fourthQuarter;\r\n\r\n    //leave blank all zero grades\r\n    if (firstQuarter === 0) {\r\n      firstQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (secondQuarter === 0) {\r\n      secondQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (thirdQuarter === 0) {\r\n      thirdQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (fourthQuarter === 0) {\r\n      fourthQuarter = '';\r\n      inComplete = true;\r\n    };\r\n\r\n    if (!inComplete && finalGrade >= 75) {\r\n      remarks = \"Passed\";\r\n    } else if (!inComplete && finalGrade < 75) {\r\n      remarks = \"Failed\";\r\n    } else {\r\n      remarks = '';\r\n    };;\r\n\r\n    return {\r\n      key: subject._id,\r\n      id: subject._id,\r\n      subject: subject.subjectName,\r\n      Quarter1st: firstQuarter,\r\n      Quarter2nd: secondQuarter,\r\n      Quarter3rd: thirdQuarter,\r\n      Quarter4th: fourthQuarter,\r\n      FinalGrade: (!inComplete) ? finalGrade : '',\r\n      Remarks: remarks\r\n    }\r\n  };\r\n\r\n  const getCurrentGradeUser = async (idNumber, level = '') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student);\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n\r\n      //remove mapeh\r\n      let mapehIndex = newArray.findIndex(topic => topic.subject === 'MAPEH');\r\n      newArray.splice(mapehIndex, 1);\r\n      buildObservedValues(result[0].observedValues);\r\n      buildOverallRemarks(newArray);\r\n      setSelectedGradeUser(newArray);\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedGradeUser([])\r\n    };\r\n\r\n  }\r\n\r\n  const loadGrades = async () => {\r\n    let finalOffspring = [];\r\n    let response = await gradesService.findAllGrades();\r\n    let parent = await userService.findAllUser();\r\n    let result = parent.data.filter(user => user.parent);\r\n    let newArray = [];\r\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\r\n    await response.data.map((user) => {\r\n      offspring.map((off) => {\r\n        if (user.student.idNumber === off.idNumber) {\r\n          finalOffspring.push(user)\r\n        }\r\n      });\r\n    });\r\n    newArray = finalOffspring.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.student.firstName,\r\n        lastName: user.student.lastName,\r\n        middleName: user.student.middleName,\r\n        idNumber: user.student.idNumber,\r\n        contactNumber: user.student.contactNumber,\r\n        email: user.student.email,\r\n        section: user.section,\r\n        gradeLevel: user.gradeLevel,\r\n        action:\r\n          <Button onClick={() => loadGrade(user, user.student.idNumber)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n\r\n    //filter users with its latest grade level\r\n    let list = [];\r\n\r\n    newArray.map(record => {\r\n      let recordIndex = list.findIndex(item => item?.idNumber === record.idNumber);\r\n      if (recordIndex === -1) {\r\n        list.push(record);\r\n      } else if (recordIndex !== -1) {\r\n        //replace record if not latest gardeLevel\r\n        if (list[recordIndex].gradeLevel < record.gradeLevel) {\r\n          list.splice(recordIndex, 1, record);\r\n        };\r\n      }\r\n    });\r\n\r\n    //marker\r\n    setGradeDetails({\r\n      list: list\r\n    });\r\n\r\n    filterCurrentGradeUser({ studentObj: (list[0]) ? list[0] : null });//marker2\r\n  };\r\n\r\n  const loadStudentGradesPerLevel = async (level = '') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.gradeLevel === level && user.status)\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.student.firstName,\r\n        lastName: user.student.lastName,\r\n        middleName: user.student.middleName,\r\n        idNumber: user.student.idNumber,\r\n        contactNumber: user.student.contactNumber,\r\n        email: user.student.email,\r\n        section: user.student.section,\r\n        action:\r\n          <Button onClick={() => {\r\n            setLoading(true);\r\n            setTimeout(() => { loadGrade(user, user.student.idNumber, level) }, 3500);\r\n            setTimeout(() => { setLoading(false); }, 3700);\r\n          }} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const loadGrades1 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('1');\r\n    setGrade1Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades2 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('2');\r\n    setGrade2Details({\r\n      list: newArray\r\n    })\r\n  };\r\n\r\n  const loadGrades3 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('3');\r\n    setGrade3Details({\r\n      list: newArray\r\n    });\r\n  };\r\n\r\n  const loadGrades4 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('4');\r\n    setGrade4Details({\r\n      list: newArray\r\n    });\r\n  }\r\n\r\n  const loadGrades5 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('5');\r\n    setGrade5Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades6 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('6');\r\n    setGrade6Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades7 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('7');\r\n    setGrade7Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades8 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('8');\r\n    setGrade8Details({\r\n      list: newArray\r\n    });\r\n  }\r\n\r\n  const loadGrades9 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('9');\r\n    setGrade9Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades10 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('10');\r\n    setGrade10Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadAdvisoryGrades = async () => {\r\n    let user = JSON.parse(sessionStorage.user);\r\n    const userData = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      middleName: user.middleName\r\n    };\r\n\r\n    try {\r\n      let advisory = await AdditionalService.getAdvisory(userData);\r\n\r\n      if (!advisory) return;\r\n\r\n      let response = await gradesService.findAllGrades(advisory.data.gradeLevel);\r\n      let result = response.data.filter(user => user.gradeLevel === advisory.data.gradeLevel && user.status)\r\n      let list = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.student.firstName,\r\n          lastName: user.student.lastName,\r\n          middleName: user.student.middleName,\r\n          idNumber: user.student.idNumber,\r\n          contactNumber: user.student.contactNumber,\r\n          email: user.student.email,\r\n          section: user.student.section,\r\n          action:\r\n            <Button onClick={() => loadGrade(user, user.student.idNumber, advisory.data.gradeLevel)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n\r\n      setAdvisoryGrades(list);\r\n    } catch (error) {\r\n    };\r\n  };\r\n\r\n  const addUpdateObservedValues = async values => {\r\n    setObservedValues(values);\r\n    let list = values.map(value => {\r\n      let valuesObj = {\r\n        value: value.key,\r\n        grades: {\r\n          q1: value.q1,\r\n          q2: value.q2,\r\n          q3: value.q3,\r\n          q4: value.q4\r\n        }\r\n      };\r\n\r\n      return valuesObj;\r\n    });\r\n\r\n    let paramsObj = {\r\n      idNumber: selectedGrade.student.idNumber,\r\n      gradeLevel: selectedGrade.gradeLevel,\r\n      observedValues: list\r\n    };\r\n\r\n    try {\r\n      let response = await gradesService.addUpdateObservedValues(paramsObj);\r\n\r\n      //add record  to audit trail\r\n      let loggedDate = new Date().toISOString();\r\n      let userDetails = {\r\n        user: JSON.parse(sessionStorage.user),\r\n        activity: 'Advisor teacher has updated student values grades',\r\n        date: loggedDate\r\n      };\r\n      await auditTrailService.add(userDetails);\r\n      return response.data;\r\n    } catch (error) {\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadGrades1();\r\n    loadGrades2();\r\n    loadGrades3();\r\n    loadGrades4();\r\n    loadGrades5();\r\n    loadGrades6();\r\n    loadGrades7();\r\n    loadGrades8();\r\n    loadGrades9();\r\n    loadGrades10();\r\n    loadGrades();\r\n    currentGradeUser();\r\n    getListOfTeacher();\r\n    loadAdvisoryGrades();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadGrades1,\r\n    grade2Details,\r\n    grade3Details,\r\n    grade4Details,\r\n    grade5Details,\r\n    grade6Details,\r\n    grade7Details,\r\n    grade8Details,\r\n    grade9Details,\r\n    grade10Details,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    gradeDetails,\r\n    selectedUserGrade,\r\n    showAllGradeVisible,\r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    advisoryGrades,\r\n    overAllGrade,\r\n    observedValues,\r\n    setObservedValues,\r\n    addUpdateObservedValues\r\n  }\r\n};\r\n\r\nexport default Grade1Action;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AttendanceTable = ({ details }) => {\r\n\r\n  const columns = [\r\n    {\r\n      title: <b></b>,\r\n      dataIndex: 'tag',\r\n    },\r\n    {\r\n      title: <b>Jun</b>,\r\n      dataIndex: 'Jun',\r\n    },\r\n    {\r\n      title: <b>Jul</b>,\r\n      dataIndex: 'Jul',\r\n    },\r\n    {\r\n      title: <b>Aug</b>,\r\n      dataIndex: 'Aug',\r\n    },\r\n    {\r\n      title: <b>Sep</b>,\r\n      dataIndex: 'Sep',\r\n    },\r\n    {\r\n      title: <b>Oct</b>,\r\n      dataIndex: 'Oct',\r\n    },\r\n    {\r\n      title: <b>Nov</b>,\r\n      dataIndex: 'Nov',\r\n    },\r\n    {\r\n      title: <b>Dec</b>,\r\n      dataIndex: 'Dec',\r\n    },\r\n    {\r\n      title: <b>Jan</b>,\r\n      dataIndex: 'Jan',\r\n    },\r\n    {\r\n      title: <b>Feb</b>,\r\n      dataIndex: 'Feb',\r\n    },\r\n    {\r\n      title: <b>Mar</b>,\r\n      dataIndex: 'Mar',\r\n    },\r\n    {\r\n      title: <b>Apr</b>,\r\n      dataIndex: 'Apr',\r\n    },\r\n    {\r\n      title: <b>Total</b>,\r\n      dataIndex: 'total',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Table columns={columns} dataSource={details} pagination={false}/>\r\n  );\r\n}\r\n\r\nexport default AttendanceTable;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst CustomTable = ({ details = [], headers = [] }) => {\r\n  const columns = headers.map(head => {\r\n    let headerObj = {\r\n      title: <b>{head.title}</b>,\r\n      dataIndex: head.field,\r\n      width: (head.width) ? head.width : '',\r\n      render(value) {\r\n        return {\r\n          props: {\r\n            style: { color: (head.withCondition) ? head.withCondition(value) : '' }\r\n          },\r\n          children: <div>{value}</div>\r\n        }\r\n      }\r\n    };\r\n\r\n    return headerObj;\r\n  });\r\n\r\n  return (\r\n    <Table columns={columns} dataSource={details} pagination={false} />\r\n  );\r\n}\r\n\r\nexport default CustomTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin, notification } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport UserForm from './userDetailsForm'\r\nimport UserTable from './gradeTable'\r\nimport GradeAction from '../grade/gradeAction'\r\nimport AdvisorAction from '../grade/advisoryAction'\r\nimport AttendanceTable from './attendanceTable';\r\nimport AttendanceAction from './attendanceAction';\r\nimport ValuesTable from './valuesTable';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst EmployeePage = ({ isParent = false }) => {\r\n\r\n  let {\r\n    selectedGrade,\r\n    gradeDetails, //child or children list\r\n    selectedUserGrade,\r\n    selectedUser,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues,\r\n  } = GradeAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n\r\n  let loadAttendance = async () => {\r\n    let user = JSON.parse(sessionStorage.user);\r\n    await getAttendance(user.idNumber);\r\n  };\r\n\r\n  if (attendances.length === 0) loadAttendance();\r\n\r\n  const filterChild = async ({idNumber='', gradeLevel=''}) => {\r\n    let student = (idNumber !=='') ? gradeDetails.list.find(student => student.idNumber === idNumber) : selectedUser;\r\n    let level = (gradeLevel !=='') ? gradeLevel : student.gradeLevel;\r\n    await filterCurrentGradeUser({ gradeLevel: level, studentObj: student });\r\n  };\r\n\r\n  const renderChildrenDropdown = () => {\r\n    return gradeDetails.list.map((child) => {\r\n      return <Option value={child.idNumber} key={child.idNumber}>\r\n        {child.firstName + \" \" + child.lastName}\r\n      </Option>\r\n    })\r\n  };\r\n\r\n  const renderChildLevels = () => {\r\n    return selectedUser.gradeLevelList.map((level) => {\r\n      return <Option value={level} key={level} >{level}</Option>\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Student Details</Typography.Title>\r\n            }>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <p>\r\n             \r\n                    <b>Full Name: </b>\r\n                    {isParent ?\r\n                      (\r\n                        <Select\r\n                          id=\"studentSelect\"\r\n                          className=\"ml-15\"\r\n                          placeholder=\"\"\r\n                          value={selectedUser.idNumber}\r\n                          onChange={(value) => { filterChild({idNumber: value}) }}\r\n                          style={{ width: '300px' }}>\r\n                          { renderChildrenDropdown()}\r\n                        </Select>\r\n                      ) :\r\n                      <>\r\n                        {selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName : null}\r\n                      </>\r\n                    }\r\n                  </p>\r\n                  <p>\r\n                    <b>Grade Level: </b>{selectedUser.gradeLevel ? selectedUser.gradeLevel : JSON.parse(sessionStorage.user).gradeLevel}\r\n                  </p>\r\n                  <p>\r\n                    <b>Section: </b>{selectedUser ? selectedUser.section : null}\r\n                  </p>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName : null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber : null}\r\n                  </p>\r\n                  <b>Yr./Lvl: </b>\r\n                  <Select \r\n                    className=\"ml-15\"\r\n                    value={selectedUser.gradeLevel}\r\n                    style={{ width: '70px' }}\r\n                    onChange={(value) => filterCurrentGradeUser({studentObj: selectedUser, gradeLevel: value })}>\r\n                    { selectedUser.gradeLevelList ? renderChildLevels() : ''}\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <UserTable details={selectedUserGrade ? selectedUserGrade : []} />\r\n          </Col>\r\n          <Row>\r\n            <Typography.Title level={5}\r\n              style={{ marginLeft: '20px', paddingBottom: '50px', marginTop: '15px', textAlign: 'left' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Attendance Record</Typography.Title>\r\n            }>\r\n              <AttendanceTable details={attendances}></AttendanceTable>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Learner's Observed Values</Typography.Title>\r\n            }>\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n            <Row>\r\n              <Col lg={{ span: \"12\" }}>\r\n                <Card className=\"ml-15\">\r\n                  <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n                </Card>\r\n              </Col>\r\n              <Col lg={{ span: \"12\" }}>\r\n                <Card className=\"ml-15\">\r\n                  <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card >\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Collapse } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\n\r\nconst Grade1EditForm = ({ upgradeStudent, add, update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel, isAdviser = false }) => {\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  const userRole = JSON.parse(sessionStorage.user).role;\r\n\r\n  let lowestGrade = 50;\r\n  const hasUpdate = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n\r\n    if (subject && subject.recommendedGrade && subject.recommendedGrade[quarter] && subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter]) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  let updatesHolder = {};\r\n  let mapehObj = {\r\n    MAPEH1: 0,\r\n    MAPEH2: 0,\r\n    MAPEH3: 0,\r\n    MAPEH4: 0\r\n  };\r\n\r\n  const autoFillGrade = (subjectName = '', quarter = '', field = '', isDefault = false, quarterNum = 0) => {\r\n    let activeQuarter = sessionStorage.quarter;\r\n    let index = selectedGrade.subjects.findIndex(subject => subject.subjectName === subjectName);\r\n    let value = (selectedGrade.subjects[index] && selectedGrade.subjects[index].recommendedGrade) ? selectedGrade.subjects[index].recommendedGrade[quarter] : null;\r\n    let dafaultVal = (selectedGrade.subjects[index]) ? selectedGrade.subjects[index].subjectGrade[quarter] : lowestGrade;\r\n    dafaultVal = (dafaultVal && dafaultVal >= 50) ? dafaultVal : (activeQuarter === quarterNum) ? lowestGrade : 0;\r\n    value = (isDefault) ? dafaultVal : value;\r\n    let holder = {\r\n      [field]: value\r\n    };\r\n    updatesHolder = Object.assign(updatesHolder, holder);\r\n    return value;\r\n  };\r\n\r\n  //used to get the confirmed grades\r\n  const getGrade = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n    if (subject) {\r\n      return subject.subjectGrade[quarter];\r\n    } else {\r\n      return '0';\r\n    };\r\n  };\r\n\r\n  // const getMAPEHGrades = (quarter) => {\r\n  //   let q1 = document.getElementbyId('Music' + quarter).value;\r\n  //   let q2 = document.getElementbyId('Art' + quarter).value;\r\n  //   let q3 = document.getElementbyId('PE' + quarter).value;\r\n  //   let q4 = document.getElementbyId('Health' + quarter).value;\r\n  //   let average = (q1 + q2 + q3 + q4) / 4;\r\n  //   let key = 'MAPEH' + quarter;\r\n  //   mapehObj[key] = average;\r\n  // };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedGrade}\r\n      enableReinitialize={true}\r\n      onSubmit={async inputValues => {\r\n\r\n        let values = {};\r\n        values = Object.assign(values, updatesHolder);\r\n        values = Object.assign(values, inputValues);\r\n\r\n        let newValues = {\r\n          _id: values._id\r\n        };\r\n        let English = {};\r\n        let Filipino = {};\r\n        let Science = {};\r\n        let Math = {};\r\n        let MAPEH = {};\r\n        let Values = {};\r\n        let Music = {};\r\n        let Art = {};\r\n        let PE = {};\r\n        let Health = {};\r\n\r\n        if (values.English1 || values.English2 || values.English3 || values.English4) {\r\n          English = {\r\n            firstQuarter: values.English1,\r\n            secondQuarter: values.English2,\r\n            thirdQuarter: values.English3,\r\n            fourthQuarter: values.English4\r\n          }\r\n          newValues.English = English;\r\n        }\r\n        if (values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\r\n          Filipino = {\r\n            firstQuarter: values.Filipino1,\r\n            secondQuarter: values.Filipino2,\r\n            thirdQuarter: values.Filipino3,\r\n            fourthQuarter: values.Filipino4\r\n          }\r\n          newValues.Filipino = Filipino;\r\n        }\r\n        if (values.Science1 || values.Science2 || values.Science3 || values.Science4) {\r\n          Science = {\r\n            firstQuarter: values.Science1,\r\n            secondQuarter: values.Science2,\r\n            thirdQuarter: values.Science3,\r\n            fourthQuarter: values.Science4\r\n          }\r\n          newValues.Science = Science;\r\n        }\r\n        if (values.Math1 || values.Math2 || values.Math3 || values.Math4) {\r\n          Math = {\r\n            firstQuarter: values.Math1,\r\n            secondQuarter: values.Math2,\r\n            thirdQuarter: values.Math3,\r\n            fourthQuarter: values.Math4\r\n          }\r\n          newValues.Math = Math;\r\n        }\r\n        if (values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\r\n          MAPEH = {\r\n            firstQuarter: values.MAPEH1,\r\n            secondQuarter: values.MAPEH2,\r\n            thirdQuarter: values.MAPEH3,\r\n            fourthQuarter: values.MAPEH4\r\n          }\r\n          newValues.MAPEH = MAPEH;\r\n        }\r\n        if (values.Values1 || values.Values2 || values.Values3 || values.Values4) {\r\n          Values = {\r\n            firstQuarter: values.Values1,\r\n            secondQuarter: values.Values2,\r\n            thirdQuarter: values.Values3,\r\n            fourthQuarter: values.Values4\r\n          }\r\n          newValues.Values = Values;\r\n        };\r\n\r\n        if (values.Music1 || values.Music2 || values.Music3 || values.Music4) {\r\n          Music = {\r\n            firstQuarter: values.Music1,\r\n            secondQuarter: values.Music2,\r\n            thirdQuarter: values.Music3,\r\n            fourthQuarter: values.Music4\r\n          }\r\n          newValues.Music = Music;\r\n        };\r\n\r\n        if (values.Art1 || values.Art2 || values.Art3 || values.Art4) {\r\n          Art = {\r\n            firstQuarter: values.Art1,\r\n            secondQuarter: values.Art2,\r\n            thirdQuarter: values.Art3,\r\n            fourthQuarter: values.Art4\r\n          }\r\n          newValues.Art = Art;\r\n        };\r\n\r\n        if (values.PE1 || values.PE2 || values.PE3 || values.PE4) {\r\n          PE = {\r\n            firstQuarter: values.PE1,\r\n            secondQuarter: values.PE2,\r\n            thirdQuarter: values.PE3,\r\n            fourthQuarter: values.PE4\r\n          }\r\n          newValues.PE = PE;\r\n        };\r\n\r\n        if (values.Health1 || values.Health2 || values.Health3 || values.Health4) {\r\n          Health = {\r\n            firstQuarter: values.Health1,\r\n            secondQuarter: values.Health2,\r\n            thirdQuarter: values.Health3,\r\n            fourthQuarter: values.Health4\r\n          }\r\n          newValues.Health = Health;\r\n        };\r\n        update(newValues, isAdviser);\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\" >\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                  <Input disabled={true} value={values.student.idNumber} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"Name\" name=\"name\">\r\n                  <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                  <Input disabled={true} name=\"schoolYear\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects[0] &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"English\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"English1\"\r\n                              defaultValue={hasUpdate('English', 'firstQuarter') ?\r\n                                autoFillGrade('English', 'firstQuarter', 'English1') :\r\n                                autoFillGrade('English', 'firstQuarter', 'English1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"English2\"\r\n                              defaultValue={hasUpdate('English', 'secondQuarter') ?\r\n                                autoFillGrade('English', 'secondQuarter', 'English2') :\r\n                                autoFillGrade('English', 'secondQuarter', 'English2', true, '2')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"English3\"\r\n                              defaultValue={hasUpdate('English', 'thirdQuarter') ?\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3') :\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3', true, '3')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"English4\"\r\n                              defaultValue={hasUpdate('English', 'fourthQuarter') ?\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4') :\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4', true, '4')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[1] &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Filipino\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Filipino1\"\r\n                              defaultValue={hasUpdate('Filipino', 'firstQuarter') ?\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1') :\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Filipino2\"\r\n                              defaultValue={hasUpdate('Filipino', 'secondQuarter') ?\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2') :\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2', true, '2')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Filipino3\"\r\n                              defaultValue={hasUpdate('Filipino', 'thirdQuarter') ?\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3') :\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3', true, '3')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Filipino4\"\r\n                              defaultValue={hasUpdate('Filipino', 'fourthQuarter') ?\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4') :\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4', true, '4')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects.length !== 0 &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Science\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Science1\"\r\n                              defaultValue={hasUpdate('Science', 'firstQuarter') ?\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1') :\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Science2\"\r\n                              defaultValue={hasUpdate('Science', 'secondQuarter') ?\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2') :\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Science3\"\r\n                              defaultValue={hasUpdate('Science', 'thirdQuarter') ?\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3') :\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Science4\"\r\n                              defaultValue={hasUpdate('Science', 'fourthQuarter') ?\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4') :\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[3] &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Math\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Math1\"\r\n                              defaultValue={hasUpdate('Math', 'firstQuarter') ?\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1') :\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Math2\"\r\n                              defaultValue={hasUpdate('Math', 'secondQuarter') ?\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2') :\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Math3\"\r\n                              defaultValue={hasUpdate('Math', 'thirdQuarter') ?\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3') :\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Math4\"\r\n                              defaultValue={hasUpdate('Math', 'fourthQuarter') ?\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4') :\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4', true, 4)\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {/* {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[4] &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"MAPEH\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"MAPEH1\"\r\n                              defaultValue={hasUpdate('MAPEH', 'firstQuarter') ?\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1') :\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"MAPEH2\"\r\n                              defaultValue={hasUpdate('MAPEH', 'secondQuarter') ?\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2') :\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"MAPEH3\"\r\n                              defaultValue={hasUpdate('MAPEH', 'thirdQuarter') ?\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3') :\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"MAPEH4\"\r\n                              defaultValue={hasUpdate('MAPEH', 'fourthQuarter') ?\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4') :\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null} */}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[5] &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Values\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Values1\"\r\n                              defaultValue={hasUpdate('Values', 'firstQuarter') ?\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1') :\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Values2\"\r\n                              defaultValue={hasUpdate('Values', 'secondQuarter') ?\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2') :\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Values3\"\r\n                              defaultValue={hasUpdate('Values', 'thirdQuarter') ?\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Values4\"\r\n                              defaultValue={hasUpdate('Values', 'fourthQuarter') ?\r\n                                autoFillGrade('Values', 'fourthQuarter', 'Values4') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              {/*============================================================================ */}\r\n              {(isAdviser ||\r\n                selectedTeacherAssignedGrade.subjects[4] &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                ? (\r\n                  <React.Fragment>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"Music\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Music1\"\r\n                                  defaultValue={hasUpdate('Music', 'firstQuarter') ?\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1') :\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Music2\"\r\n                                  defaultValue={hasUpdate('Music', 'secondQuarter') ?\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2') :\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Music3\"\r\n                                  defaultValue={hasUpdate('Music', 'thirdQuarter') ?\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3') :\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Music4\"\r\n                                  defaultValue={hasUpdate('Music', 'fourthQuarter') ?\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4') :\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Art\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Art1\"\r\n                                  defaultValue={hasUpdate('Art', 'firstQuarter') ?\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1') :\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Art2\"\r\n                                  defaultValue={hasUpdate('Art', 'secondQuarter') ?\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2') :\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Art3\"\r\n                                  defaultValue={hasUpdate('Art', 'thirdQuarter') ?\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Art4\"\r\n                                  defaultValue={hasUpdate('Art', 'fourthQuarter') ?\r\n                                    autoFillGrade('Art', 'fourthQuarter', 'Art4') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"PE\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"PE1\"\r\n                                  defaultValue={hasUpdate('PE', 'firstQuarter') ?\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1') :\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"PE2\"\r\n                                  defaultValue={hasUpdate('PE', 'secondQuarter') ?\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2') :\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"PE3\"\r\n                                  defaultValue={hasUpdate('PE', 'thirdQuarter') ?\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3') :\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"PE4\"\r\n                                  defaultValue={hasUpdate('PE', 'fourthQuarter') ?\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4') :\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Health\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Health1\"\r\n                                  defaultValue={hasUpdate('Health', 'firstQuarter') ?\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1') :\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Health2\"\r\n                                  defaultValue={hasUpdate('Health', 'secondQuarter') ?\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2') :\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Health3\"\r\n                                  defaultValue={hasUpdate('Health', 'thirdQuarter') ?\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3') :\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Health4\"\r\n                                  defaultValue={hasUpdate('Health', 'fourthQuarter') ?\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4') :\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                ) : ('')}\r\n              {/*============================================================================ */}\r\n            </>\r\n            {userRole === 'Teacher' ? (\r\n              <Button className=\"btn-save\" htmlType=\"submit\">\r\n                <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n              </Button>\r\n            ) : ('')}\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default Grade1EditForm;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel) \r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"English\" name=\"english\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Filipino\" name=\"filipino\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Science\" name=\"science\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Math\" name=\"math\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Values\" name=\"values\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled, DeleteOutlined } from '@ant-design/icons';\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n  let {\r\n    deleteAdvisory\r\n  } = AdvisorAction({});\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={24}>\r\n            <Form.Item label=\"Advisor\" name=\"advisor\">\r\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n                 { selectedTeacherAssgined ? (\r\n                    <Button type=\"danger\" style={{ marginLeft: '10px' }} ghost htmlType=\"button\" onClick={() => deleteAdvisory(selectedTeacherAssgined._id)}>\r\n                      <DeleteOutlined /> Remove Advisor\r\n                    </Button>\r\n                  ) : ('') }\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;\r\n","import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './custom.css';\r\nimport { Table, Popconfirm, Form, Typography, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const renderMarkings = (list=[]) => {\r\n    return list.map((mark) => {\r\n      return <Option value={mark} key={mark} >{mark}</Option>\r\n    });\r\n  };\r\n  const inputNode = (list=[]) => {\r\n    return (\r\n      <Select style={{ minWidth: \"65.8px\", maxWidth: \"150px\" }}>\r\n        {renderMarkings(list)};\r\n      </Select>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n        >\r\n          {inputNode(record?.dropdownList)}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = ({ details = [], headers = [], setData }) => {\r\n  const [form] = Form.useForm();\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      q1: '',\r\n      q2: '',\r\n      q3: '',\r\n      q4: '',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...details];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        await setData(newData);\r\n\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        await setData(newData);\r\n\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const operationColumn = {\r\n    title: 'operation',\r\n    dataIndex: 'operation',\r\n    render: (_, record) => {\r\n      const editable = isEditing(record);\r\n      return editable ? (\r\n        <span>\r\n          <a\r\n            href=\"javascript:;\"\r\n            onClick={() => save(record.key)}\r\n            style={{\r\n              marginRight: 8,\r\n            }}\r\n          >\r\n            Save\r\n          </a>\r\n          <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n            <a>Cancel</a>\r\n          </Popconfirm>\r\n        </span>\r\n      ) : (\r\n        <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n          Edit\r\n        </Typography.Link>\r\n      );\r\n    },\r\n  };\r\n\r\n  const columns = headers.concat([operationColumn]);\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    };\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n        style: { color: (col.withCondition) ? col.withCondition(record[col.dataIndex]) : '' }\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={details}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditableTable;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import BaseService from '../../baseService';\r\nclass TeacherService extends BaseService {\r\n  constructor() {\r\n    super('teacher');\r\n  }\r\n\r\n  add = teacherObj => {\r\n    return this.axiosInstance.post('/create-teacher', teacherObj);\r\n  };\r\n\r\n  update = teacherObj => {\r\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-teacher/' + id);\r\n  };\r\n\r\n  findAllTeacher = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new TeacherService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport teacherService from '../grade/teacherService';\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState({});\r\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\r\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\r\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\r\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\r\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\r\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\r\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\r\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\r\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\r\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\r\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\r\n\r\n  const add = async (values, gradeLevel) => {\r\n    let English = await userService.findyById(values.english)\r\n    let Filipino = await userService.findyById(values.filipino)\r\n    let Science = await userService.findyById(values.science)\r\n    let Math = await userService.findyById(values.math)\r\n    let Values = await userService.findyById(values.values)\r\n    let Mapeh = await userService.findyById(values.mapeh)\r\n    let finalAddValue = {\r\n        gradeLevel : gradeLevel,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            teacher: English.data\r\n            },\r\n            {\r\n            subjectName: \"Filipino\",\r\n            teacher: Filipino.data\r\n            },\r\n            {\r\n            subjectName: \"Science\",\r\n            teacher: Science.data\r\n            },   \r\n            {\r\n            subjectName: \"Math\",\r\n            teacher: Math.data\r\n            },   \r\n            {\r\n            subjectName: \"Values\",\r\n            teacher: Values.data\r\n            },     \r\n            {\r\n            subjectName: \"Mapeh\",\r\n            teacher: Mapeh.data\r\n            },                                                    \r\n        ]\r\n    }\r\n    let response = teacherService.add(finalAddValue)\r\n    window.location.reload()\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setSelectedTeacherAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setSelectedTeacherAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setSelectedTeacherAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setSelectedTeacherAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setSelectedTeacherAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setSelectedTeacherAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setSelectedTeacherAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setSelectedTeacherAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setSelectedTeacherAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setSelectedTeacherAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideTeacher = async () => {\r\n    setShowTeacherVisible(false)\r\n  };\r\n\r\n  const showTeacher = async (gradeLevel) => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setSelectedTeacherAssgined(result[0].subjects)\r\n    } else {\r\n        setSelectedTeacherAssgined({})\r\n    }\r\n    setShowTeacherVisible(true)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    selectedTeacher,\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport EditableTable from '../shared/editableTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst AdvisoryGrades = () => {\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    advisoryGrades,\r\n    overAllGrade,\r\n    observedValues,\r\n    addUpdateObservedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Advisory Grades Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={advisoryGrades} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm\r\n            upgradeStudent={upgradeStudent}\r\n            add={addGrade} update={editGrade}\r\n            selectedTeacher={selectedTeacher}\r\n            selectedGrade={selectedGrade}\r\n            gradeLevel={\"2\"}\r\n            selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2}\r\n            isAdviser=\"true\" />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n            <Row />\r\n            <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n              <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n                Student Attendance\r\n              </Typography.Title>\r\n              <AttendanceTable details={attendances} />\r\n            </Row>\r\n            <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n              <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n              <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n                <EditableTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER} setData={addUpdateObservedValues}></EditableTable>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n              <Col lg={{ span: \"11\" }}>\r\n                <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n              </Col>\r\n              <Col lg={{ span: \"11\", offset:\"1\" }}>\r\n                <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n              </Col>\r\n            </Row>\r\n          </Row>\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default AdvisoryGrades;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\n\r\nimport GradeAction from './gradeAction'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AdvisorAction from './advisoryAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\r\n                <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }}  lg={{ span: \"24\" }}>\r\n              General Average :\r\n              { overAllGrade ? (\r\n                <>\r\n                 <span style={{marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ? \r\n                  'red': '' }}>{ overAllGrade.finalGrade }</span>\r\n                 <span style={{marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                  'red': '' }}>{ overAllGrade.remarks }</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 1\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 1\r\n                  </Typography.Title>\r\n          }\r\n          width={500}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"1\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\r\n              <PlusCircleOutlined type=\"add-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\r\n              <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                < RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 2\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 2\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"2\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade3Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n            </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 3\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 3\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"3\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade4Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 4\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 4\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"4\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade5Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 5\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 5\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"5\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade6Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 6\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 6\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"6\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade7Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 7\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Drawer>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 7\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"7\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade8Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 8\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 8\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"8\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade9Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 9\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 9\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"9\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AttendanceTable from '../userDetails/attendanceTable';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade10Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n  let loadAttendance = async () => {\r\n    if (!selectedGrade.student) return;\r\n    await getAttendance(selectedGrade.student.idNumber);\r\n  };\r\n\r\n  loadAttendance();\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Promote\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={950}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>\r\n              Student Attendance\r\n              </Typography.Title>\r\n            <AttendanceTable details={attendances} />\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '15px', textAlign: 'left' }}>\r\n            <Typography.Title level={5} style={{ marginLeft: '20px' }} lg={{ span: \"24\" }}>Learner's Observed Values</Typography.Title>\r\n            <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: '35px', marginTop: '5px', textAlign: 'left', width: \"100%\" }}>\r\n            <Col lg={{ span: \"11\" }}>\r\n              <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n            </Col>\r\n            <Col lg={{ span: \"11\", offset: \"1\" }}>\r\n              <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n            </Col>\r\n          </Row>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 10\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 10\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"10\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst Grade1EditForm = ({selectedOffspring }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedOffspring}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n                  {console.log(selectedOffspring)}\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>     \r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\r\n                        <Input disabled={true} name=\"gradeLevel\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>                     \r\n                  <Row gutter={16}>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                   \r\n                     <Col span={12}>\r\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                     <Col span={12}>\r\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Name</b>,\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: <b>ID Number</b>,\r\n        dataIndex: 'idNumber',\r\n     },\r\n      {\r\n         title: <b>Time In</b>,\r\n         dataIndex: 'timeIn',\r\n      },\r\n      {\r\n         title: <b>Time Out</b>,\r\n         dataIndex: 'timeOut',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('timekeeping');\r\n  }\r\n\r\n  add = timekeepingObj => {\r\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\r\n  };\r\n\r\n  update = timekeepingObj => {\r\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\r\n  };\r\n\r\n  findAllTimekeeping = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport TimekeepingService from './timeKeepingService';\r\nimport moment from 'moment';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\r\n  let [timeIn, setTimeIn] = useState(new Date());\r\n  let [timeOut, setTimeOut] = useState(new Date())\r\n\r\n  const filterUsers = async (date) => {\r\n    if(date){\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\r\n      let newArray = await result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } else {\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let newArray = await response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } \r\n\r\n  }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await TimekeepingService.findAllTimekeeping();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        name: user.student.firstName + \" \" + user.student.lastName,\r\n        idNumber: user.student.idNumber,\r\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n    }\r\n    })\r\n    setUserDetails({list: newArray});\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n}, []);\r\n\r\n\r\n  return {\r\n    userDetails,\r\n    filterUsers\r\n  }\r\n};\r\n\r\nexport default UserAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport TimekeepingTable from './timeKeepingTable'\r\nimport AttendanceAction from './AttendanceAction'\r\nconst {Option} = Select;\r\n\r\nconst TimekeepingPage = () => {\r\n    let{\r\n        userDetails  ,\r\n        filterUsers\r\n    } = AttendanceAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\r\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"January\">January</Option>\r\n          <Option value=\"Febuary\">Febuary</Option>\r\n          <Option value=\"March\">March</Option>\r\n          <Option value=\"April\">April</Option>\r\n          <Option value=\"May\">May</Option>\r\n          <Option value=\"June\">June</Option>\r\n          <Option value=\"July\">July</Option>\r\n          <Option value=\"August\">August</Option>\r\n          <Option value=\"September\">September</Option>\r\n          <Option value=\"October\">October</Option>\r\n          <Option value=\"November\">November</Option>\r\n          <Option value=\"December\">December</Option>\r\n        </Select>\r\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"1\">1</Option>\r\n          <Option value=\"2\">2</Option>\r\n          <Option value=\"3\">3</Option>\r\n          <Option value=\"4\">4</Option>\r\n          <Option value=\"5\">5</Option>\r\n          <Option value=\"6\">6</Option>\r\n          <Option value=\"7\">7</Option>\r\n          <Option value=\"8\">8</Option>\r\n          <Option value=\"9\">9</Option>\r\n          <Option value=\"10\">10</Option>\r\n          <Option value=\"11\">11</Option>\r\n          <Option value=\"12\">12</Option>\r\n          <Option value=\"13\">13</Option>\r\n          <Option value=\"14\">14</Option>\r\n          <Option value=\"15\">15</Option>\r\n          <Option value=\"16\">16</Option>\r\n          <Option value=\"17\">17</Option>\r\n          <Option value=\"18\">18</Option>\r\n          <Option value=\"19\">19</Option>\r\n          <Option value=\"20\">20</Option>\r\n          <Option value=\"21\">21</Option>\r\n          <Option value=\"22\">22</Option>\r\n          <Option value=\"23\">23</Option>\r\n          <Option value=\"24\">24</Option>\r\n          <Option value=\"25\">25</Option>\r\n          <Option value=\"26\">26</Option>\r\n          <Option value=\"27\">27</Option>\r\n          <Option value=\"28\">28</Option>\r\n          <Option value=\"29\">29</Option>\r\n          <Option value=\"30\">30</Option>\r\n          <Option value=\"31\">31</Option>\r\n        </Select>\r\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\r\n        </Col>\r\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <TimekeepingTable details={userDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default TimekeepingPage;\r\n\r\n","import React from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\n\r\nconst LoginForm = ({login}) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            username: \"\",\r\n            password: \"\"\r\n         }}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values, actions) => {\r\n             login(values)\r\n            // await login(values)\r\n            // actions.setSubmitting(false);\r\n         }}\r\n         render={\r\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\r\n               <Spin spinning={isSubmitting}>\r\n                  <Form className=\"mt-10P\">\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              USERNAME:\r\n                           </b>\r\n                           <Form.Item name=\"username\">\r\n                              <Input name=\"username\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              PASSWORD:\r\n                           </b>\r\n                           <Form.Item name=\"password\">\r\n                              <Input.Password name=\"password\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\r\n                              Login\r\n                        </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </Spin>\r\n            )}\r\n      />\r\n   );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\r\n\r\nimport '../../App.css';\r\nimport LoginForm from './loginForm';\r\nimport UserAction from '../user/userAction'\r\n\r\nconst version = process.env.REACT_APP_VERSION\r\n\r\n\r\nconst Login = () => {\r\n    let [showLogin, setShowLogin] = useState(false);\r\n    let [showContact, setShowContact] = useState(false);\r\n    let [showAboutUs, setShowAboutUs] = useState(false);\r\n    let [showHome, setShowHome] = useState(true);\r\n    const {Content} = Layout;\r\n    let {\r\n        login,\r\n        loginCounter\r\n      } = UserAction({});\r\n    \r\n    const loginUser = async (credentials) => {\r\n        login(credentials);\r\n    }\r\n\r\n    const loginFunction = async () => {\r\n        setShowHome(false)\r\n        setShowLogin(true)\r\n    }\r\n\r\n    const contactFunction = async () => {\r\n        setShowHome(false)\r\n        setShowContact(true)\r\n    }\r\n\r\n    const aboutUsFunction = async () => {\r\n        setShowHome(false)\r\n        setShowAboutUs(true)\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"login\">\r\n            {/* Landing Page */}\r\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\r\n                <Row className=\"center\">\r\n                    <Col>\r\n                        <Button className=\"btn-home mr-10\">HOME</Button>\r\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\r\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\r\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Content> : null}\r\n            \r\n\r\n            {/* Login Page */}\r\n            {showLogin \r\n            \r\n            ?             <Content className=\"contentLogin mt-5P\">\r\n            <div className=\"center mb-15\">\r\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\r\n            </div>\r\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\r\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\r\n            <Row className=\"mt-10 center\">\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\r\n                    <LoginForm login={loginUser}/>\r\n                </Col>\r\n            </Row>\r\n        </Content> : null}\r\n\r\n\r\n             {/* Contact Page */}\r\n            {showContact ?            <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center mb-40\">\r\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    <b>Telephone Number:</b> 8 245 4148<br/>\r\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\r\n                    <b>Email Address: </b>\r\n                    <u className=\"blue\">\r\n                        admission.snss@gmail.com\r\n                    </u>\r\n                </Typography>\r\n            </Content>:null}\r\n \r\n\r\n\r\n            {/* About Page */}\r\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center h-70 mb-35\">\r\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\r\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\r\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\r\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\r\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\r\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \r\n                </Typography>\r\n            </Content> : null}\r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\r\n\r\nimport {\r\n  UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\r\n} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\nconst SiderMenu = ({ theme, collapsed }) => {\r\n  return (\r\n    <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 1 Management</span>\r\n              <Link to={'/grade1'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 2 Management</span>\r\n              <Link to={'/grade2'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 3 Management</span>\r\n              <Link to={'/grade3'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 4 Management</span>\r\n              <Link to={'/grade4'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 5 Management</span>\r\n              <Link to={'/grade5'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 6 Management</span>\r\n              <Link to={'/grade6'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 7 Management</span>\r\n              <Link to={'/grade7'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 8 Management</span>\r\n              <Link to={'/grade8'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 9 Management</span>\r\n              <Link to={'/grade9'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 10 Management</span>\r\n              <Link to={'/grade10'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n        </SubMenu> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n        <Menu.Item key=\"dashboard\" className=\"menus\">\r\n          <DashboardOutlined />\r\n          <span className=\"fs-13\">Dashboard</span>\r\n          <Link to={'/dashboard'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n            <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Admin</span>\r\n              <Link to={'/admin'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n            <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Parent</span>\r\n              <Link to={'/parent'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Student</span>\r\n              <Link to={'/student'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n            <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Teacher</span>\r\n              <Link to={'/teacher'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n        </SubMenu> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <Menu.Item key=\"timekeeping\" className=\"menus\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Student Attendance</span>\r\n          <Link to={'/timekeeping'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n        <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Student Grade</span>\r\n          <Link to={'/offspring'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n        <Menu.Item key=\"auditTrail\" className=\"menus\">\r\n          <AuditOutlined />\r\n          <span className=\"fs-13\">Audit Trail</span>\r\n          <Link to={'/auditTrail'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <Menu.Item key=\"advisoryClass\" className=\"menus\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Advisory Class</span>\r\n          <Link to={'/advisoryclass'} className=\"nav-link\" />\r\n        </Menu.Item> :\r\n        null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n        <Menu.Item key=\"clearance\" className=\"menus\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Clearance</span>\r\n          <Link to={'/clearance'} className=\"nav-link\" />\r\n        </Menu.Item> :\r\n        null}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default SiderMenu;\r\n","import {createContext} from 'react';\r\n\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\r\nimport {  Menu } from 'antd';\r\nimport { UserContext } from './userContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    LogoutOutlined,\r\n    SettingOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst UserMenu = () => {\r\n\r\n   const { setLoggedUser } = useContext(UserContext);\r\n\r\n   const logout = async () => {\r\n    sessionStorage.removeItem('user');\r\n    window.location.reload(false);\r\n    //   setLoggedUser(null);\r\n    //   sessionStorage.removeItem('token');\r\n    //   sessionStorage.removeItem('user');\r\n   }\r\n\r\n   return (\r\n      <Menu className=\"mt-20\">\r\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\r\n            <LogoutOutlined />Logout\r\n         </Menu.Item>\r\n         <Menu.Item className=\"dropdown-item\">\r\n            <SettingOutlined /> Settings\r\n            <Link to={'/settings'} className=\"nav-link\" />\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AuditTrailTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: 'Name',\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n         title: 'Activity',\r\n         dataIndex: 'activity',\r\n      },\r\n      {\r\n         title: 'Role',\r\n         dataIndex: 'role',\r\n      },\r\n      {\r\n         title: 'Date',\r\n         dataIndex: 'date',\r\n      },\r\n\r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\r\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\r\n\r\n    const addAudit = async values => {\r\n    let finalAudit = {\r\n        user : values.user,\r\n        activity: values.activity,\r\n        date: values.date,\r\n    }\r\n    let response = auditTrailService.add(finalAudit)\r\n    };\r\n    \r\n    const getListOfAudit = async () => {\r\n      let response = await auditTrailService.findAllAudit();\r\n      let newArray = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format('MMMM Do YYYY'),\r\n          role: user.user.role,\r\n          activity: user.activity,\r\n        }\r\n      })\r\n      setAuditTrailDetails({list: newArray})\r\n    };\r\n\r\n    const filterAudit = async ({date, role}) => {\r\n      let datas = [];\r\n      if (date) {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = await response.data.filter(\r\n          (user) =>\r\n            moment(user.date).format(\"MMMM Do YYYY\") ===\r\n            moment(date).format(\"MMMM Do YYYY\")\r\n        );\r\n      } else {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = response.data;\r\n      };\r\n\r\n      if (role) {\r\n        datas = datas.filter(data => data.user.role === role);\r\n      };\r\n\r\n      let newArray = await datas.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\r\n          role: user.user.role,\r\n          activity: user.activity\r\n        };\r\n      });\r\n\r\n    setAuditTrailDetails({ list: newArray });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getListOfAudit();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    addAudit,\r\n    auditTrailDetails,\r\n    filterAudit\r\n  }\r\n};\r\n\r\nexport default AuditTrailAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport AuditTrailTable from './auditTrailTable'\r\nimport AuditTrailAction from './auditTrailAction'\r\nconst { Option } = Select;\r\n\r\nconst AuditTrailPage = () => {\r\n  let { auditTrailDetails, filterAudit } = AuditTrailAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">\r\n            Audit Trail\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n          <DatePicker\r\n            id=\"filterDate\"\r\n            className=\"w-100P\"\r\n            placeholder={\"Input Date Here\"}\r\n            onChange={(date, dateString) => {\r\n              let filterRole = document.getElementById('filterRole').value;\r\n              filterAudit({ date: date, role: filterRole });\r\n            }}\r\n          />\r\n        </Col>\r\n        {/* <Col lg={{ span: 24 }}>\r\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\r\n          </Button>\r\n        </Col> */}\r\n        <>\r\n          <Select\r\n            id=\"filterRole\"\r\n            defaultValue=\"\"\r\n            className=\"ml-15\"\r\n            placeholder=\"select role\"\r\n            style={{ width: '150px' }}\r\n            onChange={(value) => {\r\n              let filterDate = document.getElementById('filterDate').value;\r\n              filterAudit({ date: filterDate, role: value })\r\n            }}>\r\n            <Option value=\"\">None</Option>\r\n            <Option value=\"Admin\">Admin</Option>\r\n            <Option value=\"Teacher\">Teacher</Option>\r\n            <Option value=\"Parent\">Parent</Option>\r\n            <Option value=\"Student\">Student</Option>\r\n          </Select>\r\n        </>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={{ span: \"24\" }}>\r\n          <AuditTrailTable details={auditTrailDetails.list} />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default AuditTrailPage;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport clearanceService from './clearanceService';\r\nimport gradesService from '../grade/gradesService';\r\nimport { CLEARANCE_DROPDOWN } from '../../constants/clearance';\r\n\r\n\r\nconst ClearanceAction = (initial = {}) => {\r\n  let [levelClearance, setLevelClearance] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [levelToEdit, setLevelToEdit] = useState('');\r\n\r\n  const getIndividualRec = async (list = [], idNumber = '') => {\r\n    if (list.length === 0) return null;\r\n    let record = await list.find(item => item.idNumber === idNumber);\r\n    return record;\r\n  };\r\n\r\n  const getClearance = async ({ level }) => {\r\n    try {\r\n      setLevelToEdit(level);\r\n      setLoading(true);\r\n      let responseGradeRecords = await gradesService.findAllGrades(level);\r\n      responseGradeRecords = responseGradeRecords.data;\r\n      let responseClearance = await clearanceService.getClearance(level);\r\n      let clearanceData = [];\r\n\r\n      if (responseGradeRecords.length > 0) {\r\n        await responseGradeRecords.map(async (item, key) => {\r\n          let record = await getIndividualRec(responseClearance.data?.students, item.student.idNumber);\r\n          console.log(record);\r\n          let studentName = `${item.student.lastName}, ${item.student.firstName} ${item.student.middleName}`;\r\n          let studentObj = {\r\n            key: 'student' + item.student.idNumber,\r\n            id: 'student' + item.student.idNumber,\r\n            studentName: studentName,\r\n            idNumber: item.student.idNumber,\r\n            firstQuarter: record ? record.firstQuarter : '',\r\n            secondQuarter: record ? record.secondQuarter : '',\r\n            thirdQuarter: record ? record.thirdQuarter : '',\r\n            fourthQuarter: record ? record.fourthQuarter : '',\r\n            dropdownList: CLEARANCE_DROPDOWN\r\n          };\r\n\r\n          clearanceData.push(studentObj);\r\n        });\r\n      };\r\n\r\n      setTimeout(() => {\r\n        setLevelClearance(clearanceData);\r\n        setLoading(false);\r\n      }, 1000);\r\n    } catch (error) { };\r\n  };\r\n\r\n  const addUpdateLvlClearance = async (values) => {\r\n    setLevelClearance(values);\r\n    setLoading(true);\r\n    let students = values.map(item => {\r\n      return {\r\n        idNumber: item.idNumber,\r\n        firstQuarter: item.firstQuarter,\r\n        secondQuarter: item.secondQuarter,\r\n        thirdQuarter: item.thirdQuarter,\r\n        fourthQuarter: item.fourthQuarter,\r\n      }\r\n    })\r\n    let paramsObj = {\r\n      gradeLevel: levelToEdit,\r\n      students: students\r\n    };\r\n\r\n    let data = await clearanceService.addUpdateClearance(paramsObj);\r\n    console.log(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  return {\r\n    getClearance,\r\n    loading,\r\n    levelClearance,\r\n    addUpdateLvlClearance\r\n  }\r\n};\r\n\r\nexport default ClearanceAction;","import React from 'react';\r\nimport { Card, Typography, Row, Col, Select, Spin } from 'antd';\r\nimport EditableTable from '../shared/editableTable';\r\nimport ClearanceAction from './clearanceAction';\r\nimport { CLEARANCE_HEADERS } from '../../constants/clearance';\r\nconst { Option } = Select;\r\n\r\nconst ClearancePage = () => {\r\n  \r\n  let { getClearance, loading, levelClearance, addUpdateLvlClearance} = ClearanceAction();\r\n  \r\n  const levels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']; \r\n  const renderLevels = () => {\r\n    return levels.map((level) => {\r\n      return <Option value={level} key={level} >{level}</Option>\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 14 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">\r\n              Clearance\r\n          </Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 6 }}>\r\n            <Select\r\n              id=\"studentSelect\"\r\n              className=\"ml-15\"\r\n              placeholder=\"Please select a year level\"\r\n              onChange={(value) => {getClearance({level: value}) }}\r\n              style={{ width: '300px' }}>\r\n              {renderLevels()}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <EditableTable details={levelClearance} headers={CLEARANCE_HEADERS} setData={addUpdateLvlClearance}/>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ClearancePage;\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport User from \"./components/user/user.js\";\r\nimport Student from \"./components/user/student.js\";\r\nimport Parent from \"./components/user/parent.js\";\r\nimport Teacher from \"./components/user/teacher.js\";\r\nimport UserSetting from \"./components/user/userSetting.js\";\r\nimport UserDetail from \"./components/userDetails/userDetails.js\";\r\nimport AdvisoryGrades from \"./components/grade/advisoryGrades\";\r\nimport Grade1 from \"./components/grade/grade1\";\r\nimport Grade2 from \"./components/grade/grade2\";\r\nimport Grade3 from \"./components/grade/grade3\";\r\nimport Grade4 from \"./components/grade/grade4\";\r\nimport Grade5 from \"./components/grade/grade5\";\r\nimport Grade6 from \"./components/grade/grade6\";\r\nimport Grade7 from \"./components/grade/grade7\";\r\nimport Grade8 from \"./components/grade/grade8\";\r\nimport Grade9 from \"./components/grade/grade9\";\r\nimport Grade10 from \"./components/grade/grade10\";\r\nimport Offspring from \"./components/offspring/offspring.js\";\r\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\r\nimport QuarterService from \"../src/components/quarter/quarterService\"\r\n// import Item from \"./components/item/item.js\";\r\nimport Login from \"./components/login/login.js\";\r\nimport SiderMenu from \"./components/siderMenu\"\r\nimport UserMenu from \"./components/userMenu\"\r\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\r\nimport Clearance from './components/clearance/clearance';\r\n\r\nimport { UserContext } from './components/userContext'\r\n\r\nconst { Option } = Select;\r\n\r\nconst App = () => {\r\n  const { Content, Sider, Header } = Layout;\r\n  let [loggedUser, setLoggedUser] = useState(null);\r\n  let [collapsed, setCollapsed] = useState(false);\r\n  let [theme] = useState(\"dark\");\r\n\r\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.user) {\r\n      setLoggedUser(JSON.parse(sessionStorage.user));\r\n    }\r\n  }, []);\r\n\r\n  const onChangeFunction = async (value) => {\r\n    // console.log(value)\r\n    let response = await QuarterService.update({ _id: sessionStorage._id, quarter: value })\r\n    sessionStorage.setItem(\"quarter\", value)\r\n    window.location.reload(false)\r\n    // console.log(sessionStorage._id)\r\n    // console.log(sessionStorage.quarter)\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      {\r\n        loggedUser ?\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <BrowserRouter>\r\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\r\n                  <Sider className=\"sider\" collapsed={collapsed}>\r\n                    <Header className=\"sideBarHeader text-white\">\r\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\r\n                    </Header>\r\n                    <Content className=\"mt-20\">\r\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\r\n                    </Content>\r\n                  </Sider>\r\n                  : null}\r\n                <Layout>\r\n                  <Header className=\"bg-white\">\r\n                    <a href onClick={() => {\r\n                      setCollapsed(!collapsed)\r\n                    }}>\r\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\r\n                    </a>\r\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ? <span className=\"left\">\r\n                      Quarter: &nbsp;\r\n                    <Select onChange={\r\n                        (value) =>\r\n                          onChangeFunction(value)\r\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\r\n                        <Option value=\"1\">1</Option>\r\n                        <Option value=\"2\">2</Option>\r\n                        <Option value=\"3\">3</Option>\r\n                        <Option value=\"4\">4</Option>\r\n                      </Select>\r\n                    </span> : null}\r\n\r\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                      <span>\r\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\" />\r\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\r\n                      </span>\r\n                      : null}\r\n\r\n\r\n                    <span className=\"right\">\r\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\r\n                      <Dropdown overlay={<UserMenu />}>\r\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\r\n                      </Dropdown>\r\n                    </span>\r\n                  </Header>\r\n                  <Layout>\r\n                    <Content className=\"pt-30 pb-30\">\r\n                      <Switch>\r\n                        {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n                          <Redirect\r\n                            exact\r\n                            from=\"/login\"\r\n                            to=\"/dashboard\"\r\n                          /> :\r\n                          JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                            <Redirect\r\n                              exact\r\n                              from=\"/login\"\r\n                              to=\"/offspring\"\r\n                            /> : JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n                              <Redirect\r\n                                exact\r\n                                from=\"/login\"\r\n                                to=\"/grade1\"\r\n                              /> : <Redirect\r\n                                exact\r\n                                from=\"/login\"\r\n                                to=\"/\"\r\n                              />}\r\n                        <Route path=\"/settings\" component={UserSetting} />\r\n                        <Route path=\"/admin\" component={User} />\r\n                        <Route path=\"/student\" component={Student} />\r\n                        <Route path=\"/parent\" component={Parent} />\r\n                        <Route path=\"/teacher\" component={Teacher} />\r\n                        <Route path=\"/dashboard\" component={Dashboard} />\r\n                        <Route path=\"/advisoryclass\" component={AdvisoryGrades} />\r\n                        <Route path=\"/grade1\" component={Grade1} />\r\n                        <Route path=\"/grade2\" component={Grade2} />\r\n                        <Route path=\"/grade3\" component={Grade3} />\r\n                        <Route path=\"/grade4\" component={Grade4} />\r\n                        <Route path=\"/grade5\" component={Grade5} />\r\n                        <Route path=\"/grade6\" component={Grade6} />\r\n                        <Route path=\"/grade7\" component={Grade7} />\r\n                        <Route path=\"/grade8\" component={Grade8} />\r\n                        <Route path=\"/grade9\" component={Grade9} />\r\n                        <Route path=\"/grade10\" component={Grade10} />\r\n                        <Route path=\"/offspring\" >\r\n                          <UserDetail isParent='true'/>\r\n                        </Route>\r\n                        <Route path=\"/timekeeping\" component={Timekeeping} />\r\n                        <Route path=\"/auditTrail\" component={AuditTrail} />\r\n                        <Route path=\"/clearance\" component={Clearance} />\r\n                        <Route path=\"/\" component={UserDetail} />\r\n                      </Switch>\r\n                    </Content>\r\n                  </Layout>\r\n                </Layout>\r\n              </BrowserRouter>\r\n            </Layout>\r\n            <Layout>\r\n            </Layout>\r\n          </BrowserRouter>\r\n          :\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Redirect from=\"*\" to=\"/login\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n      }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}