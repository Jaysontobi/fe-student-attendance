{"version":3,"sources":["config.js","baseService.js","components/user/userService.js","components/dashboard/dashboardAction.js","components/dashboard/dashboard.js","components/user/additionalService.js","components/user/userForm.js","components/grade/gradesService.js","components/quarter/quarterService.js","components/auditTrail/auditTrailService.js","components/user/userAction.js","components/timeKeeping/timeKeepingAction.js","components/user/userTable.js","components/user/user.js","components/grade/advisoryService.js","components/grade/advisoryAction.js","components/user/student.js","components/user/parent.js","components/user/teacher.js","components/user/userSetting.js","components/userDetails/gradeTable.js","components/userDetails/userDetailsForm.js","components/grade/gradeAction.js","components/userDetails/userDetails.js","components/grade/gradeForm.js","components/grade/teacherForm.js","components/grade/advisoryForm.js","components/grade/gradeTable.js","components/grade/teacherService.js","components/grade/teacherAction.js","components/grade/advisoryGrades.js","components/grade/grade1.js","components/grade/grade2.js","components/grade/grade3.js","components/grade/grade4.js","components/grade/grade5.js","components/grade/grade6.js","components/grade/grade7.js","components/grade/grade8.js","components/grade/grade9.js","components/grade/grade10.js","components/offspring/offspringForm.js","components/offspring/offspringTable.js","components/offspring/offspring.js","components/timeKeeping/timeKeepingTable.js","components/timeKeeping/timeKeepingService.js","components/timeKeeping/AttendanceAction.js","components/timeKeeping/timeKeeping.js","components/login/loginForm.js","components/login/login.js","components/siderMenu.js","components/userContext.js","components/userMenu.js","components/auditTrail/auditTrailTable.js","components/auditTrail/auditTrailAction.js","components/auditTrail/auditTrail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ENVIRONMENT","LOCAL_BE","PRODUCTION_BE","BaseService","moduleUrl","edit","newObj","axiosInstance","put","add","post","getById","id","get","delete","crudId","softDelete","this","URL","axios","create","baseURL","userObj","update","_id","findAllUser","findyById","getGenIdNumber","role","updatePassword","obj","UserAction","useState","numberOfStudents","numberOfTeachers","numberOfParents","userDetails","setUserDetails","getListOfUsers","a","userService","response","parent","data","filter","user","student","teacher","length","useEffect","EmployeePage","DashboardAtion","className","gutter","xs","span","sm","md","lg","title","bordered","getAdvisory","getAdvisoryStudents","level","Option","Select","UserEditForm","selectedUser","selectedParent","isNewData","idNumber","AdditionalService","getId","loading","initialValues","enableReinitialize","onSubmit","values","console","log","render","touched","setFieldValue","spinning","delay","Item","label","name","disabled","JSON","parse","sessionStorage","value","firstName","lastName","map","type","htmlType","CheckCircleFilled","gradesObj","findAllGrades","quarterObj","findAllQuarter","auditTrailObj","findAllAudit","list","credentials","adminList","setAdminList","quarter","setQuarter","parentList","setParentList","studentList","setStudentList","teacherList","setTeacherList","showUserVisible","setShowUserVisible","setSelectedUser","setSelectedParent","loginCounter","setLoginCounter","addUser","activity","date","Date","parentId","then","res","gradeObj","status","gradeLevel","section","schoolYear","subjects","subjectName","subjectGrade","firstQuarter","secondQuarter","thirdQuarter","fourthQuarter","gradesService","middleName","employeeNumber","department","loadUsers","window","location","reload","editUser","gender","birthDate","birthPlace","age","contactNumber","email","getListOfParent","result","showUser","loadUser","loadQuarter","quarterService","login","ctr","loggedInUser","username","password","loggedDate","toISOString","details","auditTrailService","setItem","stringify","filterStudent","newArray","key","action","onClick","filterTeacher","filterParent","filterAdmin","loadTeacher","loadStudent","loadParent","loadAdmin","getNewGenId","newArrayCredentials","buildStudentList","TimeKeepingAction","moment","format","today","setDate","timer","setInterval","clearInterval","EmployeeTable","columns","dataIndex","rowUserSelection","onChange","selectedRowKeys","selectedRows","rowSelection","dataSource","Title","placeholder","e","target","PlusCircleOutlined","width","visible","onClose","bodyStyle","paddingBottom","advisoryObj","findAllAdvisory","getAvailableAdvisors","deleteAdvisory","TeacherAction","setSelectedTeacher","selectedAdvisoryAssgined","setselectedAdvisoryAssgined","selectedAdvisoryAssignedGrade1","setselectedAdvisoryAssignedGrade1","selectedAdvisoryAssignedGrade2","setselectedAdvisoryAssignedGrade2","selectedAdvisoryAssignedGrade3","setselectedAdvisoryAssignedGrade3","selectedAdvisoryAssignedGrade4","setselectedAdvisoryAssignedGrade4","selectedAdvisoryAssignedGrade5","setselectedAdvisoryAssignedGrade5","selectedAdvisoryAssignedGrade6","setselectedAdvisoryAssignedGrade6","selectedAdvisoryAssignedGrade7","setselectedAdvisoryAssignedGrade7","selectedAdvisoryAssignedGrade8","setselectedAdvisoryAssignedGrade8","selectedAdvisoryAssignedGrade9","setselectedAdvisoryAssignedGrade9","selectedAdvisoryAssignedGrade10","setselectedAdvisoryAssignedGrade10","showAdvisorVisible","setshowAdvisorVisible","studentAdvisor","setStudentAdvisor","advisoryStudents","setAdvisoryStudents","availableAdvisors","setAvailableAdvisors","addAdvisor","advisor","advisorTeacher","finalAddValue","advisoryService","advisors","getListOfTeacher","getListOfAssignedTeacherGrade1","getListOfAssignedTeacherGrade2","getListOfAssignedTeacherGrade3","getListOfAssignedTeacherGrade4","getListOfAssignedTeacherGrade5","getListOfAssignedTeacherGrade6","getListOfAssignedTeacherGrade7","getListOfAssignedTeacherGrade8","getListOfAssignedTeacherGrade9","getListOfAssignedTeacherGrade10","hideAdvisor","showAdvisor","getStudentAdvisor","loadAdvisoryStudents","userData","advisory","students","isAdvisory","AdvisoryAction","Settings","newPassword","confirmPassword","changePassword","message","error","body","currentPassword","success","style","textAlign","offset","marginTop","align","GradeTable","grade","props","color","children","text","Grade1Action","selectedUserGrade","setSelectedUserGrade","setLoading","selectedGradeUser","setSelectedGradeUser","gradeDetails","setGradeDetails","grade1Details","setGrade1Details","grade2Details","setGrade2Details","grade3Details","setGrade3Details","grade4Details","setGrade4Details","grade5Details","setGrade5Details","grade6Details","setGrade6Details","grade7Details","setGrade7Details","grade8Details","setGrade8Details","grade9Details","setGrade9Details","grade10Details","setGrade10Details","advisoryGrades","setAdvisoryGrades","showGradeVisible","setShowGradeVisible","selectedGrade","setSelectedGrade","selectedTeacher","showAllGradeVisible","setShowAllGradeVisible","selectedListOfStudent","setSelectedListOfStudent","upgradeStudent","userCurrentGrade","parseInt","currentUser","allStudent","result1","currentStudent","toString","editGrade","English","newEnglishGrade","recommendedGrade","Filipino","newFilipinoGrade","Science","newScienceGrade","Math","newMathGrade","MAPEH","newMAPEHGrade","Values","newValuesGrade","subjectDummy","Music","subjectIndex","findIndex","subject","subjectGrades","updatedGrades","constructSubjectGrades","newSubject","push","Art","PE","Health","showGrade","loadGrade","getCurrentGradeUser","filterCurrentGradeUser","buidSubjectRow","currentGradeUser","remarks","finalGrade","inComplete","Quarter1st","Quarter2nd","Quarter3rd","Quarter4th","FinalGrade","Remarks","loadGrades","finalOffspring","offspring","off","loadStudentGradesPerLevel","setTimeout","loadGrades1","loadGrades2","loadGrades3","loadGrades4","loadGrades5","loadGrades6","loadGrades7","loadGrades8","loadGrades9","loadGrades10","loadAdvisoryGrades","GradeAction","Grade1EditForm","Collapse","Panel","selectedTeacherAssignedGrade","isAdviser","userRole","hasUpdate","find","updatesHolder","autoFillGrade","field","isDefault","quarterNum","activeQuarter","index","dafaultVal","holder","Object","assign","inputValues","newValues","English1","English2","English3","English4","Filipino1","Filipino2","Filipino3","Filipino4","Science1","Science2","Science3","Science4","Math1","Math2","Math3","Math4","MAPEH1","MAPEH2","MAPEH3","MAPEH4","Values1","Values2","Values3","Values4","Music1","Music2","Music3","Music4","Art1","Art2","Art3","Art4","PE1","PE2","PE3","PE4","Health1","Health2","Health3","Health4","undefined","border","defaultValue","Fragment","TeacherForm","selectedTeacherAssgined","AdvisorAction","marginLeft","ghost","DeleteOutlined","teacherObj","findAllTeacher","setSelectedTeacherAssgined","selectedTeacherAssignedGrade1","setSelectedTeacherAssignedGrade1","selectedTeacherAssignedGrade2","setSelectedTeacherAssignedGrade2","selectedTeacherAssignedGrade3","setSelectedTeacherAssignedGrade3","selectedTeacherAssignedGrade4","setSelectedTeacherAssignedGrade4","selectedTeacherAssignedGrade5","setSelectedTeacherAssignedGrade5","selectedTeacherAssignedGrade6","setSelectedTeacherAssignedGrade6","selectedTeacherAssignedGrade7","setSelectedTeacherAssignedGrade7","selectedTeacherAssignedGrade8","setSelectedTeacherAssignedGrade8","selectedTeacherAssignedGrade9","setSelectedTeacherAssignedGrade9","selectedTeacherAssignedGrade10","setSelectedTeacherAssignedGrade10","showTeacherVisible","setShowTeacherVisible","english","filipino","science","math","mapeh","Mapeh","teacherService","hideTeacher","showTeacher","AdvisoryGrades","addGrade","GradePage","RiseOutlined","selectedOffspring","OffspringPage","TimeKeepingTable","timekeepingObj","findAllTimekeeping","filterUsers","TimekeepingService","timeIn","timeOut","TimekeepingPage","AttendanceAction","dateString","LoginForm","actions","errors","isSubmitting","Password","Login","process","REACT_APP_VERSION","showLogin","setShowLogin","showContact","setShowContact","showAboutUs","setShowAboutUs","showHome","setShowHome","Content","Layout","loginUser","loginFunction","contactFunction","aboutUsFunction","src","SubMenu","Menu","SiderMenu","theme","collapsed","mode","icon","BarChartOutlined","UserOutlined","to","DashboardOutlined","TeamOutlined","AuditOutlined","UserContext","createContext","UserMenu","useContext","setLoggedUser","logout","removeItem","LogoutOutlined","SettingOutlined","AuditTrailTable","AuditTrailAction","auditTrailDetails","setAuditTrailDetails","addAudit","finalAudit","getListOfAudit","filterAudit","datas","AuditTrailPage","App","Sider","Header","loggedUser","setCollapsed","providerValue","useMemo","onChangeFunction","QuarterService","Provider","href","overlay","Text","exact","from","path","component","UserSetting","User","Student","Parent","Teacher","Dashboard","Grade1","Grade2","Grade3","Grade4","Grade5","Grade6","Grade7","Grade8","Grade9","Grade10","Offspring","Timekeeping","AuditTrail","UserDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a045e38.chunk.js","sourcesContent":["/**\r\n * declare all configurations in here\r\n */\r\n\r\n//declare as LOCAL for local and PRODUCTION for production\r\nconst ENVIRONMENT = 'local';\r\n\r\nconst LOCAL_BE = 'http://localhost:14000';\r\nconst PRODUCTION_BE = 'https://record.capstone2proj.com';\r\n\r\nmodule.exports = { ENVIRONMENT , LOCAL_BE, PRODUCTION_BE };","import axios from 'axios';\r\nimport { ENVIRONMENT, LOCAL_BE, PRODUCTION_BE } from './config';\r\nclass BaseService {\r\n  constructor(moduleUrl) {\r\n    this.URL = (ENVIRONMENT === 'PRODUCTION') ?\r\n      PRODUCTION_BE + \"/\" + moduleUrl :\r\n      LOCAL_BE + \"/\" + moduleUrl;\r\n    this.axiosInstance = axios.create({\r\n      baseURL: (ENVIRONMENT === 'PRODUCTION') ?\r\n        PRODUCTION_BE + \"/\" + moduleUrl :\r\n        LOCAL_BE + \"/\" + moduleUrl\r\n    })\r\n    \r\n    // this.axiosInstance.interceptors.request.use(function (config) {\r\n    //   const token = sessionStorage.getItem('token');\r\n    //   config.headers[\"x-authorization\"] = token;\r\n    //   return config;\r\n    // });\r\n  }\r\n\r\n  edit = newObj => {\r\n    return this.axiosInstance.put('', newObj);\r\n  };\r\n\r\n  add = newObj => {\r\n    return this.axiosInstance.post('', newObj);\r\n  };\r\n\r\n  getById = id => {\r\n    return this.axiosInstance.get('/' + id);\r\n  };\r\n\r\n  delete = crudId => {\r\n    return this.axiosInstance.delete('/' + crudId);\r\n  };\r\n  softDelete = crudId => {\r\n    return this.axiosInstance.delete('/soft-delete/' + crudId);\r\n  };\r\n}\r\nexport default BaseService;\r\n","import BaseService from '../../baseService';\r\nclass UserService extends BaseService {\r\n  constructor() {\r\n    super('user');\r\n  }\r\n\r\n  add = userObj => {\r\n    return this.axiosInstance.post('/create-user', userObj);\r\n  };\r\n\r\n  update = userObj => {\r\n    return this.axiosInstance.put('/update-user/' + userObj._id, userObj);\r\n  };\r\n\r\n  findAllUser = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-user/' + id);\r\n  };\r\n\r\n  getGenIdNumber = (role) => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  updatePassword = (obj) => {\r\n    return this.axiosInstance.post('/update-password', obj);\r\n  };\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( \r\n      {numberOfStudents : 0, \r\n      numberOfTeachers: 0,\r\n      numberOfParents : 0}\r\n      );\r\n\r\n  const getListOfUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let parent = response.data.filter(user => user.role === \"Parent\");\r\n    let student = response.data.filter(user => user.role === \"Student\");\r\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\r\n    setUserDetails({\r\n        numberOfParents: parent.length,\r\n        numberOfStudents : student.length, \r\n        numberOfTeachers: teacher.length\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfUsers();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    userDetails\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport DashboardAtion from \"../dashboard/dashboardAction\"\r\n\r\nconst EmployeePage = () => { \r\n    let{\r\n        userDetails\r\n      } = DashboardAtion({});\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n    <Row gutter={16}>\r\n      <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\r\n        <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfStudents}\r\n            </span>\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n            {userDetails.numberOfParents}\r\n          </span>\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\r\n          <span className=\"dashboard-padding\">\r\n            {userDetails.numberOfTeachers}\r\n          </span>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdditionalService extends BaseService {\r\n  constructor() {\r\n    super('');\r\n  };\r\n\r\n  getGenIdNumber = role => {\r\n     return this.axiosInstance.get('/generate-user-id/' + role);\r\n  };\r\n\r\n  getAdvisory = teacher => {\r\n    return this.axiosInstance.post('/teacher-advisory', teacher);\r\n  };\r\n\r\n  getAdvisoryStudents = level => {\r\n    return this.axiosInstance.get('/advisory-students/' + level);\r\n  };\r\n\r\n}\r\n\r\nexport default new AdditionalService();\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nimport AdditionalService from './additionalService';\r\nconst { Option } = Select;\r\n\r\nconst UserEditForm = ({ add, update, selectedUser, selectedParent, role, isNewData = true }) => {\r\n\r\n  let getId = async role => {\r\n    if (selectedUser.idNumber) return;\r\n\r\n    let response = await AdditionalService.getGenIdNumber(role);\r\n    selectedUser.idNumber = response.data;\r\n  };\r\n\r\n  let newGenId = '';\r\n\r\n  if (isNewData) {\r\n    getId(role);\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedUser}\r\n      enableReinitialize={true}\r\n      onSubmit={async (values) => {\r\n        if (values._id) {\r\n          console.log(values)\r\n          update(values)\r\n        } else {\r\n          values.role = role;\r\n          add(values)\r\n\r\n          // window.location.reload(false);\r\n        }\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\">\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"User ID\" name=\"idNumber\">\r\n                  <Input disabled=\"true\" name=\"idNumber\" />\r\n                </Form.Item>\r\n              </Col>\r\n              {role === \"Student\" ? (\r\n                <Col span={12}>\r\n                  <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                    <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              ) : (\"\")}\r\n\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"First Name\" name=\"firstName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Middle Name\" name=\"middleName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Last Name\" name=\"lastName\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Gender\" name=\"gender\">\r\n                  <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\r\n                    <Option value=\"Male\">Male</Option>\r\n                    <Option value=\"Female\">Female</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {role === \"Student\" ? (\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                    <Select\r\n                      disabled={\r\n                        JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                      }\r\n                      name=\"gradeLevel\"\r\n                    >\r\n                      <Option value=\"1\">1</Option>\r\n                      <Option value=\"2\">2</Option>\r\n                      <Option value=\"3\">3</Option>\r\n                      <Option value=\"4\">4</Option>\r\n                      <Option value=\"5\">5</Option>\r\n                      <Option value=\"6\">6</Option>\r\n                      <Option value=\"7\">7</Option>\r\n                      <Option value=\"8\">8</Option>\r\n                      <Option value=\"9\">9</Option>\r\n                      <Option value=\"10\">10</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  {/* <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input\r\n                              disabled={\r\n                                 values.role != \"Student\" ||\r\n                                 JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                              }\r\n                              name=\"section\"\r\n                           />\r\n                        </Form.Item> */}\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Birth Day\" name=\"birthDate\">\r\n                  <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Birth Place\" name=\"birthPlace\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={8}>\r\n                <Form.Item label=\"Age\" name=\"age\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={16}>\r\n                {role === \"Student\" ? (\r\n                  <Form.Item label=\"Guardian\" name=\"parentId\">\r\n                    <Select\r\n                      value={\r\n                        values.parent\r\n                          ? values.parent.firstName +\r\n                          \" \" +\r\n                          values.parent.lastName\r\n                          : \"\"\r\n                      }\r\n                      name=\"parentId\"\r\n                    >\r\n                      {selectedParent.map((parent) => {\r\n                        return (\r\n                          <Option value={parent._id}>\r\n                            {parent.firstName + \" \" + parent.lastName}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </Form.Item>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Contact Number\" name=\"contactNumber\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Email\" name=\"email\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              {/* <Col span={12}>\r\n                     <Form.Item label=\"Role\" name=\"role\">\r\n                        <Select\r\n                           disabled={\r\n                              JSON.parse(sessionStorage.user).role === \"Teacher\"\r\n                           }\r\n                           name=\"role\"\r\n                        >\r\n                           <Option value=\"Admin\">Admin</Option>\r\n                           <Option value=\"Student\">Student</Option>\r\n                           <Option value=\"Parent\">Parent</Option>\r\n                           <Option value=\"Teacher\">Teacher</Option>\r\n                        </Select>\r\n                     </Form.Item>\r\n                   </Col> */}\r\n              <Col span={12}>\r\n                <Form.Item label=\"BadgeId\" name=\"badgeID\">\r\n                  <Input name=\"badgeID\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Password\" name=\"password\">\r\n                  <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" type=\"password\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"btn-save\" htmlType=\"submit\">\r\n              <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n            </Button> : null}\r\n\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default UserEditForm;\r\n","import BaseService from '../../baseService';\r\nclass GradesService extends BaseService {\r\n  constructor() {\r\n    super('grades');\r\n  }\r\n\r\n  add = gradesObj => {\r\n    return this.axiosInstance.post('/create-grades', gradesObj);\r\n  };\r\n\r\n  update = gradesObj => {\r\n    return this.axiosInstance.put('/update-grades/' + gradesObj._id, gradesObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-grades/' + id);\r\n  };\r\n\r\n  findAllGrades = (level ='') => {\r\n    return (level !== '') ? this.axiosInstance.get('/' + level) : this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new GradesService();\r\n","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('quarter');\r\n  }\r\n\r\n  add = quarterObj => {\r\n    return this.axiosInstance.post('/create-quarter', quarterObj);\r\n  };\r\n\r\n  update = quarterObj => {\r\n    return this.axiosInstance.put('/update-quarter/' + quarterObj._id, quarterObj);\r\n  };\r\n\r\n  findAllQuarter = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-quarter/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import BaseService from '../../baseService';\r\nclass AuditTrailService extends BaseService {\r\n  constructor() {\r\n    super('auditTrail');\r\n  }\r\n\r\n  add = auditTrailObj => {\r\n    return this.axiosInstance.post('/create-autditrail', auditTrailObj);\r\n  };\r\n\r\n  update = auditTrailObj => {\r\n    return this.axiosInstance.put('/update-autditrail/' + auditTrailObj._id, auditTrailObj);\r\n  };\r\n\r\n  findAllAudit = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-autditrail/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new AuditTrailService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from './userService';\r\nimport gradesService from '../grade/gradesService';\r\nimport quarterService from '../quarter/quarterService'\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from './additionalService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\r\n  let [adminList, setAdminList] = useState([])\r\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\r\n  let [parentList, setParentList] = useState([])\r\n  let [studentList, setStudentList] = useState([])\r\n  let [teacherList, setTeacherList] = useState([])\r\n  let [showUserVisible, setShowUserVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n  let [selectedParent, setSelectedParent] = useState([]);\r\n\r\n  let [loginCounter, setLoginCounter] = useState(false);\r\n\r\n  const addUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Add User\",\r\n      date:new Date()\r\n    }\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.add(values)\r\n    .then(function (res) {\r\n      if(values.role === \"Student\"){\r\n        let gradeObj = {\r\n          status: true,\r\n          student: values,\r\n          gradeLevel: values.gradeLevel,\r\n          section: values.section,\r\n          schoolYear : values.schoolYear,\r\n          subjects: [{\r\n              subjectName: \"English\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Filipino\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Science\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Math\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"MAPEH\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Values\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          }]\r\n      }\r\n      let response = gradesService.add(gradeObj)\r\n      }\r\n    \r\n        \r\n        setSelectedUser({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            employeeNumber: \"\",\r\n            department: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n        window.location.reload(false);\r\n    })\r\n  };\r\n\r\n  const editUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Edit User\",\r\n      date:new Date()}\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.update(values)\r\n    .then(function (res) {\r\n        setSelectedUser({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          middleName: \"\",\r\n          idNumber: \"\",\r\n          gender: \"\",\r\n          birthDate: \"\",\r\n          birthPlace: \"\",\r\n          age: \"\",\r\n          contactNumber: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n    })\r\n  };\r\n\r\n  const getListOfParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    setSelectedParent(result)\r\n  };\r\n\r\n  const showUser = () => {\r\n    setSelectedUser({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        idNumber: \"\",\r\n        gender: \"\",\r\n        birthDate: \"\",\r\n        birthPlace: \"\",\r\n        age: \"\",\r\n        contactNumber: \"\",\r\n        email: \"\",\r\n        status: \"\",\r\n      });\r\n    setShowUserVisible(true)\r\n  };\r\n\r\n  const loadUser = (userObj) => {\r\n    setSelectedUser({...userObj});\r\n    setShowUserVisible(true);\r\n  };\r\n\r\n  const loadQuarter = async () => {\r\n    let response = await quarterService.findAllQuarter();\r\n    if (response.data && response.data.length > 0) {\r\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\r\n    };\r\n  }\r\n\r\n  const login = async (credentials) => {\r\n    let ctr = 0;\r\n    let loggedInUser = {};\r\n    userDetails.list.map((user) => {\r\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\r\n            ctr = ctr + 1;\r\n            loggedInUser = user;\r\n        }\r\n    })\r\n    if(ctr === 0) {\r\n        setLoginCounter(false)\r\n    } else {\r\n         //if user is parent log in audit trail\r\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\r\n          let loggedDate =  new Date().toISOString();\r\n          let details = {\r\n            user: loggedInUser,\r\n            activity: 'Parent logged in',\r\n            date: loggedDate\r\n          };\r\n          await auditTrailService.add(details);\r\n        };\r\n    \r\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\r\n        sessionStorage.setItem(\"_id\", quarter._id);\r\n        window.location.reload(false);\r\n        setLoginCounter(true);\r\n    }\r\n  };\r\n\r\n  const filterStudent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setStudentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList( newArray)\r\n    }\r\n  } \r\n  \r\n  const filterTeacher = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setTeacherList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterParent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setParentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterAdmin = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setAdminList(\r\n        newArray\r\n      )\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(\r\n      newArray\r\n    )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList(newArray)\r\n\r\n  }  \r\n\r\n  const loadStudent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Student\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList(newArray)\r\n\r\n  }  \r\n\r\n  const loadParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList(newArray)\r\n\r\n  }\r\n\r\n  const loadAdmin = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Admin\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(newArray)\r\n\r\n  }\r\n  \r\nconst getNewGenId = async (role) => {\r\n      let response = await userService.getGenIdNumber(role);\r\n      return response;\r\n    }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    let newArrayCredentials = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          idNumber: user.idNumber,\r\n          password: user.password,\r\n        }\r\n      })\r\n\r\n    setUserDetails({\r\n      list: newArray,\r\n      credentials: newArrayCredentials\r\n    })\r\n  \r\n    \r\n\r\n  };\r\n  \r\n  const buildStudentList = (list) => {\r\n    let newlist = list.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n    return newlist;\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadUsers();\r\n    getListOfParent();\r\n    loadAdmin();\r\n    loadStudent();\r\n    loadTeacher();\r\n    loadParent();\r\n    loadQuarter();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadUsers,\r\n    addUser,\r\n    loginCounter,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    login,\r\n    selectedParent,\r\n    filterAdmin,\r\n    filterStudent,\r\n    filterParent,\r\n    filterTeacher,\r\n    adminList,\r\n    studentList,\r\n    parentList,\r\n    teacherList,\r\n    getNewGenId,\r\n    buildStudentList\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\r\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n  }, []);\r\n\r\n\r\n  return {\r\n    today\r\n  }\r\n};\r\n\r\nexport default TimeKeepingAction;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst EmployeeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      },\r\n      {\r\n         title: <b>Gender</b>,\r\n         dataIndex: 'gender',\r\n      },\r\n      {\r\n        title: <b>Age</b>,\r\n        dataIndex: 'age',\r\n      },   \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Role</b>,\r\n        dataIndex: 'role',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         console.log(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterAdmin,\r\n    adminList\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Admin List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterAdmin(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        {console.log(adminList)}\r\n        <UserTable details={adminList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Admin' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import BaseService from '../../baseService';\r\nclass AdvisoryService extends BaseService {\r\n  constructor() {\r\n    super('advisory');\r\n  }\r\n\r\n  add = advisoryObj => {\r\n    return this.axiosInstance.post('/create-advisory', advisoryObj);\r\n  };\r\n\r\n  update = advisoryObj => {\r\n    return this.axiosInstance.put('/update-advisory/' + advisoryObj._id, advisoryObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-advisory/' + id);\r\n  };\r\n\r\n  findAllAdvisory = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  getAvailableAdvisors = () => {\r\n    return this.axiosInstance.get('/available-advisors');\r\n  };\r\n\r\n  deleteAdvisory = (id) => {\r\n    return this.axiosInstance.delete('/delete-advisory/' + id)\r\n  };\r\n}\r\n\r\nexport default new AdvisoryService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport UserAction from '../user/userAction';\r\n\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedAdvisoryAssgined, setselectedAdvisoryAssgined] = useState({});\r\n  let [selectedAdvisoryAssignedGrade1, setselectedAdvisoryAssignedGrade1] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade2, setselectedAdvisoryAssignedGrade2] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade3, setselectedAdvisoryAssignedGrade3] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade4, setselectedAdvisoryAssignedGrade4] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade5, setselectedAdvisoryAssignedGrade5] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade6, setselectedAdvisoryAssignedGrade6] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade7, setselectedAdvisoryAssignedGrade7] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade8, setselectedAdvisoryAssignedGrade8] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade9, setselectedAdvisoryAssignedGrade9] = useState([]);\r\n  let [selectedAdvisoryAssignedGrade10, setselectedAdvisoryAssignedGrade10] = useState([]);\r\n  let [showAdvisorVisible, setshowAdvisorVisible] = useState(false);\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [advisoryStudents, setAdvisoryStudents] = useState([]);\r\n  let [availableAdvisors, setAvailableAdvisors] = useState([]);\r\n  \r\n  let {\r\n    buildStudentList\r\n  } = UserAction({});\r\n\r\n  const addAdvisor = async (values, gradeLevel) => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Added Advisor\",\r\n      date:new Date()}\r\n    let advisorTeacher = await userService.findyById(values.advisor)\r\n    let finalAddValue = {\r\n      gradeLevel: gradeLevel,\r\n      teacher: advisorTeacher.data\r\n    }\r\n    try {\r\n      let response = await advisoryService.add(finalAddValue);\r\n      console.log(response);\r\n       window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    };\r\n  };\r\n  \r\n  const getAvailableAdvisors = async () => {\r\n    let advisors = await advisoryService.getAvailableAdvisors();\r\n    setAvailableAdvisors(advisors.data);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result);\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setselectedAdvisoryAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setselectedAdvisoryAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setselectedAdvisoryAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setselectedAdvisoryAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setselectedAdvisoryAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setselectedAdvisoryAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setselectedAdvisoryAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setselectedAdvisoryAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setselectedAdvisoryAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setselectedAdvisoryAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideAdvisor = async () => {\r\n    setshowAdvisorVisible(false)\r\n  };\r\n\r\n  const showAdvisor = async (gradeLevel) => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setselectedAdvisoryAssgined(result[0].subjects)\r\n    } else {\r\n        setselectedAdvisoryAssgined({})\r\n    }\r\n    setshowAdvisorVisible(true)\r\n  };\r\n\r\n  const getStudentAdvisor = async () => {\r\n    let response = await advisoryService.findAllAdvisory();\r\n    let result = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n    setStudentAdvisor(result[0]);\r\n  };\r\n  \r\n   const loadAdvisoryStudents = async () => {\r\n     let user = JSON.parse(sessionStorage.user);\r\n     const userData = {\r\n       firstName: user.firstName,\r\n       lastName: user.lastName,\r\n       middleName: user.middleName\r\n     };\r\n     try {\r\n       let advisory = await AdditionalService.getAdvisory(userData);\r\n   \r\n       if (!advisory) return;\r\n     \r\n       const students = await AdditionalService.getAdvisoryStudents(advisory.data.gradeLevel);\r\n       let list = buildStudentList(students.data);\r\n       await setAdvisoryStudents(list);\r\n       console.log('YHVH is great', students.data);\r\n       return list;\r\n     } catch (error) {\r\n       return [];\r\n     };\r\n    \r\n  };\r\n  \r\n  const deleteAdvisory = async (id) => {\r\n    let response = await advisoryService.deleteAdvisory(id);\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudentAdvisor();\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n    loadAdvisoryStudents();\r\n    getAvailableAdvisors();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    studentAdvisor,\r\n    advisoryStudents,\r\n    loadAdvisoryStudents,\r\n    availableAdvisors,\r\n    deleteAdvisory\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm';\r\nimport AdvisoryAction from '../grade/advisoryAction';\r\n\r\nimport UserAction from './userAction';\r\nimport AdditionalService from './additionalService';\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable';\r\n\r\nconst EmployeePage = ({isAdvisory}) => {\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    studentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterStudent\r\n  } = UserAction({});\r\n\t\r\n  let {\r\n    advisoryStudents,\r\n    loadAdvisoryStudents\r\n  } = AdvisoryAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\t\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\r\n      </Col>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n      <>\r\n        <Col lg={{ span: 6 }}>\r\n          <Input placeholder=\"Search\" onChange={(e)=> filterStudent(e.target.value)}/>\r\n          {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n          </Button> */}\r\n        </Col>\r\n        <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n          <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n        </Button>\r\n      </>\r\n        : null}\r\n\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={ isAdvisory ? advisoryStudents : studentList } />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Student' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    parentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterParent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\r\n        <UserTable details={parentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Parent' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    teacherList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterTeacher\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={teacherList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Teacher' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Space, message } from 'antd';\r\n\r\nimport userService from './userService';\r\n\r\nconst Settings = () => {\r\n  let password = '';\r\n  let newPassword = '';\r\n  let confirmPassword = '';\r\n  \r\n  const changePassword = async () => {\r\n    if (password === '' || newPassword === '' || confirmPassword === '') {\r\n      return message.error('All fields are required.', 3);\r\n    };\r\n    \r\n     if (newPassword !== confirmPassword) {\r\n      return message.error('New password and confirm must match.', 3);\r\n    };\r\n    \r\n    let user = JSON.parse(sessionStorage.user);\r\n    let body = {\r\n      idNumber: user.idNumber,\r\n      currentPassword: password,\r\n      newPassword: newPassword\r\n    };\r\n    try {\r\n      let response = await userService.updatePassword(body);\r\n      if (response && response.status === 200) {\r\n        return message.success('Password updated', 3);\r\n      };\r\n    } catch (error) {\r\n      return message.error('Unable to update password', 3);\r\n    };\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\" style={{textAlign: 'center'}}>\r\n     <Row className=\"mt-15\">\r\n       <Col lg={{ span: 6, offset: 9  }}>\r\n         <Typography.Title level={3} className=\"ml-15\">Setting</Typography.Title>\r\n       </Col>\r\n     </Row>\r\n      <form onSubmit={() => changePassword()}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 6, offset: 9 }}>\r\n            <Input placeholder=\"Old Password\" type=\"password\" onChange={(e) => password = e.target.value}/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n           <Input placeholder=\"New Password\" type=\"password\" onChange={(e) => newPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n          <Input placeholder=\"Confirm Password\" type=\"password\" onChange={(e) => confirmPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row style={{marginTop: '15px'}}>\r\n        <Col lg={{ span: 6, offset: 9 }}>\r\n         <Space align=\"center\">\r\n           <Button  className=\"addUser btn-add\" onClick={()=> changePassword()}>\r\n            Change Password\r\n          </Button>\r\n         </Space>\r\n        </Col>\r\n       </Row>\r\n      </form>\r\n    </Card>     \r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Subject</b>,\r\n         dataIndex: 'subject',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n        title: <b>1st Quarter</b>,\r\n        dataIndex: 'Quarter1st',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n      {\r\n         title: <b>2nd Quarter</b>,\r\n         dataIndex: 'Quarter2nd',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n         title: <b>3rd Quarter</b>,\r\n         dataIndex: 'Quarter3rd',\r\n         render (grade) {\r\n            return {\r\n             props: {\r\n                style: { color: grade < 75 ? \"red\" : \"\" }\r\n              },\r\n              children: <div>{grade}</div>\r\n            }\r\n          }\r\n      },\r\n      {\r\n        title: <b>4th Quarter</b>,\r\n        dataIndex: 'Quarter4th',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n     {\r\n        title: <b>Final Grade</b>,\r\n        dataIndex: 'FinalGrade',\r\n        render (grade) {\r\n         return {\r\n          props: {\r\n             style: { color: grade < 75 ? \"red\" : \"\" }\r\n           },\r\n           children: <div>{grade}</div>\r\n         }\r\n       }\r\n     },\r\n     {\r\n        title: <b>Remarks</b>,\r\n        dataIndex: 'Remarks',\r\n        render (text) {\r\n           return {\r\n            props: {\r\n               style: { color: text === 'Failed' ? \"red\" : \"\" }\r\n             },\r\n             children: <div>{text}</div>\r\n           }\r\n        }\r\n     }\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst UserEditForm = ({ selectedUser }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedUser}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n               <Card className=\"p-70\">\r\n               <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row gutter={16}>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\r\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\r\n                        </Form.Item>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                        <Form.Item label=\"Section\" name=\"section\">\r\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n                <br/>\r\n                {console.log(values)}\r\n               \r\n                <Row gutter={16}>\r\n\r\n{/* <Col span={12}>\r\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n<Col span={12}>\r\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n \r\n   <Col span={12}>\r\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col>\r\n\r\n   <Col span={12}>\r\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"1st Q\" name=\"values\">\r\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"2nd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n         <Form.Item label=\"3rd Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n         <Form.Item label=\"4th Q\" name=\"values\">\r\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\r\n         </Form.Item>\r\n         </Col>\r\n         </Row>\r\n      </Card>\r\n   </Col> */}\r\n</Row>\r\n             \r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default UserEditForm;","import React, { useState, useEffect } from 'react';\r\nimport gradesService from './gradesService';\r\nimport userService from '../user/userService';\r\nimport advisoryService from '../grade/advisoryService';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from '../user/additionalService';\r\nimport { Button } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Grade1Action = (initial = { searchRequest: {} }) => {\r\n  let [studentAdvisor, setStudentAdvisor] = useState({});\r\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\r\n  let [gradeDetails, setGradeDetails] = useState({ list: [] });\r\n  let [grade1Details, setGrade1Details] = useState({ list: [] });\r\n  let [grade2Details, setGrade2Details] = useState({ list: [] });\r\n  let [grade3Details, setGrade3Details] = useState({ list: [] });\r\n  let [grade4Details, setGrade4Details] = useState({ list: [] });\r\n  let [grade5Details, setGrade5Details] = useState({ list: [] });\r\n  let [grade6Details, setGrade6Details] = useState({ list: [] });\r\n  let [grade7Details, setGrade7Details] = useState({ list: [] });\r\n  let [grade8Details, setGrade8Details] = useState({ list: [] });\r\n  let [grade9Details, setGrade9Details] = useState({ list: [] });\r\n  let [grade10Details, setGrade10Details] = useState({ list: [] });\r\n  let [advisoryGrades, setAdvisoryGrades] = useState([]);\r\n\r\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\r\n  let [selectedGrade, setSelectedGrade] = useState({});\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n\r\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\r\n\r\n  const upgradeStudent = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: \"Upgrade Student\",\r\n      date: new Date()\r\n    }\r\n    auditTrailService.add(auditTrailObj)\r\n    let ctr = 0;\r\n    await selectedListOfStudent.map(async student => {\r\n      setLoading(true)\r\n      let result = await gradesService.findyById(student.id);\r\n\r\n      let userCurrentGrade = (parseInt(result.data.gradeLevel))\r\n\r\n\r\n      if (userCurrentGrade < 10) {\r\n        let currentUser = result.data\r\n        let allStudent = await userService.findAllUser();\r\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n        let currentStudent = result1[0]\r\n        currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\r\n        let response = await userService.update(currentStudent)\r\n\r\n        currentUser.status = false;\r\n        let response1 = await gradesService.update(currentUser)\r\n\r\n        let gradeObj = {\r\n          status: true,\r\n          student: currentUser.student,\r\n          gradeLevel: (userCurrentGrade + 1).toString(),\r\n          section: currentUser.student.section,\r\n          schoolYear: currentStudent.schoolYear,\r\n          subjects: [{\r\n            subjectName: \"English\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Filipino\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Science\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Math\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"MAPEH\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Values\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Music\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Art\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"PE\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear: currentUser.schoolYear,\r\n            subjectName: \"Health\",\r\n            subjectGrade: {\r\n              firstQuarter: 0,\r\n              secondQuarter: 0,\r\n              thirdQuarter: 0,\r\n              fourthQuarter: 0\r\n            }\r\n          }]\r\n        }\r\n\r\n        let response2 = gradesService.add(gradeObj)\r\n\r\n\r\n      } else {\r\n        let currentUser = result.data\r\n        let allStudent = await userService.findAllUser();\r\n        let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\r\n        let currentStudent = result1[0]\r\n        currentStudent.gradeLevel = \"Graduate\"\r\n        let response = await userService.update(currentStudent)\r\n\r\n        currentUser.status = false;\r\n        let response1 = await gradesService.update(currentUser)\r\n      }\r\n      ctr = ctr + 1\r\n      if (ctr === selectedListOfStudent.length) {\r\n        setLoading(false)\r\n        window.location.reload(false)\r\n      }\r\n    })\r\n\r\n  };\r\n\r\n  const editGrade = async (values, isAdvisory = false) => {\r\n    console.log(values);\r\n    let result = await gradesService.findyById(values._id);\r\n    let grade = result.data\r\n\r\n    if (values.English) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.English.firstQuarter) {\r\n        firstQuarter = values.English.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.English.secondQuarter) {\r\n        secondQuarter = values.English.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.English.thirdQuarter) {\r\n        thirdQuarter = values.English.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.English.fourthQuarter) {\r\n        fourthQuarter = values.English.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newEnglishGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[0].subjectGrade = newEnglishGrade;\r\n        grade.subjects[0].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[0].recommendedGrade = newEnglishGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Filipino) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Filipino.firstQuarter) {\r\n        firstQuarter = values.Filipino.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Filipino.secondQuarter) {\r\n        secondQuarter = values.Filipino.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Filipino.thirdQuarter) {\r\n        thirdQuarter = values.Filipino.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Filipino.fourthQuarter) {\r\n        fourthQuarter = values.Filipino.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newFilipinoGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      }\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[1].subjectGrade = newFilipinoGrade;\r\n        grade.subjects[1].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[1].recommendedGrade = newFilipinoGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Science) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Science.firstQuarter) {\r\n        firstQuarter = values.Science.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Science.secondQuarter) {\r\n        secondQuarter = values.Science.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Science.thirdQuarter) {\r\n        thirdQuarter = values.Science.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Science.fourthQuarter) {\r\n        fourthQuarter = values.Science.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newScienceGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[2].subjectGrade = newScienceGrade;\r\n        grade.subjects[2].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[2].recommendedGrade = newScienceGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Math) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Math.firstQuarter) {\r\n        firstQuarter = values.Math.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Math.secondQuarter) {\r\n        secondQuarter = values.Math.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Math.thirdQuarter) {\r\n        thirdQuarter = values.Math.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Math.fourthQuarter) {\r\n        fourthQuarter = values.Math.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newMathGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[3].subjectGrade = newMathGrade;\r\n        grade.subjects[3].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[3].recommendedGrade = newMathGrade;\r\n      };\r\n    }\r\n\r\n    if (values.MAPEH) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.MAPEH.firstQuarter) {\r\n        firstQuarter = values.MAPEH.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.MAPEH.secondQuarter) {\r\n        secondQuarter = values.MAPEH.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.MAPEH.thirdQuarter) {\r\n        thirdQuarter = values.MAPEH.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.MAPEH.fourthQuarter) {\r\n        fourthQuarter = values.MAPEH.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newMAPEHGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[4].subjectGrade = newMAPEHGrade;\r\n        grade.subjects[4].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[4].recommendedGrade = newMAPEHGrade;\r\n      };\r\n    }\r\n\r\n    if (values.Values) {\r\n      let firstQuarter = 0;\r\n      let secondQuarter = 0;\r\n      let thirdQuarter = 0;\r\n      let fourthQuarter = 0;\r\n\r\n      if (values.Values.firstQuarter) {\r\n        firstQuarter = values.Values.firstQuarter\r\n      } else {\r\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\r\n      }\r\n\r\n      if (values.Values.secondQuarter) {\r\n        secondQuarter = values.Values.secondQuarter\r\n      } else {\r\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\r\n      }\r\n\r\n      if (values.Values.thirdQuarter) {\r\n        thirdQuarter = values.Values.thirdQuarter\r\n      } else {\r\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\r\n      }\r\n\r\n      if (values.Values.fourthQuarter) {\r\n        fourthQuarter = values.Values.fourthQuarter\r\n      } else {\r\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\r\n      }\r\n\r\n      let newValuesGrade = {\r\n        firstQuarter: firstQuarter,\r\n        secondQuarter: secondQuarter,\r\n        thirdQuarter: thirdQuarter,\r\n        fourthQuarter: fourthQuarter\r\n      };\r\n\r\n      if (isAdvisory) {\r\n        grade.subjects[5].subjectGrade = newValuesGrade;\r\n        grade.subjects[5].recommendedGrade = {};\r\n      } else {\r\n        grade.subjects[5].recommendedGrade = newValuesGrade;\r\n      };\r\n    };\r\n\r\n    const subjectDummy = {\r\n      firstQuarter: 0,\r\n      secondQuarter: 0,\r\n      thirdQuarter: 0,\r\n      fourthQuarter: 0\r\n    };\r\n\r\n    if (values.Music) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Music');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Music', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Music',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n\r\n    if (values.Art) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Art');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Art', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Art',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    if (values.PE) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'PE');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'PE', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'PE',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    if (values.Health) {\r\n      let subjectIndex = grade.subjects.findIndex(subject => subject.subjectName === 'Health');\r\n      let subjectGrades = (subjectIndex !== -1) ? grade.subjects[subjectIndex] : subjectDummy;\r\n      let updatedGrades = constructSubjectGrades(values, 'Health', subjectGrades);\r\n\r\n      let newSubject = {\r\n        schoolYear: grade.subjects[0].schoolYear,\r\n        subjectName: 'Health',\r\n        subjectGrade: updatedGrades\r\n      };\r\n\r\n      if (isAdvisory) {\r\n\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].subjectGrade = updatedGrades;\r\n          grade.subjects[subjectIndex].recommendedGrade = {};\r\n        };\r\n      } else {\r\n        if (subjectIndex === -1) {\r\n          grade.subjects.push(newSubject);\r\n        } else {\r\n          grade.subjects[subjectIndex].recommendedGrade = updatedGrades;\r\n        };\r\n      };\r\n    };\r\n\r\n    let updateResult = await gradesService.update(grade);\r\n    //add record  to audit trail\r\n    let loggedDate = new Date().toISOString();\r\n    let userDetails = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity: 'Teacher has updated student grades',\r\n      date: loggedDate\r\n    };\r\n    await auditTrailService.add(userDetails);\r\n    window.location.reload();\r\n  };\r\n\r\n  const constructSubjectGrades = (values, subject = '', subjectGrade) => {\r\n    let firstQuarter = 0;\r\n    let secondQuarter = 0;\r\n    let thirdQuarter = 0;\r\n    let fourthQuarter = 0;\r\n\r\n    if (values[subject].firstQuarter) {\r\n      firstQuarter = values[subject].firstQuarter\r\n    } else {\r\n      firstQuarter = subjectGrade.firstQuarter\r\n    }\r\n\r\n    if (values[subject].secondQuarter) {\r\n      secondQuarter = values[subject].secondQuarter\r\n    } else {\r\n      secondQuarter = subjectGrade.secondQuarter\r\n    }\r\n\r\n    if (values[subject].thirdQuarter) {\r\n      thirdQuarter = values[subject].thirdQuarter\r\n    } else {\r\n      thirdQuarter = subjectGrade.thirdQuarter\r\n    }\r\n\r\n    if (values[subject].fourthQuarter) {\r\n      fourthQuarter = values[subject].fourthQuarter\r\n    } else {\r\n      fourthQuarter = subjectGrade.fourthQuarter\r\n    };\r\n\r\n    let gradesObj = {\r\n      firstQuarter: firstQuarter,\r\n      secondQuarter: secondQuarter,\r\n      thirdQuarter: thirdQuarter,\r\n      fourthQuarter: fourthQuarter\r\n    };\r\n\r\n    return gradesObj;\r\n  };\r\n  const showGrade = () => {\r\n    setSelectedGrade({\r\n      schoolYear: \"\",\r\n      subjects: {},\r\n      grade: \"\",\r\n      student: {},\r\n      gradeLevel: \"\",\r\n      section: \"\",\r\n    })\r\n    setShowGradeVisible(true)\r\n  };\r\n\r\n  const loadGrade = (gradeObj, idNumber, level = '') => {\r\n    getCurrentGradeUser(idNumber, level)\r\n    setSelectedGrade({ ...gradeObj });\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const loadSelectedGrade = async (gradeId) => {\r\n    let response = await gradesService.findyById(gradeId);\r\n    setSelectedGrade({ ...response.data });\r\n    setShowGradeVisible(true);\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const filterCurrentGradeUser = async (gradeLevel) => {\r\n    setLoading(true)\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n\r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1 = [];\r\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n\r\n      setSelectedUser(result[0].student)\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const currentGradeUser = async () => {\r\n    let response = await gradesService.findAllGrades();\r\n    let result = [];\r\n    if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\r\n    } else {\r\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\r\n    }\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student)\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n\r\n      let response = await advisoryService.findAllAdvisory()\r\n      let result1 = [];\r\n      if (JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\r\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\r\n      } else {\r\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\r\n      }\r\n      setStudentAdvisor(result1[0]);\r\n      setSelectedUserGrade(newArray);\r\n\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedUserGrade([])\r\n    };\r\n\r\n  };\r\n\r\n  const buidSubjectRow = (subject) => {\r\n    let remarks = \"\";\r\n    let finalGrade = (subject.subjectGrade.firstQuarter +\r\n      subject.subjectGrade.secondQuarter +\r\n      subject.subjectGrade.thirdQuarter +\r\n      subject.subjectGrade.fourthQuarter) / 4;\r\n\r\n    let inComplete = false;\r\n    let firstQuarter = subject.subjectGrade.firstQuarter;\r\n    let secondQuarter = subject.subjectGrade.secondQuarter;\r\n    let thirdQuarter = subject.subjectGrade.thirdQuarter;\r\n    let fourthQuarter = subject.subjectGrade.fourthQuarter;\r\n\r\n    //leave blank all zero grades\r\n    if (firstQuarter === 0) {\r\n      firstQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (secondQuarter === 0) {\r\n      secondQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (thirdQuarter === 0) {\r\n      thirdQuarter = '';\r\n      inComplete = true;\r\n    };\r\n    if (fourthQuarter === 0) {\r\n      fourthQuarter = '';\r\n      inComplete = true;\r\n    };\r\n\r\n    if (!inComplete && finalGrade >= 75) {\r\n      remarks = \"Passed\";\r\n    } else if (!inComplete && finalGrade < 75){\r\n      remarks = \"Failed\";\r\n    } else {\r\n      remarks = '';\r\n    };;\r\n\r\n    return {\r\n      key: subject._id,\r\n      id: subject._id,\r\n      subject: subject.subjectName,\r\n      Quarter1st: firstQuarter,\r\n      Quarter2nd: secondQuarter,\r\n      Quarter3rd: thirdQuarter,\r\n      Quarter4th: fourthQuarter,\r\n      FinalGrade: (!inComplete) ? finalGrade : '',\r\n      Remarks: remarks\r\n    }\r\n  };\r\n\r\n  const getCurrentGradeUser = async (idNumber, level = '') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\r\n    if (result.length >= 1 && result[0].subjects && result[0].subjects.length >= 1) {\r\n      setSelectedUser(result[0].student);\r\n      let newArray = result[0].subjects.map((subject) => {\r\n        return buidSubjectRow(subject);\r\n      });\r\n      setSelectedGradeUser(newArray);\r\n\r\n    } else {\r\n      setSelectedUser({})\r\n      setSelectedGradeUser([])\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const loadGrades = async () => {\r\n    let finalOffspring = [];\r\n    let response = await gradesService.findAllGrades();\r\n    let parent = await userService.findAllUser();\r\n    let result = parent.data.filter(user => user.parent);\r\n    let newArray = [];\r\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\r\n    await response.data.map((user) => {\r\n      offspring.map((off) => {\r\n        if (user.student.idNumber === off.idNumber) {\r\n          finalOffspring.push(user)\r\n        }\r\n      });\r\n    });\r\n    newArray = finalOffspring.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.student.firstName,\r\n        lastName: user.student.lastName,\r\n        middleName: user.student.middleName,\r\n        idNumber: user.student.idNumber,\r\n        contactNumber: user.student.contactNumber,\r\n        email: user.student.email,\r\n        section: user.section,\r\n        gradeLevel: user.gradeLevel,\r\n        action:\r\n          <Button onClick={() => loadGrade(user, user.student.idNumber)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setGradeDetails({\r\n      list: newArray\r\n    })\r\n  };\r\n\r\n  const loadStudentGradesPerLevel = async (level='') => {\r\n    let response = await gradesService.findAllGrades(level);\r\n    let result = response.data.filter(user => user.gradeLevel === level && user.status)\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.student.firstName,\r\n        lastName: user.student.lastName,\r\n        middleName: user.student.middleName,\r\n        idNumber: user.student.idNumber,\r\n        contactNumber: user.student.contactNumber,\r\n        email: user.student.email,\r\n        section: user.student.section,\r\n        action:\r\n          <Button onClick={() => {\r\n            setLoading(true);\r\n            setTimeout(() => { loadGrade(user, user.student.idNumber, level) }, 2300);\r\n            setTimeout(() => { setLoading(false);}, 2500 );\r\n          }} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const loadGrades1 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('1');\r\n    setGrade1Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades2 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('2');\r\n    setGrade2Details({\r\n      list: newArray\r\n    })\r\n  };\r\n\r\n  const loadGrades3 = async () => {\r\n   let newArray = await loadStudentGradesPerLevel('3');\r\n   setGrade3Details({\r\n      list: newArray\r\n    });\r\n  };\r\n\r\n  const loadGrades4 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('4');\r\n    setGrade4Details({\r\n       list: newArray\r\n     });\r\n  }\r\n\r\n  const loadGrades5 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('5');\r\n    setGrade5Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades6 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('6');\r\n    setGrade6Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades7 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('7');\r\n    setGrade7Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades8 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('8');\r\n    setGrade8Details({\r\n      list: newArray\r\n    });\r\n  }\r\n\r\n  const loadGrades9 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('9');\r\n    setGrade9Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadGrades10 = async () => {\r\n    let newArray = await loadStudentGradesPerLevel('10');\r\n    setGrade10Details({\r\n      list: newArray\r\n    })\r\n  }\r\n\r\n  const loadAdvisoryGrades = async () => {\r\n    let user = JSON.parse(sessionStorage.user);\r\n    const userData = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      middleName: user.middleName\r\n    };\r\n\r\n    try {\r\n      let advisory = await AdditionalService.getAdvisory(userData);\r\n\r\n      if (!advisory) return;\r\n\r\n      let response = await gradesService.findAllGrades(advisory.data.gradeLevel);\r\n      let result = response.data.filter(user => user.gradeLevel === advisory.data.gradeLevel && user.status)\r\n      let list = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.student.firstName,\r\n          lastName: user.student.lastName,\r\n          middleName: user.student.middleName,\r\n          idNumber: user.student.idNumber,\r\n          contactNumber: user.student.contactNumber,\r\n          email: user.student.email,\r\n          section: user.student.section,\r\n          action:\r\n            <Button onClick={() => loadGrade(user, user.student.idNumber, advisory.data.gradeLevel)} key={\"VIEW_\" + user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n\r\n      setAdvisoryGrades(list);\r\n    } catch (error) {\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadGrades1();\r\n    loadGrades2();\r\n    loadGrades3();\r\n    loadGrades4();\r\n    loadGrades5();\r\n    loadGrades6();\r\n    loadGrades7();\r\n    loadGrades8();\r\n    loadGrades9();\r\n    loadGrades10();\r\n    loadGrades();\r\n    currentGradeUser();\r\n    getListOfTeacher();\r\n    loadAdvisoryGrades();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadGrades1,\r\n    grade2Details,\r\n    grade3Details,\r\n    grade4Details,\r\n    grade5Details,\r\n    grade6Details,\r\n    grade7Details,\r\n    grade8Details,\r\n    grade9Details,\r\n    grade10Details,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    gradeDetails,\r\n    selectedUserGrade,\r\n    showAllGradeVisible,\r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    advisoryGrades\r\n  }\r\n};\r\n\r\nexport default Grade1Action;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport UserForm from './userDetailsForm'\r\nimport UserTable from './gradeTable'\r\nimport GradeAction from '../grade/gradeAction'\r\nimport AdvisorAction from '../grade/advisoryAction'\r\nconst { Option } = Select;\r\n\r\n\r\nconst EmployeePage = () => {\r\n\r\n  let {\r\n    selectedUserGrade,\r\n    showAllGradeVisible, \r\n    setShowAllGradeVisible,\r\n    selectedUser,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Student Details</Typography.Title>\r\n            }>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Full Name: </b>{selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName: null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Grade Level: </b>{JSON.parse(sessionStorage.user).gradeLevel}\r\n                  </p>\r\n                  <p>\r\n                    <b>Section: </b>{selectedUser ? selectedUser.section: null}\r\n                  </p>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName: null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber: null}\r\n                  </p>\r\n                  <b>Yr./Lvl: </b>\r\n                  <Select className=\"ml-15\" placeholder=\"Select Yr./Level\" onChange={(value)=> filterCurrentGradeUser(value) }>\r\n                    <Option value=\"1\">1</Option>\r\n                    <Option value=\"2\">2</Option>\r\n                    <Option value=\"3\">3</Option>\r\n                    <Option value=\"4\">4</Option>\r\n                    <Option value=\"5\">5</Option>\r\n                    <Option value=\"6\">6</Option>\r\n                    <Option value=\"7\">7</Option>\r\n                    <Option value=\"8\">8</Option>\r\n                    <Option value=\"9\">9</Option>\r\n                    <Option value=\"10\">10</Option>\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <UserTable details={selectedUserGrade ? selectedUserGrade: []}/>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card>   \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Collapse } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\n\r\nconst Grade1EditForm = ({ upgradeStudent, add, update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel, isAdviser = false }) => {\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  const userRole = JSON.parse(sessionStorage.user).role;\r\n\r\n  let lowestGrade = 50;\r\n  const hasUpdate = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n\r\n    if (subject && subject.recommendedGrade && subject.recommendedGrade[quarter] && subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter]) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  let updatesHolder = {};\r\n  let mapehObj = {\r\n    MAPEH1: 0,\r\n    MAPEH2: 0,\r\n    MAPEH3: 0,\r\n    MAPEH4: 0\r\n  };\r\n\r\n  const autoFillGrade = (subjectName = '', quarter = '', field = '', isDefault = false, quarterNum = 0) => {\r\n    let activeQuarter = sessionStorage.quarter;\r\n    let index = selectedGrade.subjects.findIndex(subject => subject.subjectName === subjectName);\r\n    let value = (selectedGrade.subjects[index] && selectedGrade.subjects[index].recommendedGrade) ? selectedGrade.subjects[index].recommendedGrade[quarter] : null;\r\n    let dafaultVal = (selectedGrade.subjects[index]) ? selectedGrade.subjects[index].subjectGrade[quarter] : lowestGrade;\r\n    dafaultVal = (dafaultVal && dafaultVal >= 50) ? dafaultVal : (activeQuarter === quarterNum) ? lowestGrade : 0;\r\n    value = (isDefault) ? dafaultVal : value;\r\n    let holder = {\r\n      [field]: value\r\n    };\r\n    updatesHolder = Object.assign(updatesHolder, holder);\r\n    return value;\r\n  };\r\n\r\n  //used to get the confirmed grades\r\n  const getGrade = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n    if (subject) {\r\n      return subject.subjectGrade[quarter];\r\n    } else {\r\n      return '0';\r\n    };\r\n  };\r\n\r\n  const getMAPEHGrades = (quarter) => {\r\n    let q1 = document.getElementbyId('Music' + quarter).value;\r\n    let q2 = document.getElementbyId('Art' + quarter).value;\r\n    let q3 = document.getElementbyId('PE' + quarter).value;\r\n    let q4 = document.getElementbyId('Health' + quarter).value;\r\n    let average = (q1 + q2 + q3 + q4) / 4;\r\n    let key = 'MAPEH' + quarter;\r\n    mapehObj[key] = average;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedGrade}\r\n      enableReinitialize={true}\r\n      onSubmit={async inputValues => {\r\n\r\n        let values = {};\r\n        values = Object.assign(values, updatesHolder);\r\n        values = Object.assign(values, inputValues);\r\n\r\n        let newValues = {\r\n          _id: values._id\r\n        };\r\n        let English = {};\r\n        let Filipino = {};\r\n        let Science = {};\r\n        let Math = {};\r\n        let MAPEH = {};\r\n        let Values = {};\r\n        let Music = {};\r\n        let Art = {};\r\n        let PE = {};\r\n        let Health = {};\r\n\r\n        if (values.English1 || values.English2 || values.English3 || values.English4) {\r\n          English = {\r\n            firstQuarter: values.English1,\r\n            secondQuarter: values.English2,\r\n            thirdQuarter: values.English3,\r\n            fourthQuarter: values.English4\r\n          }\r\n          newValues.English = English;\r\n        }\r\n        if (values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\r\n          Filipino = {\r\n            firstQuarter: values.Filipino1,\r\n            secondQuarter: values.Filipino2,\r\n            thirdQuarter: values.Filipino3,\r\n            fourthQuarter: values.Filipino4\r\n          }\r\n          newValues.Filipino = Filipino;\r\n        }\r\n        if (values.Science1 || values.Science2 || values.Science3 || values.Science4) {\r\n          Science = {\r\n            firstQuarter: values.Science1,\r\n            secondQuarter: values.Science2,\r\n            thirdQuarter: values.Science3,\r\n            fourthQuarter: values.Science4\r\n          }\r\n          newValues.Science = Science;\r\n        }\r\n        if (values.Math1 || values.Math2 || values.Math3 || values.Math4) {\r\n          Math = {\r\n            firstQuarter: values.Math1,\r\n            secondQuarter: values.Math2,\r\n            thirdQuarter: values.Math3,\r\n            fourthQuarter: values.Math4\r\n          }\r\n          newValues.Math = Math;\r\n        }\r\n        if (values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\r\n          MAPEH = {\r\n            firstQuarter: values.MAPEH1,\r\n            secondQuarter: values.MAPEH2,\r\n            thirdQuarter: values.MAPEH3,\r\n            fourthQuarter: values.MAPEH4\r\n          }\r\n          newValues.MAPEH = MAPEH;\r\n        }\r\n        if (values.Values1 || values.Values2 || values.Values3 || values.Values4) {\r\n          Values = {\r\n            firstQuarter: values.Values1,\r\n            secondQuarter: values.Values2,\r\n            thirdQuarter: values.Values3,\r\n            fourthQuarter: values.Values4\r\n          }\r\n          newValues.Values = Values;\r\n        };\r\n\r\n        if (values.Music1 || values.Music2 || values.Music3 || values.Music4) {\r\n          Music = {\r\n            firstQuarter: values.Music1,\r\n            secondQuarter: values.Music2,\r\n            thirdQuarter: values.Music3,\r\n            fourthQuarter: values.Music4\r\n          }\r\n          newValues.Music = Music;\r\n        };\r\n\r\n        if (values.Art1 || values.Art2 || values.Art3 || values.Art4) {\r\n          Art = {\r\n            firstQuarter: values.Art1,\r\n            secondQuarter: values.Art2,\r\n            thirdQuarter: values.Art3,\r\n            fourthQuarter: values.Art4\r\n          }\r\n          newValues.Art = Art;\r\n        };\r\n\r\n        if (values.PE1 || values.PE2 || values.PE3 || values.PE4) {\r\n          PE = {\r\n            firstQuarter: values.PE1,\r\n            secondQuarter: values.PE2,\r\n            thirdQuarter: values.PE3,\r\n            fourthQuarter: values.PE4\r\n          }\r\n          newValues.PE = PE;\r\n        };\r\n\r\n        if (values.Health1 || values.Health2 || values.Health3 || values.Health4) {\r\n          Health = {\r\n            firstQuarter: values.Health1,\r\n            secondQuarter: values.Health2,\r\n            thirdQuarter: values.Health3,\r\n            fourthQuarter: values.Health4\r\n          }\r\n          newValues.Health = Health;\r\n        };\r\n        update(newValues, isAdviser);\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\" >\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                  <Input disabled={true} value={values.student.idNumber} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"Name\" name=\"name\">\r\n                  <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                  <Input disabled={true} name=\"schoolYear\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects[0] &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"English\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"English1\"\r\n                              defaultValue={hasUpdate('English', 'firstQuarter') ?\r\n                                autoFillGrade('English', 'firstQuarter', 'English1') :\r\n                                autoFillGrade('English', 'firstQuarter', 'English1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"English2\"\r\n                              defaultValue={hasUpdate('English', 'secondQuarter') ?\r\n                                autoFillGrade('English', 'secondQuarter', 'English2') :\r\n                                autoFillGrade('English', 'secondQuarter', 'English2', true, '2')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"English3\"\r\n                              defaultValue={hasUpdate('English', 'thirdQuarter') ?\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3') :\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3', true, '3')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"English4\"\r\n                              defaultValue={hasUpdate('English', 'fourthQuarter') ?\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4') :\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4', true, '4')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[1] &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Filipino\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Filipino1\"\r\n                              defaultValue={hasUpdate('Filipino', 'firstQuarter') ?\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1') :\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Filipino2\"\r\n                              defaultValue={hasUpdate('Filipino', 'secondQuarter') ?\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2') :\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2', true, '2')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Filipino3\"\r\n                              defaultValue={hasUpdate('Filipino', 'thirdQuarter') ?\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3') :\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3', true, '3')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Filipino4\"\r\n                              defaultValue={hasUpdate('Filipino', 'fourthQuarter') ?\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4') :\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4', true, '4')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects.length !== 0 &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Science\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Science1\"\r\n                              defaultValue={hasUpdate('Science', 'firstQuarter') ?\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1') :\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Science2\"\r\n                              defaultValue={hasUpdate('Science', 'secondQuarter') ?\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2') :\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Science3\"\r\n                              defaultValue={hasUpdate('Science', 'thirdQuarter') ?\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3') :\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Science4\"\r\n                              defaultValue={hasUpdate('Science', 'fourthQuarter') ?\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4') :\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[3] &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Math\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Math1\"\r\n                              defaultValue={hasUpdate('Math', 'firstQuarter') ?\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1') :\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Math2\"\r\n                              defaultValue={hasUpdate('Math', 'secondQuarter') ?\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2') :\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Math3\"\r\n                              defaultValue={hasUpdate('Math', 'thirdQuarter') ?\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3') :\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Math4\"\r\n                              defaultValue={hasUpdate('Math', 'fourthQuarter') ?\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4') :\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4', true, 4)\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[4] &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"MAPEH\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"MAPEH1\"\r\n                              defaultValue={hasUpdate('MAPEH', 'firstQuarter') ?\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1') :\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"MAPEH2\"\r\n                              defaultValue={hasUpdate('MAPEH', 'secondQuarter') ?\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2') :\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"MAPEH3\"\r\n                              defaultValue={hasUpdate('MAPEH', 'thirdQuarter') ?\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3') :\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"MAPEH4\"\r\n                              defaultValue={hasUpdate('MAPEH', 'fourthQuarter') ?\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4') :\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[5] &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Values\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Values1\"\r\n                              defaultValue={hasUpdate('Values', 'firstQuarter') ?\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1') :\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Values2\"\r\n                              defaultValue={hasUpdate('Values', 'secondQuarter') ?\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2') :\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Values3\"\r\n                              defaultValue={hasUpdate('Values', 'thirdQuarter') ?\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Values4\"\r\n                              defaultValue={hasUpdate('Values', 'fourthQuarter') ?\r\n                                autoFillGrade('Values', 'fourthQuarter', 'Values4') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              {/*============================================================================ */}\r\n              {(isAdviser ||\r\n                selectedTeacherAssignedGrade.subjects[4] &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                ? (\r\n                  <React.Fragment>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"Music\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Music1\"\r\n                                  defaultValue={hasUpdate('Music', 'firstQuarter') ?\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1') :\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Music2\"\r\n                                  defaultValue={hasUpdate('Music', 'secondQuarter') ?\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2') :\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Music3\"\r\n                                  defaultValue={hasUpdate('Music', 'thirdQuarter') ?\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3') :\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Music4\"\r\n                                  defaultValue={hasUpdate('Music', 'fourthQuarter') ?\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4') :\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Art\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Art1\"\r\n                                  defaultValue={hasUpdate('Art', 'firstQuarter') ?\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1') :\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Art2\"\r\n                                  defaultValue={hasUpdate('Art', 'secondQuarter') ?\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2') :\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Art3\"\r\n                                  defaultValue={hasUpdate('Art', 'thirdQuarter') ?\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Art4\"\r\n                                  defaultValue={hasUpdate('Art', 'fourthQuarter') ?\r\n                                    autoFillGrade('Art', 'fourthQuarter', 'Art4') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"PE\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"PE1\"\r\n                                  defaultValue={hasUpdate('PE', 'firstQuarter') ?\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1') :\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"PE2\"\r\n                                  defaultValue={hasUpdate('PE', 'secondQuarter') ?\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2') :\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"PE3\"\r\n                                  defaultValue={hasUpdate('PE', 'thirdQuarter') ?\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3') :\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"PE4\"\r\n                                  defaultValue={hasUpdate('PE', 'fourthQuarter') ?\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4') :\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Health\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Health1\"\r\n                                  defaultValue={hasUpdate('Health', 'firstQuarter') ?\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1') :\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Health2\"\r\n                                  defaultValue={hasUpdate('Health', 'secondQuarter') ?\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2') :\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\" && userRole !== 'Teacher'}\r\n                                  name=\"Health3\"\r\n                                  defaultValue={hasUpdate('Health', 'thirdQuarter') ?\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3') :\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Health4\"\r\n                                  defaultValue={hasUpdate('Health', 'fourthQuarter') ?\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4') :\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                ) : ('')}\r\n              {/*============================================================================ */}\r\n            </>\r\n            {userRole === 'Teacher' ? (\r\n              <Button className=\"btn-save\" htmlType=\"submit\">\r\n                <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n              </Button>\r\n            ) : ('')}\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default Grade1EditForm;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel) \r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"English\" name=\"english\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Filipino\" name=\"filipino\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Science\" name=\"science\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Math\" name=\"math\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Values\" name=\"values\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled, DeleteOutlined } from '@ant-design/icons';\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nconst { Option } = Select;\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n  let {\r\n    deleteAdvisory\r\n  } = AdvisorAction({});\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel)\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={24}>\r\n            <Form.Item label=\"Advisor\" name=\"advisor\">\r\n               <Select name=\"advisor\" defaultValue={selectedTeacherAssgined ? selectedTeacherAssgined.teacher.firstName + \" \" + selectedTeacherAssgined.teacher.lastName : null}>\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n                 { selectedTeacherAssgined ? (\r\n                    <Button type=\"danger\" style={{ marginLeft: '10px' }} ghost htmlType=\"button\" onClick={() => deleteAdvisory(selectedTeacherAssgined._id)}>\r\n                      <DeleteOutlined /> Remove Advisor\r\n                    </Button>\r\n                  ) : ('') }\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import BaseService from '../../baseService';\r\nclass TeacherService extends BaseService {\r\n  constructor() {\r\n    super('teacher');\r\n  }\r\n\r\n  add = teacherObj => {\r\n    return this.axiosInstance.post('/create-teacher', teacherObj);\r\n  };\r\n\r\n  update = teacherObj => {\r\n    return this.axiosInstance.put('/update-teacher/' + teacherObj._id, teacherObj);\r\n  };\r\n  \r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-teacher/' + id);\r\n  };\r\n\r\n  findAllTeacher = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n}\r\n\r\nexport default new TeacherService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nimport teacherService from '../grade/teacherService';\r\nconst TeacherAction = (initial = { searchRequest: {} }) => {\r\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\r\n  let [selectedTeacherAssgined, setSelectedTeacherAssgined] = useState({});\r\n  let [selectedTeacherAssignedGrade1, setSelectedTeacherAssignedGrade1] = useState([]);\r\n  let [selectedTeacherAssignedGrade2, setSelectedTeacherAssignedGrade2] = useState([]);\r\n  let [selectedTeacherAssignedGrade3, setSelectedTeacherAssignedGrade3] = useState([]);\r\n  let [selectedTeacherAssignedGrade4, setSelectedTeacherAssignedGrade4] = useState([]);\r\n  let [selectedTeacherAssignedGrade5, setSelectedTeacherAssignedGrade5] = useState([]);\r\n  let [selectedTeacherAssignedGrade6, setSelectedTeacherAssignedGrade6] = useState([]);\r\n  let [selectedTeacherAssignedGrade7, setSelectedTeacherAssignedGrade7] = useState([]);\r\n  let [selectedTeacherAssignedGrade8, setSelectedTeacherAssignedGrade8] = useState([]);\r\n  let [selectedTeacherAssignedGrade9, setSelectedTeacherAssignedGrade9] = useState([]);\r\n  let [selectedTeacherAssignedGrade10, setSelectedTeacherAssignedGrade10] = useState([]);\r\n  let [showTeacherVisible, setShowTeacherVisible] = useState(false);\r\n\r\n  const add = async (values, gradeLevel) => {\r\n    let English = await userService.findyById(values.english)\r\n    let Filipino = await userService.findyById(values.filipino)\r\n    let Science = await userService.findyById(values.science)\r\n    let Math = await userService.findyById(values.math)\r\n    let Values = await userService.findyById(values.values)\r\n    let Mapeh = await userService.findyById(values.mapeh)\r\n    let finalAddValue = {\r\n        gradeLevel : gradeLevel,\r\n        subjects: [{\r\n            subjectName: \"English\",\r\n            teacher: English.data\r\n            },\r\n            {\r\n            subjectName: \"Filipino\",\r\n            teacher: Filipino.data\r\n            },\r\n            {\r\n            subjectName: \"Science\",\r\n            teacher: Science.data\r\n            },   \r\n            {\r\n            subjectName: \"Math\",\r\n            teacher: Math.data\r\n            },   \r\n            {\r\n            subjectName: \"Values\",\r\n            teacher: Values.data\r\n            },     \r\n            {\r\n            subjectName: \"Mapeh\",\r\n            teacher: Mapeh.data\r\n            },                                                    \r\n        ]\r\n    }\r\n    let response = teacherService.add(finalAddValue)\r\n    window.location.reload()\r\n  };\r\n\r\n  const getListOfTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    setSelectedTeacher(result)\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade1 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"1\");\r\n    setSelectedTeacherAssignedGrade1(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade2 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"2\");\r\n    setSelectedTeacherAssignedGrade2(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade3 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"3\");\r\n    setSelectedTeacherAssignedGrade3(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade4 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"4\");\r\n    setSelectedTeacherAssignedGrade4(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade5 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"5\");\r\n    setSelectedTeacherAssignedGrade5(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade6 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"6\");\r\n    setSelectedTeacherAssignedGrade6(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade7 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"7\");\r\n    setSelectedTeacherAssignedGrade7(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade8 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"8\");\r\n    setSelectedTeacherAssignedGrade8(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade9 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"9\");\r\n    setSelectedTeacherAssignedGrade9(result[0])\r\n  };\r\n\r\n  const getListOfAssignedTeacherGrade10 = async () => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === \"10\");\r\n    setSelectedTeacherAssignedGrade10(result[0])\r\n  };\r\n\r\n  const hideTeacher = async () => {\r\n    setShowTeacherVisible(false)\r\n  };\r\n\r\n  const showTeacher = async (gradeLevel) => {\r\n    let response = await teacherService.findAllTeacher();\r\n    let result = response.data.filter(user => user.gradeLevel === gradeLevel);\r\n    if(result.length >= 1){\r\n        setSelectedTeacherAssgined(result[0].subjects)\r\n    } else {\r\n        setSelectedTeacherAssgined({})\r\n    }\r\n    setShowTeacherVisible(true)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfTeacher();\r\n    getListOfAssignedTeacherGrade1();\r\n    getListOfAssignedTeacherGrade2();\r\n    getListOfAssignedTeacherGrade3();\r\n    getListOfAssignedTeacherGrade4();\r\n    getListOfAssignedTeacherGrade5();\r\n    getListOfAssignedTeacherGrade6();\r\n    getListOfAssignedTeacherGrade7();\r\n    getListOfAssignedTeacherGrade8();\r\n    getListOfAssignedTeacherGrade9();\r\n    getListOfAssignedTeacherGrade10();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    selectedTeacher,\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  }\r\n};\r\n\r\nexport default TeacherAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst AdvisoryGrades = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading,\r\n    advisoryGrades\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Advisory Grades Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={advisoryGrades} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm\r\n\t\tupgradeStudent={upgradeStudent} \r\n\t\tadd={addGrade} update={editGrade} \r\n\t\tselectedTeacher={selectedTeacher} \r\n\t\tselectedGrade={selectedGrade} \r\n\t\tgradeLevel={\"2\"} \r\n\t\tselectedTeacherAssignedGrade={selectedTeacherAssignedGrade2} \r\n\t\tisAdviser=\"true\"/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n    </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default AdvisoryGrades;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\n\r\nimport GradeAction from './gradeAction'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport TeacherAction from './teacherAction';\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade1Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade1,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade1,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade1 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?       \r\n        <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"1\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n        }\r\n              {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"1\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade1Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"1\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade1}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 1\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"1\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                    Advisor for grade 1\r\n                  </Typography.Title>\r\n              }\r\n              width={500}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade1} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"1\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, RiseOutlined, UpSquareOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeAction from './gradeAction'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade2Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade2,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade2,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade2 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right btn-add ml-10\" type=\"save \" onClick={() => showTeacher(\"2\")}>\r\n          <PlusCircleOutlined type=\"add-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                           {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"2\")}>\r\n          <PlusCircleOutlined type=\"add-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          < RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade2Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"2\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade2}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 2\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"2\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 2\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade2} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"2\"}/>\r\n          </Drawer>\r\n    </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade3Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade3,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade3,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 13 }}>\r\n            <Typography.Title level={3} className=\"ml-15\">Grade3 Management</Typography.Title>\r\n          </Col>\r\n          <Col lg={{ span: 10 }}>\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"3\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button> : null\r\n            }\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ? <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"3\")}>\r\n              <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n              <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n                <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n              : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade3Details.list} />\r\n          </Col>\r\n        </Row>\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Student Info\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showGradeVisible}\r\n          onClose={() => { setShowGradeVisible(false) }}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade3} selectedGrade={selectedGrade} />\r\n          <StudentGradeTable details={selectedGradeUser ? selectedGradeUser : []} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Teachers for grade 3\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showTeacherVisible}\r\n          onClose={() => hideTeacher()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"3\"} />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title={\r\n            <Typography.Title level={4}>\r\n              Advisor for grade 3\r\n                  </Typography.Title>\r\n          }\r\n          width={700}\r\n          visible={showAdvisorVisible}\r\n          onClose={() => hideAdvisor()}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade3} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"3\"} />\r\n        </Drawer>\r\n      </Spin>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade4Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade4,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade4,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade4 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"4\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"4\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade4Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} gradeLevel={\"4\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade4} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 4\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"4\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 4\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade4} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"4\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade5Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade5,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade5,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade5 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"5\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"5\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade5Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"5\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade5}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 5\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"5\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 5\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade5} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"5\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade6Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade6,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade6,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade6 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"6\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"6\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade6Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"6\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade6}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 6\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"6\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 6\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade6} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"6\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade7Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade7,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade7,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade7 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"7\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"7\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade7Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"7\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade7}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 7\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"7\"}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 7\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade7} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"7\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade8Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade8,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade8,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade8 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"8\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"8\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade8Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"8\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade8}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 8\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"8\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 8\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade8} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"8\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\n\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade9Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade9,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade9,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 9\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 9\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"9\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\r\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\r\nimport GradeForm from './gradeForm'\r\nimport TeacherForm from './teacherForm'\r\nimport StudentGradeTable from '../userDetails/gradeTable'\r\nimport GradeAction from './gradeAction'\r\nimport AdvisoryForm from './advisoryForm'\r\nimport AdvisorAction from './advisoryAction';\r\n\r\nimport GradeTable from './gradeTable'\r\nimport TeacherAction from './teacherAction';\r\n\r\nconst GradePage = () => {\r\n\r\n\r\n  let {\r\n    addGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    showGrade,\r\n    grade10Details,\r\n    selectedGrade,\r\n    editGrade,\r\n    selectedTeacher,\r\n    selectedGradeUser,\r\n    upgradeStudent,\r\n    setSelectedListOfStudent,\r\n    loading\r\n  } = GradeAction({});\r\n\r\n  let {\r\n    showTeacherVisible,\r\n    hideTeacher,\r\n    showTeacher,\r\n    add,\r\n    selectedTeacherAssignedGrade10,\r\n    selectedTeacherAssgined\r\n  } = TeacherAction({});\r\n\r\n  let {\r\n    showAdvisorVisible,\r\n    hideAdvisor,\r\n    showAdvisor,\r\n    addAdvisor,\r\n    selectedAdvisoryAssignedGrade10,\r\n    selectedAdvisoryAssgined,\r\n    availableAdvisors\r\n  } = AdvisorAction({});\r\n\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n        <Spin spinning={loading} delay={0}>\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 13 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Grade10 Management</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 10 }}>\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"10\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\r\n             </Button>: null\r\n             }\r\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"10\")}>\r\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\r\n             </Button> : null}\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \r\n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\r\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\r\n             </Button>\r\n        : null}\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade10Details.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Student Info\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} selectedGrade={selectedGrade} gradeLevel={\"10\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade10}/>\r\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\r\n          </Drawer>\r\n\r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Teachers for grade 10\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showTeacherVisible}\r\n              onClose={()=> hideTeacher()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"10\"}/>\r\n          </Drawer>\r\n    \r\n          <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  Advisor for grade 10\r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showAdvisorVisible}\r\n              onClose={()=> hideAdvisor()}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade10} selectedTeacher={availableAdvisors} add={addAdvisor} gradeLevel={\"10\"}/>\r\n          </Drawer>\r\n          </Spin>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default GradePage;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst Grade1EditForm = ({selectedOffspring }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={selectedOffspring}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n                  {console.log(selectedOffspring)}\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                           <Input disabled={true} value={values.student && values.student.idNumber ? values.student.idNumber : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n               <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item label=\"Name\" name=\"name\">\r\n                           <Input disabled={true} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \"  + values.student.lastName : null}/>\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>\r\n\r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"School Year\" name=\"schoolYear\">\r\n                        <Input disabled={true} name=\"schoolYear\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>     \r\n                  <Row gutter={16}>\r\n                     <Col span={16}>\r\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\r\n                        <Input disabled={true} name=\"gradeLevel\" />\r\n                        </Form.Item>\r\n                     </Col>\r\n                  </Row>                     \r\n                  <Row gutter={16}>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>English</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[0].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[0].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Filipino</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[1].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[1].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Science</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[2].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[2].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                  <Col span={12}>\r\n                           <Card title={<b>Math</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[3].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[3].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                   \r\n                     <Col span={12}>\r\n                           <Card title={<b>MAPEH</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[4].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[4].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n\r\n                     <Col span={12}>\r\n                           <Card title={<b>Values</b>} disabled = {true} style={{ width: 300 }}>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"1st Q\" name=\"values\">\r\n                              <Input name=\"values\" disabled={true} value={values.subjects[5].subjectGrade.firstQuarter}/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"2nd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.secondQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                           <Row gutter={16}>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"3rd Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.thirdQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           <Col span={12}>\r\n                           <Form.Item label=\"4th Q\" name=\"values\">\r\n                              <Input   disabled={true} value={values.subjects[5].subjectGrade.fourthQuarter} name=\"values\"/>\r\n                           </Form.Item>\r\n                           </Col>\r\n                           </Row>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default Grade1EditForm;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst GradeTable = ({ details, setSelectedListOfStudent }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Id Number</b>,\r\n         dataIndex: 'idNumber',\r\n      },\r\n      {\r\n         title: <b>First Name</b>,\r\n         dataIndex: 'firstName',\r\n      },\r\n      {\r\n         title: <b>Middle Name</b>,\r\n         dataIndex: 'middleName',\r\n      },\r\n      {\r\n         title: <b>Last Name</b>,\r\n         dataIndex: 'lastName',\r\n      }, \r\n      {\r\n        title: <b>Contact Number</b>,\r\n        dataIndex: 'contactNumber',\r\n      },  \r\n      {\r\n        title: <b>Email</b>,\r\n        dataIndex: 'email',\r\n      },   \r\n      {\r\n        title: <b>Grade Level</b>,\r\n        dataIndex: 'gradeLevel',\r\n      },   \r\n      {\r\n        title: <b>Section</b>,\r\n        dataIndex: 'section',\r\n      },   \r\n      {\r\n        title: <b>Action</b>,\r\n        dataIndex: 'action',\r\n      },                            \r\n   ];\r\n\r\n   const rowUserSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n         setSelectedListOfStudent(selectedRows)\r\n      }\r\n  };\r\n\r\n\r\n   return (\r\n      <Table rowSelection={rowUserSelection} columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default GradeTable;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport GradeForm from '../offspring/offspringForm'\r\n\r\nimport GradeAction from '../grade/gradeAction'\r\n\r\nimport OffspringTable from '../offspring/offspringTable'\r\n\r\nconst OffspringPage = () => {\r\n\r\n\r\n  let {\r\n    selectedGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    gradeDetails\r\n  } = GradeAction({});\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 12 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 12 }}>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <OffspringTable details={gradeDetails.list} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  \r\n                  </Typography.Title>\r\n              }\r\n              width={700}\r\n              visible={showGradeVisible}\r\n              onClose={()=> { setShowGradeVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <GradeForm selectedOffspring={selectedGrade}/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default OffspringPage;\r\n\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst TimeKeepingTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: <b>Name</b>,\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: <b>ID Number</b>,\r\n        dataIndex: 'idNumber',\r\n     },\r\n      {\r\n         title: <b>Time In</b>,\r\n         dataIndex: 'timeIn',\r\n      },\r\n      {\r\n         title: <b>Time Out</b>,\r\n         dataIndex: 'timeOut',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default TimeKeepingTable;","import BaseService from '../../baseService';\r\nclass TimeKeepingService extends BaseService {\r\n  constructor() {\r\n    super('timekeeping');\r\n  }\r\n\r\n  add = timekeepingObj => {\r\n    return this.axiosInstance.post('/create-timekeeping', timekeepingObj);\r\n  };\r\n\r\n  update = timekeepingObj => {\r\n    return this.axiosInstance.put('/update-timekeeping/' + timekeepingObj._id, timekeepingObj);\r\n  };\r\n\r\n  findAllTimekeeping = () => {\r\n    return this.axiosInstance.get('/');\r\n  };\r\n\r\n  findyById = (id) => {\r\n    return this.axiosInstance.get('/edit-timekeeping/' + id);\r\n  };\r\n\r\n}\r\n\r\nexport default new TimeKeepingService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport TimekeepingService from './timeKeepingService';\r\nimport moment from 'moment';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\r\n  let [timeIn, setTimeIn] = useState(new Date());\r\n  let [timeOut, setTimeOut] = useState(new Date())\r\n\r\n  const filterUsers = async (date) => {\r\n    if(date){\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\r\n      let newArray = await result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } else {\r\n      let response = await TimekeepingService.findAllTimekeeping();\r\n      let newArray = await response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.student.firstName + \" \" + user.student.lastName,\r\n          idNumber: user.student.idNumber,\r\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n      }\r\n      })\r\n      setUserDetails({list: newArray});\r\n    } \r\n\r\n  }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await TimekeepingService.findAllTimekeeping();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        name: user.student.firstName + \" \" + user.student.lastName,\r\n        idNumber: user.student.idNumber,\r\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\r\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\r\n    }\r\n    })\r\n    setUserDetails({list: newArray});\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n}, []);\r\n\r\n\r\n  return {\r\n    userDetails,\r\n    filterUsers\r\n  }\r\n};\r\n\r\nexport default UserAction;","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport TimekeepingTable from './timeKeepingTable'\r\nimport AttendanceAction from './AttendanceAction'\r\nconst {Option} = Select;\r\n\r\nconst TimekeepingPage = () => {\r\n    let{\r\n        userDetails  ,\r\n        filterUsers\r\n    } = AttendanceAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\r\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"January\">January</Option>\r\n          <Option value=\"Febuary\">Febuary</Option>\r\n          <Option value=\"March\">March</Option>\r\n          <Option value=\"April\">April</Option>\r\n          <Option value=\"May\">May</Option>\r\n          <Option value=\"June\">June</Option>\r\n          <Option value=\"July\">July</Option>\r\n          <Option value=\"August\">August</Option>\r\n          <Option value=\"September\">September</Option>\r\n          <Option value=\"October\">October</Option>\r\n          <Option value=\"November\">November</Option>\r\n          <Option value=\"December\">December</Option>\r\n        </Select>\r\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"1\">1</Option>\r\n          <Option value=\"2\">2</Option>\r\n          <Option value=\"3\">3</Option>\r\n          <Option value=\"4\">4</Option>\r\n          <Option value=\"5\">5</Option>\r\n          <Option value=\"6\">6</Option>\r\n          <Option value=\"7\">7</Option>\r\n          <Option value=\"8\">8</Option>\r\n          <Option value=\"9\">9</Option>\r\n          <Option value=\"10\">10</Option>\r\n          <Option value=\"11\">11</Option>\r\n          <Option value=\"12\">12</Option>\r\n          <Option value=\"13\">13</Option>\r\n          <Option value=\"14\">14</Option>\r\n          <Option value=\"15\">15</Option>\r\n          <Option value=\"16\">16</Option>\r\n          <Option value=\"17\">17</Option>\r\n          <Option value=\"18\">18</Option>\r\n          <Option value=\"19\">19</Option>\r\n          <Option value=\"20\">20</Option>\r\n          <Option value=\"21\">21</Option>\r\n          <Option value=\"22\">22</Option>\r\n          <Option value=\"23\">23</Option>\r\n          <Option value=\"24\">24</Option>\r\n          <Option value=\"25\">25</Option>\r\n          <Option value=\"26\">26</Option>\r\n          <Option value=\"27\">27</Option>\r\n          <Option value=\"28\">28</Option>\r\n          <Option value=\"29\">29</Option>\r\n          <Option value=\"30\">30</Option>\r\n          <Option value=\"31\">31</Option>\r\n        </Select>\r\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\r\n        </Col>\r\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <TimekeepingTable details={userDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default TimekeepingPage;\r\n\r\n","import React from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\n\r\nconst LoginForm = ({login}) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            username: \"\",\r\n            password: \"\"\r\n         }}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values, actions) => {\r\n             login(values)\r\n            // await login(values)\r\n            // actions.setSubmitting(false);\r\n         }}\r\n         render={\r\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\r\n               <Spin spinning={isSubmitting}>\r\n                  <Form className=\"mt-10P\">\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              USERNAME:\r\n                           </b>\r\n                           <Form.Item name=\"username\">\r\n                              <Input name=\"username\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              PASSWORD:\r\n                           </b>\r\n                           <Form.Item name=\"password\">\r\n                              <Input.Password name=\"password\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\r\n                              Login\r\n                        </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </Spin>\r\n            )}\r\n      />\r\n   );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\r\n\r\nimport '../../App.css';\r\nimport LoginForm from './loginForm';\r\nimport UserAction from '../user/userAction'\r\n\r\nconst version = process.env.REACT_APP_VERSION\r\n\r\n\r\nconst Login = () => {\r\n    let [showLogin, setShowLogin] = useState(false);\r\n    let [showContact, setShowContact] = useState(false);\r\n    let [showAboutUs, setShowAboutUs] = useState(false);\r\n    let [showHome, setShowHome] = useState(true);\r\n    const {Content} = Layout;\r\n    let {\r\n        login,\r\n        loginCounter\r\n      } = UserAction({});\r\n    \r\n    const loginUser = async (credentials) => {\r\n        login(credentials);\r\n    }\r\n\r\n    const loginFunction = async () => {\r\n        setShowHome(false)\r\n        setShowLogin(true)\r\n    }\r\n\r\n    const contactFunction = async () => {\r\n        setShowHome(false)\r\n        setShowContact(true)\r\n    }\r\n\r\n    const aboutUsFunction = async () => {\r\n        setShowHome(false)\r\n        setShowAboutUs(true)\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"login\">\r\n            {/* Landing Page */}\r\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\r\n                <Row className=\"center\">\r\n                    <Col>\r\n                        <Button className=\"btn-home mr-10\">HOME</Button>\r\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\r\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\r\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Content> : null}\r\n            \r\n\r\n            {/* Login Page */}\r\n            {showLogin \r\n            \r\n            ?             <Content className=\"contentLogin mt-5P\">\r\n            <div className=\"center mb-15\">\r\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\r\n            </div>\r\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\r\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\r\n            <Row className=\"mt-10 center\">\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\r\n                    <LoginForm login={loginUser}/>\r\n                </Col>\r\n            </Row>\r\n        </Content> : null}\r\n\r\n\r\n             {/* Contact Page */}\r\n            {showContact ?            <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center mb-40\">\r\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    <b>Telephone Number:</b> 8 245 4148<br/>\r\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\r\n                    <b>Email Address: </b>\r\n                    <u className=\"blue\">\r\n                        admission.snss@gmail.com\r\n                    </u>\r\n                </Typography>\r\n            </Content>:null}\r\n \r\n\r\n\r\n            {/* About Page */}\r\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center h-70 mb-35\">\r\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\r\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\r\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\r\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\r\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\r\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \r\n                </Typography>\r\n            </Content> : null}\r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\r\n\r\nimport {\r\n    UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\r\n  } from '@ant-design/icons';\r\n  const { SubMenu } = Menu;\r\nconst SiderMenu = ({theme, collapsed}) => {\r\n    return ( \r\n        <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\r\n             {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 1 Management</span>\r\n                    <Link to={'/grade1'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 2 Management</span>\r\n                    <Link to={'/grade2'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 3 Management</span>\r\n                    <Link to={'/grade3'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 4 Management</span>\r\n                    <Link to={'/grade4'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 5 Management</span>\r\n                    <Link to={'/grade5'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 6 Management</span>\r\n                    <Link to={'/grade6'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 7 Management</span>\r\n                    <Link to={'/grade7'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 8 Management</span>\r\n                    <Link to={'/grade8'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 9 Management</span>\r\n                    <Link to={'/grade9'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Grade 10 Management</span>\r\n                    <Link to={'/grade10'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n           \r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"dashboard\" className=\"menus\">\r\n                    <DashboardOutlined />\r\n                    <span className=\"fs-13\">Dashboard</span>\r\n                    <Link to={'/dashboard'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n           \r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n             <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\r\n            {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Admin</span>\r\n                    <Link to={'/admin'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Parent</span>\r\n                    <Link to={'/parent'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Student</span>\r\n                    <Link to={'/student'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">List Of Teacher</span>\r\n                    <Link to={'/teacher'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n            </SubMenu> : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                <Menu.Item key=\"timekeeping\" className=\"menus\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Attendance</span>\r\n                    <Link to={'/timekeeping'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n              \r\n                {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?  \r\n                <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\r\n                    <UserOutlined/>\r\n                    <span className=\"fs-13\">Student Grade</span>\r\n                    <Link to={'/offspring'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n\r\n                {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                <Menu.Item key=\"auditTrail\" className=\"menus\">\r\n                   <AuditOutlined />\r\n                    <span className=\"fs-13\">Audit Trail</span>\r\n                    <Link to={'/auditTrail'} className=\"nav-link\" />\r\n                </Menu.Item>  : null}\r\n    \r\n                {JSON.parse(sessionStorage.user).role === \"Teacher\" ?  \r\n                    <Menu.Item key=\"advisoryClass\" className=\"menus\">\r\n                        <UserOutlined/>\r\n                        <span className=\"fs-13\">Advisory Class</span>\r\n                        <Link to={'/advisoryclass'} className=\"nav-link\" />\r\n                    </Menu.Item>  :\r\n                null}\r\n            </Menu>\r\n    );\r\n}\r\n \r\nexport default SiderMenu;\r\n","import {createContext} from 'react';\r\n\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext } from 'react';\r\nimport {  Menu } from 'antd';\r\nimport { UserContext } from './userContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    LogoutOutlined,\r\n    SettingOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst UserMenu = () => {\r\n\r\n   const { setLoggedUser } = useContext(UserContext);\r\n\r\n   const logout = async () => {\r\n    sessionStorage.removeItem('user');\r\n    window.location.reload(false);\r\n    //   setLoggedUser(null);\r\n    //   sessionStorage.removeItem('token');\r\n    //   sessionStorage.removeItem('user');\r\n   }\r\n\r\n   return (\r\n      <Menu className=\"mt-20\">\r\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\r\n            <LogoutOutlined />Logout\r\n         </Menu.Item>\r\n         <Menu.Item className=\"dropdown-item\">\r\n            <SettingOutlined /> Settings\r\n            <Link to={'/settings'} className=\"nav-link\" />\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst AuditTrailTable = ({ details }) => {\r\n\r\n   const columns = [\r\n      {\r\n         title: 'Name',\r\n         dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Activity',\r\n        dataIndex: 'activity',\r\n     },\r\n      {\r\n         title: 'Date',\r\n         dataIndex: 'date',\r\n      },\r\n                            \r\n   ];\r\n\r\n   return (\r\n      <Table columns={columns} dataSource={details}\r\n      />\r\n   );\r\n}\r\n\r\nexport default AuditTrailTable;","import React, { useState, useEffect } from 'react';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\r\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\r\n\r\n    const addAudit = async values => {\r\n    let finalAudit = {\r\n        user : values.user,\r\n        activity: values.activity,\r\n        date: values.date,\r\n    }\r\n    let response = auditTrailService.add(finalAudit)\r\n    };\r\n    \r\n    const getListOfAudit = async () => {\r\n      let response = await auditTrailService.findAllAudit();\r\n      let newArray = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format('MMMM Do YYYY'),\r\n          activity: user.activity,\r\n        }\r\n      })\r\n      setAuditTrailDetails({list: newArray})\r\n    };\r\n\r\n    const filterAudit = async (date) => {\r\n      let datas = [];\r\n      if (date) {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = await response.data.filter(\r\n          (user) =>\r\n            moment(user.date).format(\"MMMM Do YYYY\") ===\r\n            moment(date).format(\"MMMM Do YYYY\")\r\n        );\r\n      } else {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = response.data;\r\n      };\r\n\r\n      let newArray = await datas.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\r\n          activity: user.activity\r\n        };\r\n      });\r\n\r\n    setAuditTrailDetails({ list: newArray });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getListOfAudit();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    addAudit,\r\n    auditTrailDetails,\r\n    filterAudit\r\n  }\r\n};\r\n\r\nexport default AuditTrailAction;\r\n","import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport AuditTrailTable from './auditTrailTable'\r\nimport AuditTrailAction from './auditTrailAction'\r\nconst {Option} = Select;\r\n\r\nconst AuditTrailPage = () => {\r\n  let { auditTrailDetails, filterAudit } = AuditTrailAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n\t<Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">\r\n            Audit Trail\r\n          </Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n          <DatePicker\r\n            className=\"w-100P\"\r\n            placeholder={\"Input Date Here\"}\r\n            onChange={(date, dateString) => filterAudit(date)}\r\n          />\r\n        </Col>\r\n        {/* <Col lg={{ span: 24 }}>\r\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\r\n          </Button>\r\n        </Col> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <AuditTrailTable details={auditTrailDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default AuditTrailPage;\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport User from \"./components/user/user.js\";\r\nimport Student from \"./components/user/student.js\";\r\nimport Parent from \"./components/user/parent.js\";\r\nimport Teacher from \"./components/user/teacher.js\";\r\nimport UserSetting from \"./components/user/userSetting.js\";\r\nimport UserDetail from \"./components/userDetails/userDetails.js\";\r\nimport AdvisoryGrades from \"./components/grade/advisoryGrades\";\r\nimport Grade1 from \"./components/grade/grade1\";\r\nimport Grade2 from \"./components/grade/grade2\";\r\nimport Grade3 from \"./components/grade/grade3\";\r\nimport Grade4 from \"./components/grade/grade4\";\r\nimport Grade5 from \"./components/grade/grade5\";\r\nimport Grade6 from \"./components/grade/grade6\";\r\nimport Grade7 from \"./components/grade/grade7\";\r\nimport Grade8 from \"./components/grade/grade8\";\r\nimport Grade9 from \"./components/grade/grade9\";\r\nimport Grade10 from \"./components/grade/grade10\";\r\nimport Offspring from \"./components/offspring/offspring.js\";\r\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\r\nimport QuarterService from \"../src/components/quarter/quarterService\"\r\n// import Item from \"./components/item/item.js\";\r\nimport Login from \"./components/login/login.js\";\r\nimport SiderMenu from \"./components/siderMenu\"\r\nimport UserMenu from \"./components/userMenu\"\r\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\r\n\r\nimport { UserContext } from './components/userContext'\r\n\r\nconst { Option } = Select;\r\n\r\nconst renderStudents = isAdvisory => {\r\n  return (<Student />);\r\n};\r\n\r\nconst App = () => {\r\n  const { Content, Sider, Header } = Layout;\r\n  let [loggedUser, setLoggedUser] = useState(null);\r\n  let [collapsed, setCollapsed] = useState(false);\r\n  let [theme] = useState(\"dark\");\r\n\r\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.user) {\r\n      setLoggedUser(JSON.parse(sessionStorage.user));\r\n    }\r\n  }, []);\r\n\r\n  const onChangeFunction = async (value) => {\r\n    // console.log(value)\r\n    let response = await QuarterService.update({_id: sessionStorage._id, quarter : value})\r\n    sessionStorage.setItem(\"quarter\", value)\r\n    window.location.reload(false)\r\n    // console.log(sessionStorage._id)\r\n    // console.log(sessionStorage.quarter)\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      {\r\n        loggedUser ?\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <BrowserRouter>\r\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\r\n                  <Sider className=\"sider\" collapsed={collapsed}>\r\n                    <Header className=\"sideBarHeader text-white\">\r\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\r\n                    </Header>\r\n                    <Content className=\"mt-20\">\r\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\r\n                    </Content>\r\n                  </Sider>\r\n                : null}\r\n                <Layout>\r\n                  <Header className=\"bg-white\">\r\n                    <a href onClick={() => {\r\n                      setCollapsed(!collapsed)\r\n                    }}>\r\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\r\n                    </a>\r\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ?                     <span className=\"left\">\r\n                      Quarter: &nbsp;\r\n                    <Select onChange={\r\n                      (value)=> \r\n                      onChangeFunction(value)\r\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\r\n                              <Option value=\"1\">1</Option>\r\n                              <Option value=\"2\">2</Option>\r\n                              <Option value=\"3\">3</Option>\r\n                              <Option value=\"4\">4</Option>\r\n                           </Select>\r\n                    </span> : null}\r\n\r\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                      <span>\r\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\"/>\r\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\r\n                      </span>\r\n                    : null}\r\n\r\n\r\n                    <span className=\"right\">\r\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\r\n                      <Dropdown overlay={<UserMenu />}>\r\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\r\n                      </Dropdown>\r\n                    </span>\r\n                  </Header>\r\n                  <Layout>\r\n                    <Content className=\"pt-30 pb-30\">\r\n                      <Switch>\r\n                      {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/dashboard\"\r\n                       /> :   \r\n                       JSON.parse(sessionStorage.user).role === \"Parent\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/offspring\"\r\n                       /> :                        JSON.parse(sessionStorage.user).role === \"Teacher\" ?                      \r\n                       <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/grade1\"\r\n                       />: <Redirect\r\n                       exact\r\n                       from=\"/login\"\r\n                       to=\"/\"\r\n                       />}\r\n                            <Route path=\"/settings\" component={UserSetting} />\r\n                            <Route path=\"/admin\" component={User} />\r\n                            <Route path=\"/student\" component={ Student } />\r\n                            <Route path=\"/parent\" component={Parent} />\r\n                            <Route path=\"/teacher\" component={Teacher} />\r\n                            <Route path=\"/dashboard\" component={Dashboard}/>\r\n                            <Route path=\"/advisoryclass\" component={AdvisoryGrades} />\r\n                            <Route path=\"/grade1\" component={Grade1} />\r\n                            <Route path=\"/grade2\" component={Grade2} />\r\n                            <Route path=\"/grade3\" component={Grade3} />\r\n                            <Route path=\"/grade4\" component={Grade4} />\r\n                            <Route path=\"/grade5\" component={Grade5} />\r\n                            <Route path=\"/grade6\" component={Grade6} />\r\n                            <Route path=\"/grade7\" component={Grade7} />\r\n                            <Route path=\"/grade8\" component={Grade8} />\r\n                            <Route path=\"/grade9\" component={Grade9} />\r\n                            <Route path=\"/grade10\" component={Grade10} />\r\n                            <Route path=\"/offspring\" component={Offspring} />\r\n                            <Route path=\"/timekeeping\" component={Timekeeping}/>\r\n                            <Route path=\"/auditTrail\" component={AuditTrail}/>\r\n                            <Route path=\"/\" component={UserDetail} />\r\n                      </Switch>\r\n                    </Content>\r\n                  </Layout>\r\n                </Layout>\r\n              </BrowserRouter>\r\n            </Layout>\r\n            <Layout>\r\n            </Layout>\r\n          </BrowserRouter>\r\n                    :\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Redirect from=\"*\" to=\"/login\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n          }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}