[{"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/reportWebVitals.js":"1","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetails.js":"2","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade5.js":"3","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userForm.js":"4","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/loginForm.js":"5","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherForm.js":"6","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeForm.js":"7","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/App.js":"8","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/login.js":"9","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/parent.js":"10","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeeping.js":"11","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingService.js":"12","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/index.js":"13","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/quarter/quarterService.js":"14","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade9.js":"15","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryForm.js":"16","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeAction.js":"17","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/user.js":"18","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailAction.js":"19","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userAction.js":"20","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade7.js":"21","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryService.js":"22","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userMenu.js":"23","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingAction.js":"24","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/baseService.js":"25","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherAction.js":"26","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/teacher.js":"27","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userTable.js":"28","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetailsForm.js":"29","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingTable.js":"30","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/AttendanceAction.js":"31"},{"size":362,"mtime":1616172075137,"results":"32","hashOfConfig":"33"},{"size":2770,"mtime":1616172075137,"results":"34","hashOfConfig":"33"},{"size":4230,"mtime":1616172075137,"results":"35","hashOfConfig":"33"},{"size":7923,"mtime":1616172075137,"results":"36","hashOfConfig":"33"},{"size":2088,"mtime":1616172075137,"results":"37","hashOfConfig":"33"},{"size":4418,"mtime":1616172075137,"results":"38","hashOfConfig":"33"},{"size":15767,"mtime":1616172075137,"results":"39","hashOfConfig":"33"},{"size":7825,"mtime":1616172075137,"results":"40","hashOfConfig":"33"},{"size":4289,"mtime":1616172075137,"results":"41","hashOfConfig":"33"},{"size":2016,"mtime":1616172075137,"results":"42","hashOfConfig":"33"},{"size":3355,"mtime":1616172075137,"results":"43","hashOfConfig":"33"},{"size":596,"mtime":1616172075137,"results":"44","hashOfConfig":"33"},{"size":500,"mtime":1616172075137,"results":"45","hashOfConfig":"33"},{"size":556,"mtime":1616172075137,"results":"46","hashOfConfig":"33"},{"size":4226,"mtime":1616172075137,"results":"47","hashOfConfig":"33"},{"size":1670,"mtime":1616172075137,"results":"48","hashOfConfig":"33"},{"size":29138,"mtime":1616172075137,"results":"49","hashOfConfig":"33"},{"size":2039,"mtime":1616172075137,"results":"50","hashOfConfig":"33"},{"size":1127,"mtime":1616172075137,"results":"51","hashOfConfig":"33"},{"size":19345,"mtime":1616264952471,"results":"52","hashOfConfig":"33"},{"size":4315,"mtime":1616172075137,"results":"53","hashOfConfig":"33"},{"size":562,"mtime":1616172075137,"results":"54","hashOfConfig":"33"},{"size":710,"mtime":1616172075137,"results":"55","hashOfConfig":"33"},{"size":910,"mtime":1616172075137,"results":"56","hashOfConfig":"33"},{"size":1082,"mtime":1616172075137,"results":"57","hashOfConfig":"33"},{"size":6512,"mtime":1616172075137,"results":"58","hashOfConfig":"33"},{"size":1999,"mtime":1616172075137,"results":"59","hashOfConfig":"33"},{"size":1242,"mtime":1616172075137,"results":"60","hashOfConfig":"33"},{"size":9476,"mtime":1616172075137,"results":"61","hashOfConfig":"33"},{"size":588,"mtime":1616172075137,"results":"62","hashOfConfig":"33"},{"size":2245,"mtime":1616172075137,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d23pu8",{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"105"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/reportWebVitals.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetails.js",["141","142","143","144","145","146","147","148","149"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\n\nimport UserForm from './userDetailsForm'\nimport UserTable from './gradeTable'\nimport GradeAction from '../grade/gradeAction'\nimport AdvisorAction from '../grade/advisoryAction'\nconst { Option } = Select;\n\n\nconst EmployeePage = () => {\n\n  let {\n    selectedUserGrade,\n    showAllGradeVisible, \n    setShowAllGradeVisible,\n    selectedUser,\n    studentAdvisor,\n    filterCurrentGradeUser,\n    loading\n  } = GradeAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n      <Spin spinning={loading} delay={0}>\n        <Row>\n          <Col span={24}>\n            <Card className=\"ml-15\" title={\n              <Typography.Title>Student Details</Typography.Title>\n            }>\n              <Row>\n                <Col span={12}>\n                  <p>\n                    <b>Full Name: </b>{selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName: null}\n                  </p>\n                  <p>\n                    <b>Grade Level: </b>{JSON.parse(sessionStorage.user).gradeLevel}\n                  </p>\n                  <p>\n                    <b>Section: </b>{selectedUser ? selectedUser.section: null}\n                  </p>\n                </Col>\n                <Col span={12}>\n                  <p>\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName: null}\n                  </p>\n                  <p>\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber: null}\n                  </p>\n                  <b>Yr./Lvl: </b>\n                  <Select className=\"ml-15\" placeholder=\"Select Yr./Level\" onChange={(value)=> filterCurrentGradeUser(value) }>\n                    <Option value=\"1\">1</Option>\n                    <Option value=\"2\">2</Option>\n                    <Option value=\"3\">3</Option>\n                    <Option value=\"4\">4</Option>\n                    <Option value=\"5\">5</Option>\n                    <Option value=\"6\">6</Option>\n                    <Option value=\"7\">7</Option>\n                    <Option value=\"8\">8</Option>\n                    <Option value=\"9\">9</Option>\n                    <Option value=\"10\">10</Option>\n                  </Select>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col lg={{ span: \"24\" }}>\n            <UserTable details={selectedUserGrade ? selectedUserGrade: []}/>\n          </Col>\n        </Row>\n      </Spin>\n    </Card>   \n  );\n}\n\nexport default EmployeePage;\n\n",["150","151"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade5.js",["152","153","154"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userForm.js",["155","156","157","158","159","160","161"],"import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst UserEditForm = ({ add,update, selectedUser, selectedParent }) => {\n\n   let [loading, setLoading] = useState(false);\n   let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedUser}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            if(values._id) {\n               console.log(values)\n               update(values)\n            } else {\n               add(values)\n      \n               // window.location.reload(false);\n            }\n         }}\n         render={({ values, touched, setFieldValue }) => (\n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n               <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"idNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"School Year\" name=\"schoolYear\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"First Name\" name=\"firstName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Middle Name\" name=\"middleName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Last Name\" name=\"lastName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Gender\" name=\"gender\">\n                          <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\n                              <Option value=\"Male\">Male</Option>\n                              <Option value=\"Female\">Female</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\n                        <Select disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gradeLevel\">\n                              <Option value=\"1\">1</Option>\n                              <Option value=\"2\">2</Option>\n                              <Option value=\"3\">3</Option>\n                              <Option value=\"4\">4</Option>\n                              <Option value=\"5\">5</Option>\n                              <Option value=\"6\">6</Option>\n                              <Option value=\"7\">7</Option>\n                              <Option value=\"8\">8</Option>\n                              <Option value=\"9\">9</Option>\n                              <Option value=\"10\">10</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Section\" name=\"section\">\n                           <Input disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"section\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Birth Day\" name=\"birthDate\">\n                           <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Birth Place\" name=\"birthPlace\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Age\" name=\"age\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"Parent\" name=\"parentId\">\n                     <Select value={values.parent ? values.parent.firstName + \" \" + values.parent.lastName : \"\"} name=\"parentId\" disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"}>\n                        {selectedParent.map(parent => {\n                                 return <Option value={parent._id}>{parent.firstName + \" \" + parent.lastName}</Option>\n                        })}\n                     </Select>\n                     </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Contact Number\" name=\"contactNumber\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Email\" name=\"email\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Role\" name=\"role\">\n                           <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"role\">\n                              <Option value=\"Admin\">Admin</Option>\n                              <Option value=\"Student\">Student</Option>\n                              <Option value=\"Parent\">Parent</Option>\n                              <Option value=\"Teacher\">Teacher</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Password\" name=\"password\">\n                           <Input.Password disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                 {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"btn-save\" htmlType=\"submit\">\n                   <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button> : null}\n                 \n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default UserEditForm;",["162","163"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/loginForm.js",["164","165"],"import React from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, Spin } from 'antd';\n\nconst LoginForm = ({login}) => {\n   return (\n      <Formik\n         initialValues={{\n            username: \"\",\n            password: \"\"\n         }}\n         enableReinitialize={true}\n         onSubmit={async (values, actions) => {\n             login(values)\n            // await login(values)\n            // actions.setSubmitting(false);\n         }}\n         render={\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\n               <Spin spinning={isSubmitting}>\n                  <Form className=\"mt-10P\">\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              USERNAME:\n                           </b>\n                           <Form.Item name=\"username\">\n                              <Input name=\"username\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              PASSWORD:\n                           </b>\n                           <Form.Item name=\"password\">\n                              <Input.Password name=\"password\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\n                              Login\n                        </Button>\n                        </Col>\n                     </Row>\n                  </Form>\n               </Spin>\n            )}\n      />\n   );\n}\n\nexport default LoginForm;",["166","167"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherForm.js",["168","169","170","171","172"],"import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={{}}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            add(values, gradeLevel) \n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"English\" name=\"english\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\n                  {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                  \n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Filipino\" name=\"filipino\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"Science\" name=\"science\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Math\" name=\"math\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Values\" name=\"values\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default TeacherForm;","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeForm.js",["173","174","175","176"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/App.js",["177","178","179","180"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport User from \"./components/user/user.js\";\nimport Student from \"./components/user/student.js\";\nimport Parent from \"./components/user/parent.js\";\nimport Teacher from \"./components/user/teacher.js\";\nimport UserDetail from \"./components/userDetails/userDetails.js\";\nimport Grade1 from \"./components/grade/grade1\";\nimport Grade2 from \"./components/grade/grade2\";\nimport Grade3 from \"./components/grade/grade3\";\nimport Grade4 from \"./components/grade/grade4\";\nimport Grade5 from \"./components/grade/grade5\";\nimport Grade6 from \"./components/grade/grade6\";\nimport Grade7 from \"./components/grade/grade7\";\nimport Grade8 from \"./components/grade/grade8\";\nimport Grade9 from \"./components/grade/grade9\";\nimport Grade10 from \"./components/grade/grade10\";\nimport Offspring from \"./components/offspring/offspring.js\";\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\nimport QuarterService from \"../src/components/quarter/quarterService\"\n// import Item from \"./components/item/item.js\";\nimport Login from \"./components/login/login.js\";\nimport SiderMenu from \"./components/siderMenu\"\nimport UserMenu from \"./components/userMenu\"\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\n\nimport { UserContext } from './components/userContext'\n\nconst { Option } = Select;\n\nconst App = () => {\n  const { Content, Sider, Header } = Layout;\n  let [loggedUser, setLoggedUser] = useState(null);\n  let [collapsed, setCollapsed] = useState(false);\n  let [theme] = useState(\"dark\");\n\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\n\n  useEffect(() => {\n    if (sessionStorage.user) {\n      setLoggedUser(JSON.parse(sessionStorage.user));\n    }\n  }, []);\n\n  const onChangeFunction = async (value) => {\n    // console.log(value)\n    let response = await QuarterService.update({_id: sessionStorage._id, quarter : value})\n    sessionStorage.setItem(\"quarter\", value)\n    window.location.reload(false)\n    // console.log(sessionStorage._id)\n    // console.log(sessionStorage.quarter)\n  }\n\n  return (\n    <UserContext.Provider value={providerValue}>\n      {\n        loggedUser ?\n          <BrowserRouter>\n            <Layout>\n              <BrowserRouter>\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\n                  <Sider className=\"sider\" collapsed={collapsed}>\n                    <Header className=\"sideBarHeader text-white\">\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\n                    </Header>\n                    <Content className=\"mt-20\">\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\n                    </Content>\n                  </Sider>\n                : null}\n                <Layout>\n                  <Header className=\"bg-white\">\n                    <a href onClick={() => {\n                      setCollapsed(!collapsed)\n                    }}>\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\n                    </a>\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ?                     <span className=\"left\">\n                      Quarter: &nbsp;\n                    <Select onChange={\n                      (value)=> \n                      onChangeFunction(value)\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\n                              <Option value=\"1\">1</Option>\n                              <Option value=\"2\">2</Option>\n                              <Option value=\"3\">3</Option>\n                              <Option value=\"4\">4</Option>\n                           </Select>\n                    </span> : null}\n\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\n                      <span>\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\"/>\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\n                      </span>\n                    : null}\n\n\n                    <span className=\"right\">\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\n                      <Dropdown overlay={<UserMenu />}>\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\n                      </Dropdown>\n                    </span>\n                  </Header>\n                  <Layout>\n                    <Content className=\"pt-30 pb-30\">\n                      <Switch>\n                      {JSON.parse(sessionStorage.user).role === \"Admin\" ?  \n                       <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/dashboard\"\n                       /> :   \n                       JSON.parse(sessionStorage.user).role === \"Parent\" ?                      \n                       <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/offspring\"\n                       /> :                        JSON.parse(sessionStorage.user).role === \"Teacher\" ?                      \n                       <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/grade1\"\n                       />: <Redirect\n                       exact\n                       from=\"/login\"\n                       to=\"/\"\n                       />}\n \n                            <Route path=\"/admin\" component={User} />\n                            <Route path=\"/student\" component={Student} />\n                            <Route path=\"/parent\" component={Parent} />\n                            <Route path=\"/teacher\" component={Teacher} />\n                            <Route path=\"/dashboard\" component={Dashboard}/>\n                            <Route path=\"/grade1\" component={Grade1} />\n                            <Route path=\"/grade2\" component={Grade2} />\n                            <Route path=\"/grade3\" component={Grade3} />\n                            <Route path=\"/grade4\" component={Grade4} />\n                            <Route path=\"/grade5\" component={Grade5} />\n                            <Route path=\"/grade6\" component={Grade6} />\n                            <Route path=\"/grade7\" component={Grade7} />\n                            <Route path=\"/grade8\" component={Grade8} />\n                            <Route path=\"/grade9\" component={Grade9} />\n                            <Route path=\"/grade10\" component={Grade10} />\n                            <Route path=\"/offspring\" component={Offspring} />\n                            <Route path=\"/timekeeping\" component={Timekeeping}/>\n                            <Route path=\"/auditTrail\" component={AuditTrail}/>\n                            <Route path=\"/\" component={UserDetail} />\n                      </Switch>\n                    </Content>\n                  </Layout>\n                </Layout>\n              </BrowserRouter>\n            </Layout>\n            <Layout>\n            </Layout>\n          </BrowserRouter>\n                    :\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Redirect from=\"*\" to=\"/login\" />\n            </Switch>\n          </BrowserRouter>\n          }\n    </UserContext.Provider>\n  );\n\n}\n\nexport default App;","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/login.js",["181","182","183","184","185","186","187"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/parent.js",["188","189","190"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    parentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterParent\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\n        <UserTable details={parentList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n",["191","192"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeeping.js",["193","194","195","196","197","198"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/index.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/quarter/quarterService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade9.js",["199","200","201"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Spin } from 'antd';\nimport { PlusCircleOutlined, RiseOutlined } from '@ant-design/icons';\nimport GradeForm from './gradeForm'\nimport TeacherForm from './teacherForm'\n\nimport GradeAction from './gradeAction'\nimport AdvisoryForm from './advisoryForm'\nimport AdvisorAction from './advisoryAction';\nimport StudentGradeTable from '../userDetails/gradeTable'\nimport GradeTable from './gradeTable'\nimport TeacherAction from './teacherAction';\n\nconst GradePage = () => {\n\n\n  let {\n    addGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade9Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading\n  } = GradeAction({});\n\n  let {\n    showTeacherVisible,\n    hideTeacher,\n    showTeacher,\n    add,\n    selectedTeacherAssignedGrade9,\n    selectedTeacherAssgined\n  } = TeacherAction({});\n\n  let {\n    showAdvisorVisible,\n    hideAdvisor,\n    showAdvisor,\n    addAdvisor,\n    selectedAdvisoryAssignedGrade9,\n    selectedAdvisoryAssgined\n  } = AdvisorAction({});\n\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Spin spinning={loading} delay={0}>\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 13 }}>\n        <Typography.Title level={3} className=\"ml-15\">Grade9 Management</Typography.Title>\n      </Col>\n      <Col lg={{ span: 10 }}>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 btn-add\" type=\"save \" onClick={() => showTeacher(\"9\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add teacher\n             </Button>: null\n             }\n                                               {JSON.parse(sessionStorage.user).role === \"Admin\" ?       <Button className=\"right ml-10 bg-gray text-white\" type=\"save \" onClick={() => showAdvisor(\"9\")}>\n          <PlusCircleOutlined type=\"minus-circle\" /> Add Advisor\n             </Button> : null}\n             {JSON.parse(sessionStorage.user).role === \"Admin\" ?   \n        <Button className=\"right btn-save\" onClick={() => upgradeStudent()}>\n          <RiseOutlined type=\"minus-circle\" /> Upgrade\n             </Button>\n        : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <GradeTable setSelectedListOfStudent={setSelectedListOfStudent} details={grade9Details.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Student Info\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm upgradeStudent={upgradeStudent} add={addGrade} update={editGrade} selectedTeacher={selectedTeacher} gradeLevel={\"9\"} selectedTeacherAssignedGrade={selectedTeacherAssignedGrade9} selectedGrade={selectedGrade}/>\n             <StudentGradeTable details={selectedGradeUser ? selectedGradeUser: []}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Teachers for grade 9\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showTeacherVisible}\n              onClose={()=> hideTeacher()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <TeacherForm selectedTeacherAssgined={selectedTeacherAssgined} add={add} selectedTeacher={selectedTeacher} gradeLevel={\"9\"}/>\n          </Drawer>\n\n          <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  Advisor for grade 9\n                  </Typography.Title>\n              }\n              width={700}\n              visible={showAdvisorVisible}\n              onClose={()=> hideAdvisor()}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <AdvisoryForm selectedTeacherAssgined={selectedAdvisoryAssignedGrade9} selectedTeacher={selectedTeacher} add={addAdvisor} gradeLevel={\"9\"}/>\n          </Drawer>\n          </Spin>\n  </Card>\n\t\n      \n  );\n}\n\nexport default GradePage;\n\n",["202","203"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryForm.js",["204","205","206","207","208"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeAction.js",["209","210","211","212","213","214","215","216","217","218","219"],"import React, { useState, useEffect } from 'react';\nimport gradesService from './gradesService';\nimport userService from '../user/userService';\nimport advisoryService from '../grade/advisoryService';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst Grade1Action = (initial = { searchRequest: {} }) => {\n  let [studentAdvisor, setStudentAdvisor] = useState({});\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\n  let [gradeDetails, setGradeDetails] = useState( {list : []});\n  let [grade1Details, setGrade1Details] = useState( {list : []});\n  let [grade2Details, setGrade2Details] = useState( {list : []});\n  let [grade3Details, setGrade3Details] = useState( {list : []});\n  let [grade4Details, setGrade4Details] = useState( {list : []});\n  let [grade5Details, setGrade5Details] = useState( {list : []});\n  let [grade6Details, setGrade6Details] = useState( {list : []});\n  let [grade7Details, setGrade7Details] = useState( {list : []});\n  let [grade8Details, setGrade8Details] = useState( {list : []});\n  let [grade9Details, setGrade9Details] = useState( {list : []});\n  let [grade10Details, setGrade10Details] = useState( {list : []});\n\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\n  let [selectedGrade, setSelectedGrade] = useState({});\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\n\n  const upgradeStudent = async values => {\n    let auditTrailObj = {\n    user: JSON.parse(sessionStorage.user),\n    activity : \"Upgrade Student\",\n    date:new Date()}\n    auditTrailService.add(auditTrailObj)\n    let ctr = 0;\n    await selectedListOfStudent.map(async student => {\n    setLoading(true)\n    let result = await gradesService.findyById(student.id);\n\n    let userCurrentGrade = (parseInt(result.data.gradeLevel))\n\n\n    if(userCurrentGrade < 10) {\n      let currentUser = result.data\n      let allStudent = await userService.findAllUser();\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n      let currentStudent = result1[0]\n      currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\n      let response = await userService.update(currentStudent)\n\n      currentUser.status = false;\n      let response1 = await gradesService.update(currentUser)\n\n      let gradeObj = {\n        status: true,\n        student: currentUser.student,\n        gradeLevel: (userCurrentGrade + 1).toString(),\n        section: currentUser.student.section,\n        schoolYear : currentStudent.schoolYear,\n        subjects: [{\n            subjectName: \"English\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Filipino\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Science\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Math\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"MAPEH\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Values\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        }]\n    }\n\n    let response2 = gradesService.add(gradeObj)\n  \n\n    } else {\n      let currentUser = result.data\n      let allStudent = await userService.findAllUser();\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n      let currentStudent = result1[0]\n      currentStudent.gradeLevel = \"Graduate\"\n      let response = await userService.update(currentStudent)\n\n      currentUser.status = false;\n      let response1 = await gradesService.update(currentUser)\n    }\n    ctr= ctr+1\n    if(ctr === selectedListOfStudent.length) {\n      setLoading(false)\n      window.location.reload(false)\n    }\n    })\n\n  };\n\n  const editGrade = async values => {\n    let result = await gradesService.findyById(values._id);\n    let grade = result.data\n\n    if(values.English) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.English.firstQuarter) {\n        firstQuarter = values.English.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\n      }\n\n      if(values.English.secondQuarter) {\n        secondQuarter = values.English.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\n      }\n\n      if(values.English.thirdQuarter) {\n        thirdQuarter = values.English.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\n      }\n\n      if(values.English.fourthQuarter) {\n        fourthQuarter = values.English.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\n      }      \n\n      let newEnglishGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[0].subjectGrade = newEnglishGrade;\n    }    \n\n    if(values.Filipino) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Filipino.firstQuarter) {\n        firstQuarter = values.Filipino.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\n      }\n\n      if(values.Filipino.secondQuarter) {\n        secondQuarter = values.Filipino.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\n      }\n\n      if(values.Filipino.thirdQuarter) {\n        thirdQuarter = values.Filipino.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\n      }\n\n      if(values.Filipino.fourthQuarter) {\n        fourthQuarter = values.Filipino.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\n      }      \n\n      let newFilipinoGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[1].subjectGrade = newFilipinoGrade;\n    }\n\n    if(values.Science) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Science.firstQuarter) {\n        firstQuarter = values.Science.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\n      }\n\n      if(values.Science.secondQuarter) {\n        secondQuarter = values.Science.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\n      }\n\n      if(values.Science.thirdQuarter) {\n        thirdQuarter = values.Science.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\n      }\n\n      if(values.Science.fourthQuarter) {\n        fourthQuarter = values.Science.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\n      }      \n\n      let newScienceGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[2].subjectGrade = newScienceGrade;\n    }\n\n    if(values.Math) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Math.firstQuarter) {\n        firstQuarter = values.Math.firstQuarter\n      } else {\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\n      }\n\n      if(values.Math.secondQuarter) {\n        secondQuarter = values.Math.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\n      }\n\n      if(values.Math.thirdQuarter) {\n        thirdQuarter = values.Math.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\n      }\n\n      if(values.Math.fourthQuarter) {\n        fourthQuarter = values.Math.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\n      }      \n\n      let newMathGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[3].subjectGrade = newMathGrade;\n    }\n\n    if(values.MAPEH) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.MAPEH.firstQuarter) {\n        firstQuarter = values.MAPEH.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\n      }\n\n      if(values.MAPEH.secondQuarter) {\n        secondQuarter = values.MAPEH.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\n      }\n\n      if(values.MAPEH.thirdQuarter) {\n        thirdQuarter = values.MAPEH.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\n      }\n\n      if(values.MAPEH.fourthQuarter) {\n        fourthQuarter = values.MAPEH.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\n      }      \n\n      let newMAPEHGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[4].subjectGrade = newMAPEHGrade;\n    }\n\n    if(values.Values) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Values.firstQuarter) {\n        firstQuarter = values.Values.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\n      }\n\n      if(values.Values.secondQuarter) {\n        secondQuarter = values.Values.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\n      }\n\n      if(values.Values.thirdQuarter) {\n        thirdQuarter = values.Values.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\n      }\n\n      if(values.Values.fourthQuarter) {\n        fourthQuarter = values.Values.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\n      }      \n\n      let newValuesGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[5].subjectGrade = newValuesGrade;\n    }\n\n\n\n    let updateResult = await gradesService.update(grade);\n    window.location.reload();\n  };\n\n  const showGrade = () => {\n    setSelectedGrade({\n        schoolYear: \"\",\n        subjects: {},\n        grade: \"\",\n        student: {},\n        gradeLevel: \"\",\n        section: \"\",\n      })\n    setShowGradeVisible(true)\n  };\n\n  const loadGrade = (gradeObj, idNumber, level = '') => {\n    getCurrentGradeUser(idNumber, level)\n    setSelectedGrade({...gradeObj});\n    setShowGradeVisible(true);\n  };\n\n  const loadSelectedGrade = async (gradeId) => {\n    let response = await gradesService.findyById(gradeId);\n    setSelectedGrade({...response.data});\n    setShowGradeVisible(true);\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const filterCurrentGradeUser = async (gradeLevel) => {\n    setLoading(true)\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      })\n      \n      let response = await advisoryService.findAllAdvisory()\n      let result1=[];\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\n    \n      setSelectedUser(result[0].student)\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([])\n    }\n    setLoading(false)\n  }\n\n  const currentGradeUser = async () => {\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\n    } else {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\n    }\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student)\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      })\n      \n      let response = await advisoryService.findAllAdvisory()\n      let result1=[];\n      if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\n      } else {\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\n      }\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([])\n    }\n\n  }\n\n  const getCurrentGradeUser = async (idNumber, level = '') => {\n    let response = await gradesService.findAllGrades(level);\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student);\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      });\n      setSelectedGradeUser(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedGradeUser([])\n    }\n\n    \n   \n\n  }\n\n  const loadGrades = async () => {\n    let finalOffspring = [];\n    let response = await gradesService.findAllGrades();\n    let parent = await userService.findAllUser();\n    let result = parent.data.filter(user => user.parent);\n    let newArray = [];\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\n    await response.data.map((user) => {\n      offspring.map((off) => {\n        if(user.student.idNumber === off.idNumber){\n          finalOffspring.push(user)\n        }\n      });\n    });\n    newArray = finalOffspring.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.student.firstName,\n          lastName: user.student.lastName,\n          middleName: user.student.middleName,\n          idNumber: user.student.idNumber,\n          contactNumber: user.student.contactNumber,\n          email: user.student.email,\n          section: user.section,\n          gradeLevel: user.gradeLevel,\n          action: \n            <Button onClick={() => loadGrade(user,user.student.idNumber)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      setGradeDetails({\n        list: newArray\n      })\n  }\n\nconst loadGrades1 = async () => {\n    let response = await gradesService.findAllGrades('1');\n    let result = response.data.filter(user => user.gradeLevel === \"1\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '1')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade1Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades2 = async () => {\n    let response = await gradesService.findAllGrades('2');\n    let result = response.data.filter(user => user.gradeLevel === \"2\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '2')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade2Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades3 = async () => {\n    let response = await gradesService.findAllGrades('3');\n    let result = response.data.filter(user => user.gradeLevel === \"3\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '3')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade3Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades4 = async () => {\n    let response = await gradesService.findAllGrades('4');\n    let result = response.data.filter(user => user.gradeLevel === \"4\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '4')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade4Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades5 = async () => {\n    let response = await gradesService.findAllGrades('5');\n    let result = response.data.filter(user => user.gradeLevel === \"5\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '5')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade5Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades6 = async () => {\n    let response = await gradesService.findAllGrades('6');\n    let result = response.data.filter(user => user.gradeLevel === \"6\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '6')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade6Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades7 = async () => {\n    let response = await gradesService.findAllGrades('7');\n    let result = response.data.filter(user => user.gradeLevel === \"7\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '7')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade7Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades8 = async () => {\n    let response = await gradesService.findAllGrades('8');\n    let result = response.data.filter(user => user.gradeLevel === \"8\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '8')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade8Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades9 = async () => {\n    let response = await gradesService.findAllGrades('9');\n    let result = response.data.filter(user => user.gradeLevel === \"9\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '9')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade9Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades10 = async () => {\n    let response = await gradesService.findAllGrades('10');\n    let result = response.data.filter(user => user.gradeLevel === \"10\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '10')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade10Details({\n            list: newArray\n          })\n  }\n\n  useEffect(() => {\n    loadGrades1();\n    loadGrades2();\n    loadGrades3();\n    loadGrades4();\n    loadGrades5();\n    loadGrades6();\n    loadGrades7();\n    loadGrades8();\n    loadGrades9();\n    loadGrades10();\n    loadGrades();\n    currentGradeUser();\n    getListOfTeacher();\n  }, []);\n\n\n  return {\n    loadGrades1,\n    grade2Details,\n    grade3Details,\n    grade4Details,\n    grade5Details,\n    grade6Details,\n    grade7Details,\n    grade8Details,\n    grade9Details,\n    grade10Details,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade1Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    gradeDetails,\n    selectedUserGrade,\n    showAllGradeVisible, \n    setShowAllGradeVisible,\n    selectedUser,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    studentAdvisor,\n    filterCurrentGradeUser\n  }\n};\n\nexport default Grade1Action;\n","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/user.js",["220","221","222","223"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailAction.js",["224","225","226"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userAction.js",["227","228","229","230","231","232","233","234","235","236","237","238"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade7.js",["239","240","241"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userMenu.js",["242"],"import React, { useContext } from 'react';\nimport {  Menu } from 'antd';\nimport { UserContext } from './userContext';\n\nimport {\n    LogoutOutlined\n  } from '@ant-design/icons';\n\n\nconst UserMenu = () => {\n\n   const { setLoggedUser } = useContext(UserContext);\n\n   const logout = async () => {\n    sessionStorage.removeItem('user');\n    window.location.reload(false);\n    //   setLoggedUser(null);\n    //   sessionStorage.removeItem('token');\n    //   sessionStorage.removeItem('user');\n   }\n\n   return (\n      <Menu className=\"mt-20\">\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\n            <LogoutOutlined />Logout\n         </Menu.Item>\n      </Menu>\n   );\n}\n\nexport default UserMenu;","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingAction.js",["243","244"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\n    const locale = 'en';\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\n\n  useEffect(() => {\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\n        // This will trigger a rerender every component that uses the useDate hook.\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\n      }, 1000);\n      return () => {\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n      }\n  }, []);\n\n\n  return {\n    today\n  }\n};\n\nexport default TimeKeepingAction;","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/baseService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherAction.js",["245","246"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/teacher.js",["247","248","249"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userTable.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetailsForm.js",["250","251","252","253","254","255","256"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingTable.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/AttendanceAction.js",["257","258","259","260","261"],{"ruleId":"262","severity":1,"message":"263","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":16},{"ruleId":"262","severity":1,"message":"266","line":2,"column":24,"nodeType":"264","messageId":"265","endLine":2,"endColumn":30},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"268","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":28},{"ruleId":"262","severity":1,"message":"269","line":3,"column":30,"nodeType":"264","messageId":"265","endLine":3,"endColumn":49},{"ruleId":"262","severity":1,"message":"270","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":16},{"ruleId":"262","severity":1,"message":"271","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":21},{"ruleId":"262","severity":1,"message":"272","line":17,"column":5,"nodeType":"264","messageId":"265","endLine":17,"endColumn":24},{"ruleId":"262","severity":1,"message":"273","line":18,"column":5,"nodeType":"264","messageId":"265","endLine":18,"endColumn":27},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"278","line":21,"column":5,"nodeType":"264","messageId":"265","endLine":21,"endColumn":14},{"ruleId":"262","severity":1,"message":"279","line":47,"column":5,"nodeType":"264","messageId":"265","endLine":47,"endColumn":29},{"ruleId":"262","severity":1,"message":"280","line":4,"column":28,"nodeType":"264","messageId":"265","endLine":4,"endColumn":35},{"ruleId":"262","severity":1,"message":"281","line":11,"column":18,"nodeType":"264","messageId":"265","endLine":11,"endColumn":28},{"ruleId":"262","severity":1,"message":"282","line":12,"column":9,"nodeType":"264","messageId":"265","endLine":12,"endColumn":26},{"ruleId":"262","severity":1,"message":"283","line":12,"column":28,"nodeType":"264","messageId":"265","endLine":12,"endColumn":48},{"ruleId":"284","severity":1,"message":"285","line":73,"column":55,"nodeType":"286","messageId":"287","endLine":73,"endColumn":57},{"ruleId":"284","severity":1,"message":"285","line":89,"column":57,"nodeType":"286","messageId":"287","endLine":89,"endColumn":59},{"ruleId":"284","severity":1,"message":"285","line":113,"column":152,"nodeType":"286","messageId":"287","endLine":113,"endColumn":154},{"ruleId":"274","replacedBy":"288"},{"ruleId":"276","replacedBy":"289"},{"ruleId":"262","severity":1,"message":"290","line":2,"column":23,"nodeType":"264","messageId":"265","endLine":2,"endColumn":33},{"ruleId":"262","severity":1,"message":"291","line":2,"column":35,"nodeType":"264","messageId":"265","endLine":2,"endColumn":41},{"ruleId":"274","replacedBy":"292"},{"ruleId":"276","replacedBy":"293"},{"ruleId":"262","severity":1,"message":"294","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":21},{"ruleId":"262","severity":1,"message":"290","line":2,"column":23,"nodeType":"264","messageId":"265","endLine":2,"endColumn":33},{"ruleId":"262","severity":1,"message":"280","line":4,"column":28,"nodeType":"264","messageId":"265","endLine":4,"endColumn":35},{"ruleId":"262","severity":1,"message":"295","line":4,"column":43,"nodeType":"264","messageId":"265","endLine":4,"endColumn":47},{"ruleId":"262","severity":1,"message":"281","line":11,"column":18,"nodeType":"264","messageId":"265","endLine":11,"endColumn":28},{"ruleId":"262","severity":1,"message":"290","line":2,"column":23,"nodeType":"264","messageId":"265","endLine":2,"endColumn":33},{"ruleId":"262","severity":1,"message":"280","line":4,"column":28,"nodeType":"264","messageId":"265","endLine":4,"endColumn":35},{"ruleId":"262","severity":1,"message":"296","line":6,"column":9,"nodeType":"264","messageId":"265","endLine":6,"endColumn":15},{"ruleId":"262","severity":1,"message":"281","line":10,"column":18,"nodeType":"264","messageId":"265","endLine":10,"endColumn":28},{"ruleId":"262","severity":1,"message":"267","line":2,"column":26,"nodeType":"264","messageId":"265","endLine":2,"endColumn":30},{"ruleId":"262","severity":1,"message":"297","line":3,"column":50,"nodeType":"264","messageId":"265","endLine":3,"endColumn":54},{"ruleId":"262","severity":1,"message":"298","line":52,"column":9,"nodeType":"264","messageId":"265","endLine":52,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":98,"column":25,"nodeType":"301","endLine":98,"endColumn":76},{"ruleId":"262","severity":1,"message":"302","line":1,"column":27,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"280","line":2,"column":40,"nodeType":"264","messageId":"265","endLine":2,"endColumn":47},{"ruleId":"262","severity":1,"message":"303","line":8,"column":7,"nodeType":"264","messageId":"265","endLine":8,"endColumn":14},{"ruleId":"262","severity":1,"message":"304","line":19,"column":9,"nodeType":"264","messageId":"265","endLine":19,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":61,"column":17,"nodeType":"301","endLine":61,"endColumn":69},{"ruleId":"299","severity":1,"message":"300","line":76,"column":21,"nodeType":"301","endLine":76,"endColumn":66},{"ruleId":"299","severity":1,"message":"300","line":93,"column":21,"nodeType":"301","endLine":93,"endColumn":70},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"269","line":3,"column":30,"nodeType":"264","messageId":"265","endLine":3,"endColumn":49},{"ruleId":"262","severity":1,"message":"305","line":27,"column":5,"nodeType":"264","messageId":"265","endLine":27,"endColumn":10},{"ruleId":"274","replacedBy":"306"},{"ruleId":"276","replacedBy":"307"},{"ruleId":"262","severity":1,"message":"263","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":16},{"ruleId":"262","severity":1,"message":"266","line":2,"column":24,"nodeType":"264","messageId":"265","endLine":2,"endColumn":30},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"268","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":28},{"ruleId":"262","severity":1,"message":"308","line":3,"column":30,"nodeType":"264","messageId":"265","endLine":3,"endColumn":44},{"ruleId":"262","severity":1,"message":"296","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":14},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"278","line":21,"column":5,"nodeType":"264","messageId":"265","endLine":21,"endColumn":14},{"ruleId":"262","severity":1,"message":"279","line":47,"column":5,"nodeType":"264","messageId":"265","endLine":47,"endColumn":29},{"ruleId":"274","replacedBy":"309"},{"ruleId":"276","replacedBy":"310"},{"ruleId":"262","severity":1,"message":"294","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":21},{"ruleId":"262","severity":1,"message":"290","line":2,"column":23,"nodeType":"264","messageId":"265","endLine":2,"endColumn":33},{"ruleId":"262","severity":1,"message":"280","line":4,"column":28,"nodeType":"264","messageId":"265","endLine":4,"endColumn":35},{"ruleId":"262","severity":1,"message":"295","line":4,"column":43,"nodeType":"264","messageId":"265","endLine":4,"endColumn":47},{"ruleId":"262","severity":1,"message":"281","line":11,"column":18,"nodeType":"264","messageId":"265","endLine":11,"endColumn":28},{"ruleId":"262","severity":1,"message":"311","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":14},{"ruleId":"262","severity":1,"message":"298","line":53,"column":11,"nodeType":"264","messageId":"265","endLine":53,"endColumn":19},{"ruleId":"262","severity":1,"message":"312","line":56,"column":11,"nodeType":"264","messageId":"265","endLine":56,"endColumn":20},{"ruleId":"262","severity":1,"message":"313","line":125,"column":9,"nodeType":"264","messageId":"265","endLine":125,"endColumn":18},{"ruleId":"262","severity":1,"message":"298","line":134,"column":11,"nodeType":"264","messageId":"265","endLine":134,"endColumn":19},{"ruleId":"262","severity":1,"message":"312","line":137,"column":11,"nodeType":"264","messageId":"265","endLine":137,"endColumn":20},{"ruleId":"262","severity":1,"message":"314","line":388,"column":9,"nodeType":"264","messageId":"265","endLine":388,"endColumn":21},{"ruleId":"262","severity":1,"message":"315","line":410,"column":9,"nodeType":"264","messageId":"265","endLine":410,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":553,"column":36,"nodeType":"318","messageId":"319","endLine":553,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":554,"column":27,"nodeType":"318","messageId":"319","endLine":554,"endColumn":29},{"ruleId":"320","severity":1,"message":"321","line":836,"column":6,"nodeType":"322","endLine":836,"endColumn":8,"suggestions":"323"},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"269","line":3,"column":30,"nodeType":"264","messageId":"265","endLine":3,"endColumn":49},{"ruleId":"262","severity":1,"message":"324","line":19,"column":5,"nodeType":"264","messageId":"265","endLine":19,"endColumn":16},{"ruleId":"262","severity":1,"message":"305","line":28,"column":5,"nodeType":"264","messageId":"265","endLine":28,"endColumn":10},{"ruleId":"262","severity":1,"message":"325","line":1,"column":8,"nodeType":"264","messageId":"265","endLine":1,"endColumn":13},{"ruleId":"262","severity":1,"message":"266","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":16},{"ruleId":"262","severity":1,"message":"298","line":14,"column":9,"nodeType":"264","messageId":"265","endLine":14,"endColumn":17},{"ruleId":"262","severity":1,"message":"311","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":14},{"ruleId":"262","severity":1,"message":"326","line":21,"column":9,"nodeType":"264","messageId":"265","endLine":21,"endColumn":22},{"ruleId":"262","severity":1,"message":"298","line":30,"column":9,"nodeType":"264","messageId":"265","endLine":30,"endColumn":17},{"ruleId":"262","severity":1,"message":"298","line":99,"column":11,"nodeType":"264","messageId":"265","endLine":99,"endColumn":19},{"ruleId":"262","severity":1,"message":"326","line":117,"column":9,"nodeType":"264","messageId":"265","endLine":117,"endColumn":22},{"ruleId":"262","severity":1,"message":"298","line":125,"column":9,"nodeType":"264","messageId":"265","endLine":125,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":183,"column":33,"nodeType":"318","messageId":"319","endLine":183,"endColumn":35},{"ruleId":"262","severity":1,"message":"327","line":227,"column":11,"nodeType":"264","messageId":"265","endLine":227,"endColumn":30},{"ruleId":"262","severity":1,"message":"327","line":294,"column":11,"nodeType":"264","messageId":"265","endLine":294,"endColumn":30},{"ruleId":"262","severity":1,"message":"327","line":361,"column":11,"nodeType":"264","messageId":"265","endLine":361,"endColumn":30},{"ruleId":"262","severity":1,"message":"327","line":428,"column":11,"nodeType":"264","messageId":"265","endLine":428,"endColumn":30},{"ruleId":"320","severity":1,"message":"328","line":641,"column":6,"nodeType":"322","endLine":641,"endColumn":8,"suggestions":"329"},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"278","line":21,"column":5,"nodeType":"264","messageId":"265","endLine":21,"endColumn":14},{"ruleId":"262","severity":1,"message":"279","line":47,"column":5,"nodeType":"264","messageId":"265","endLine":47,"endColumn":29},{"ruleId":"262","severity":1,"message":"330","line":12,"column":12,"nodeType":"264","messageId":"265","endLine":12,"endColumn":25},{"ruleId":"262","severity":1,"message":"325","line":1,"column":8,"nodeType":"264","messageId":"265","endLine":1,"endColumn":13},{"ruleId":"262","severity":1,"message":"331","line":5,"column":11,"nodeType":"264","messageId":"265","endLine":5,"endColumn":17},{"ruleId":"262","severity":1,"message":"325","line":1,"column":8,"nodeType":"264","messageId":"265","endLine":1,"endColumn":13},{"ruleId":"262","severity":1,"message":"298","line":54,"column":9,"nodeType":"264","messageId":"265","endLine":54,"endColumn":17},{"ruleId":"262","severity":1,"message":"267","line":2,"column":44,"nodeType":"264","messageId":"265","endLine":2,"endColumn":48},{"ruleId":"262","severity":1,"message":"269","line":3,"column":30,"nodeType":"264","messageId":"265","endLine":3,"endColumn":49},{"ruleId":"262","severity":1,"message":"305","line":27,"column":5,"nodeType":"264","messageId":"265","endLine":27,"endColumn":10},{"ruleId":"262","severity":1,"message":"290","line":2,"column":23,"nodeType":"264","messageId":"265","endLine":2,"endColumn":33},{"ruleId":"262","severity":1,"message":"266","line":4,"column":20,"nodeType":"264","messageId":"265","endLine":4,"endColumn":26},{"ruleId":"262","severity":1,"message":"280","line":4,"column":28,"nodeType":"264","messageId":"265","endLine":4,"endColumn":35},{"ruleId":"262","severity":1,"message":"332","line":4,"column":57,"nodeType":"264","messageId":"265","endLine":4,"endColumn":64},{"ruleId":"262","severity":1,"message":"333","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":27},{"ruleId":"262","severity":1,"message":"296","line":6,"column":9,"nodeType":"264","messageId":"265","endLine":6,"endColumn":15},{"ruleId":"262","severity":1,"message":"281","line":11,"column":18,"nodeType":"264","messageId":"265","endLine":11,"endColumn":28},{"ruleId":"262","severity":1,"message":"325","line":1,"column":8,"nodeType":"264","messageId":"265","endLine":1,"endColumn":13},{"ruleId":"262","severity":1,"message":"334","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":14},{"ruleId":"262","severity":1,"message":"335","line":6,"column":16,"nodeType":"264","messageId":"265","endLine":6,"endColumn":25},{"ruleId":"262","severity":1,"message":"336","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":15},{"ruleId":"262","severity":1,"message":"337","line":7,"column":17,"nodeType":"264","messageId":"265","endLine":7,"endColumn":27},"no-unused-vars","'Drawer' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Icon' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'UserForm' is defined but never used.","'AdvisorAction' is defined but never used.","'showAllGradeVisible' is assigned a value but never used.","'setShowAllGradeVisible' is assigned a value but never used.","no-native-reassign",["338"],"no-negated-in-lhs",["339"],"'showGrade' is assigned a value but never used.","'selectedAdvisoryAssgined' is assigned a value but never used.","'message' is defined but never used.","'setLoading' is assigned a value but never used.","'gradeLevelVisible' is assigned a value but never used.","'setGradeLevelVisible' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["338"],["339"],"'DatePicker' is defined but never used.","'Select' is defined but never used.",["338"],["339"],"'Input' is defined but never used.","'Card' is defined but never used.","'Option' is assigned a value but never used.","'Link' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'version' is assigned a value but never used.","'loginCounter' is assigned a value but never used.","'today' is assigned a value but never used.",["338"],["339"],"'DeleteOutlined' is defined but never used.",["338"],["339"],"'moment' is defined but never used.","'response1' is assigned a value but never used.","'response2' is assigned a value but never used.","'updateResult' is assigned a value but never used.","'loadSelectedGrade' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadGrades', 'loadGrades1', 'loadGrades10', 'loadGrades2', 'loadGrades3', 'loadGrades4', 'loadGrades5', 'loadGrades6', 'loadGrades7', 'loadGrades8', and 'loadGrades9'. Either include them or remove the dependency array.","ArrayExpression",["340"],"'userDetails' is assigned a value but never used.","'React' is defined but never used.","'auditTrailObj' is assigned a value but never used.","'newArrayCredentials' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAdmin', 'loadParent', 'loadStudent', 'loadTeacher', and 'loadUsers'. Either include them or remove the dependency array.",["341"],"'setLoggedUser' is assigned a value but never used.","'locale' is assigned a value but never used.","'AntForm' is defined but never used.","'CheckCircleFilled' is defined but never used.","'timeIn' is assigned a value but never used.","'setTimeIn' is assigned a value but never used.","'timeOut' is assigned a value but never used.","'setTimeOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",{"range":"346","text":"347"},"Update the dependencies array to be: [loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]",{"range":"348","text":"349"},[28512,28514],"[loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",[18970,18972],"[loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]"]