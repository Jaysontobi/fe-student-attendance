[{"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/reportWebVitals.js":"1","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetails.js":"2","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade5.js":"3","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userForm.js":"4","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/loginForm.js":"5","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherForm.js":"6","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeForm.js":"7","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/App.js":"8","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/login.js":"9","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/parent.js":"10","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeeping.js":"11","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingService.js":"12","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/index.js":"13","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/quarter/quarterService.js":"14","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade9.js":"15","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryForm.js":"16","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeAction.js":"17","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/user.js":"18","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailAction.js":"19","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userAction.js":"20","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade7.js":"21","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryService.js":"22","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userMenu.js":"23","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingAction.js":"24","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/baseService.js":"25","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherAction.js":"26"},{"size":362,"mtime":1616172075137,"results":"27","hashOfConfig":"28"},{"size":2770,"mtime":1616172075137,"results":"29","hashOfConfig":"28"},{"size":4230,"mtime":1616172075137,"results":"30","hashOfConfig":"28"},{"size":7923,"mtime":1616172075137,"results":"31","hashOfConfig":"28"},{"size":2088,"mtime":1616172075137,"results":"32","hashOfConfig":"28"},{"size":4418,"mtime":1616172075137,"results":"33","hashOfConfig":"28"},{"size":15767,"mtime":1616172075137,"results":"34","hashOfConfig":"28"},{"size":7825,"mtime":1616172075137,"results":"35","hashOfConfig":"28"},{"size":4289,"mtime":1616172075137,"results":"36","hashOfConfig":"28"},{"size":2016,"mtime":1616172075137,"results":"37","hashOfConfig":"28"},{"size":3355,"mtime":1616172075137,"results":"38","hashOfConfig":"28"},{"size":596,"mtime":1616172075137,"results":"39","hashOfConfig":"28"},{"size":500,"mtime":1616172075137,"results":"40","hashOfConfig":"28"},{"size":556,"mtime":1616172075137,"results":"41","hashOfConfig":"28"},{"size":4226,"mtime":1616172075137,"results":"42","hashOfConfig":"28"},{"size":1670,"mtime":1616172075137,"results":"43","hashOfConfig":"28"},{"size":29138,"mtime":1616172075137,"results":"44","hashOfConfig":"28"},{"size":2039,"mtime":1616172075137,"results":"45","hashOfConfig":"28"},{"size":1127,"mtime":1616172075137,"results":"46","hashOfConfig":"28"},{"size":19345,"mtime":1616264952471,"results":"47","hashOfConfig":"28"},{"size":4315,"mtime":1616172075137,"results":"48","hashOfConfig":"28"},{"size":562,"mtime":1616172075137,"results":"49","hashOfConfig":"28"},{"size":710,"mtime":1616172075137,"results":"50","hashOfConfig":"28"},{"size":910,"mtime":1616172075137,"results":"51","hashOfConfig":"28"},{"size":1082,"mtime":1616172075137,"results":"52","hashOfConfig":"28"},{"size":6512,"mtime":1616172075137,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d23pu8",{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/reportWebVitals.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetails.js",["114","115","116","117","118","119","120","121","122"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade5.js",["123","124","125"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userForm.js",["126","127","128","129","130","131","132"],"import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst UserEditForm = ({ add,update, selectedUser, selectedParent }) => {\n\n   let [loading, setLoading] = useState(false);\n   let [gradeLevelVisible, setGradeLevelVisible] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedUser}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            if(values._id) {\n               console.log(values)\n               update(values)\n            } else {\n               add(values)\n      \n               // window.location.reload(false);\n            }\n         }}\n         render={({ values, touched, setFieldValue }) => (\n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n               <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"idNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"School Year\" name=\"schoolYear\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"schoolYear\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"First Name\" name=\"firstName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"firstName\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Middle Name\" name=\"middleName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"middleName\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Last Name\" name=\"lastName\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"lastName\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Gender\" name=\"gender\">\n                          <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gender\">\n                              <Option value=\"Male\">Male</Option>\n                              <Option value=\"Female\">Female</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item  label=\"Grade Level\" name=\"gradeLevel\">\n                        <Select disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"gradeLevel\">\n                              <Option value=\"1\">1</Option>\n                              <Option value=\"2\">2</Option>\n                              <Option value=\"3\">3</Option>\n                              <Option value=\"4\">4</Option>\n                              <Option value=\"5\">5</Option>\n                              <Option value=\"6\">6</Option>\n                              <Option value=\"7\">7</Option>\n                              <Option value=\"8\">8</Option>\n                              <Option value=\"9\">9</Option>\n                              <Option value=\"10\">10</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Section\" name=\"section\">\n                           <Input disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"section\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Birth Day\" name=\"birthDate\">\n                           <DatePicker disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthDate\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Birth Place\" name=\"birthPlace\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"birthPlace\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Age\" name=\"age\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"age\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                     <Form.Item label=\"Parent\" name=\"parentId\">\n                     <Select value={values.parent ? values.parent.firstName + \" \" + values.parent.lastName : \"\"} name=\"parentId\" disabled={values.role != \"Student\" || JSON.parse(sessionStorage.user).role === \"Teacher\"}>\n                        {selectedParent.map(parent => {\n                                 return <Option value={parent._id}>{parent.firstName + \" \" + parent.lastName}</Option>\n                        })}\n                     </Select>\n                     </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Contact Number\" name=\"contactNumber\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"contactNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Email\" name=\"email\">\n                           <Input disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"email\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Role\" name=\"role\">\n                           <Select disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"role\">\n                              <Option value=\"Admin\">Admin</Option>\n                              <Option value=\"Student\">Student</Option>\n                              <Option value=\"Parent\">Parent</Option>\n                              <Option value=\"Teacher\">Teacher</Option>\n                           </Select>\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Password\" name=\"password\">\n                           <Input.Password disabled={JSON.parse(sessionStorage.user).role === \"Teacher\"} name=\"password\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                 {JSON.parse(sessionStorage.user).role === \"Admin\" ?  <Button className=\"btn-save\" htmlType=\"submit\">\n                   <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button> : null}\n                 \n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default UserEditForm;",["133","134"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/loginForm.js",["135","136"],"import React from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, Spin } from 'antd';\n\nconst LoginForm = ({login}) => {\n   return (\n      <Formik\n         initialValues={{\n            username: \"\",\n            password: \"\"\n         }}\n         enableReinitialize={true}\n         onSubmit={async (values, actions) => {\n             login(values)\n            // await login(values)\n            // actions.setSubmitting(false);\n         }}\n         render={\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\n               <Spin spinning={isSubmitting}>\n                  <Form className=\"mt-10P\">\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              USERNAME:\n                           </b>\n                           <Form.Item name=\"username\">\n                              <Input name=\"username\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <b className=\"center\">\n                              PASSWORD:\n                           </b>\n                           <Form.Item name=\"password\">\n                              <Input.Password name=\"password\" />\n                           </Form.Item>\n                        </Col>\n                     </Row>\n                     <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\n                              Login\n                        </Button>\n                        </Col>\n                     </Row>\n                  </Form>\n               </Spin>\n            )}\n      />\n   );\n}\n\nexport default LoginForm;",["137","138"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherForm.js",["139","140","141","142","143"],"import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={{}}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n            add(values, gradeLevel) \n         }}\n         render={({ values, touched, setFieldValue }) => (\n             \n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"English\" name=\"english\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\n                  {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n                  \n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Filipino\" name=\"filipino\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"Science\" name=\"science\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Math\" name=\"math\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n\n         <Row gutter={16}>\n         <Col span={12}>\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\n            {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         <Col span={12}>\n            <Form.Item label=\"Values\" name=\"values\">\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\n               {selectedTeacher.map(teacher => {\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\n                  })}\n               </Select>\n            </Form.Item>\n         </Col>\n         </Row>\n                  <Button className=\"btn-save\" htmlType=\"submit\">\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\n                  </Button>\n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default TeacherForm;","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeForm.js",["144","145","146","147"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/App.js",["148","149","150","151"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/login/login.js",["152","153","154","155","156","157","158"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/parent.js",["159","160","161"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    parentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterParent\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\n      </Col>\n      <Col lg={{ span: 6 }}>\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n        </Button> */}\n      </Col>\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\n      </Button>\n    </Row>\n    <Row>\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\n        <UserTable details={parentList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n",["162","163"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeeping.js",["164","165","166","167","168","169"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/index.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/quarter/quarterService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade9.js",["170","171","172"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryForm.js",["173","174","175","176","177"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeAction.js",["178","179","180","181","182","183","184","185","186","187","188"],"import React, { useState, useEffect } from 'react';\nimport gradesService from './gradesService';\nimport userService from '../user/userService';\nimport advisoryService from '../grade/advisoryService';\nimport auditTrailService from '../auditTrail/auditTrailService';\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst Grade1Action = (initial = { searchRequest: {} }) => {\n  let [studentAdvisor, setStudentAdvisor] = useState({});\n  let [selectedUserGrade, setSelectedUserGrade] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [selectedGradeUser, setSelectedGradeUser] = useState([]);\n  let [gradeDetails, setGradeDetails] = useState( {list : []});\n  let [grade1Details, setGrade1Details] = useState( {list : []});\n  let [grade2Details, setGrade2Details] = useState( {list : []});\n  let [grade3Details, setGrade3Details] = useState( {list : []});\n  let [grade4Details, setGrade4Details] = useState( {list : []});\n  let [grade5Details, setGrade5Details] = useState( {list : []});\n  let [grade6Details, setGrade6Details] = useState( {list : []});\n  let [grade7Details, setGrade7Details] = useState( {list : []});\n  let [grade8Details, setGrade8Details] = useState( {list : []});\n  let [grade9Details, setGrade9Details] = useState( {list : []});\n  let [grade10Details, setGrade10Details] = useState( {list : []});\n\n  let [showGradeVisible, setShowGradeVisible] = useState(false);\n  let [selectedGrade, setSelectedGrade] = useState({});\n  let [selectedTeacher, setSelectedTeacher] = useState([]);\n  let [showAllGradeVisible, setShowAllGradeVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n\n  let [selectedListOfStudent, setSelectedListOfStudent] = useState([]);\n\n  const upgradeStudent = async values => {\n    let auditTrailObj = {\n    user: JSON.parse(sessionStorage.user),\n    activity : \"Upgrade Student\",\n    date:new Date()}\n    auditTrailService.add(auditTrailObj)\n    let ctr = 0;\n    await selectedListOfStudent.map(async student => {\n    setLoading(true)\n    let result = await gradesService.findyById(student.id);\n\n    let userCurrentGrade = (parseInt(result.data.gradeLevel))\n\n\n    if(userCurrentGrade < 10) {\n      let currentUser = result.data\n      let allStudent = await userService.findAllUser();\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n      let currentStudent = result1[0]\n      currentStudent.gradeLevel = (userCurrentGrade + 1).toString()\n      let response = await userService.update(currentStudent)\n\n      currentUser.status = false;\n      let response1 = await gradesService.update(currentUser)\n\n      let gradeObj = {\n        status: true,\n        student: currentUser.student,\n        gradeLevel: (userCurrentGrade + 1).toString(),\n        section: currentUser.student.section,\n        schoolYear : currentStudent.schoolYear,\n        subjects: [{\n            subjectName: \"English\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Filipino\",\n            subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Science\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Math\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"MAPEH\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        },\n        {\n          schoolYear : currentUser.schoolYear,\n            subjectName: \"Values\",\n              subjectGrade: {\n              firstQuarter: 0,\n              secondQuarter: 0,\n              thirdQuarter: 0,\n              fourthQuarter: 0\n          }\n        }]\n    }\n\n    let response2 = gradesService.add(gradeObj)\n  \n\n    } else {\n      let currentUser = result.data\n      let allStudent = await userService.findAllUser();\n      let result1 = allStudent.data.filter(user => user.idNumber === student.idNumber);\n      let currentStudent = result1[0]\n      currentStudent.gradeLevel = \"Graduate\"\n      let response = await userService.update(currentStudent)\n\n      currentUser.status = false;\n      let response1 = await gradesService.update(currentUser)\n    }\n    ctr= ctr+1\n    if(ctr === selectedListOfStudent.length) {\n      setLoading(false)\n      window.location.reload(false)\n    }\n    })\n\n  };\n\n  const editGrade = async values => {\n    let result = await gradesService.findyById(values._id);\n    let grade = result.data\n\n    if(values.English) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.English.firstQuarter) {\n        firstQuarter = values.English.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[0].subjectGrade.firstQuarter\n      }\n\n      if(values.English.secondQuarter) {\n        secondQuarter = values.English.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[0].subjectGrade.secondQuarter\n      }\n\n      if(values.English.thirdQuarter) {\n        thirdQuarter = values.English.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[0].subjectGrade.thirdQuarter\n      }\n\n      if(values.English.fourthQuarter) {\n        fourthQuarter = values.English.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[0].subjectGrade.fourthQuarter\n      }      \n\n      let newEnglishGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[0].subjectGrade = newEnglishGrade;\n    }    \n\n    if(values.Filipino) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Filipino.firstQuarter) {\n        firstQuarter = values.Filipino.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[1].subjectGrade.firstQuarter\n      }\n\n      if(values.Filipino.secondQuarter) {\n        secondQuarter = values.Filipino.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[1].subjectGrade.secondQuarter\n      }\n\n      if(values.Filipino.thirdQuarter) {\n        thirdQuarter = values.Filipino.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[1].subjectGrade.thirdQuarter\n      }\n\n      if(values.Filipino.fourthQuarter) {\n        fourthQuarter = values.Filipino.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[1].subjectGrade.fourthQuarter\n      }      \n\n      let newFilipinoGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[1].subjectGrade = newFilipinoGrade;\n    }\n\n    if(values.Science) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Science.firstQuarter) {\n        firstQuarter = values.Science.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[2].subjectGrade.firstQuarter\n      }\n\n      if(values.Science.secondQuarter) {\n        secondQuarter = values.Science.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[2].subjectGrade.secondQuarter\n      }\n\n      if(values.Science.thirdQuarter) {\n        thirdQuarter = values.Science.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[2].subjectGrade.thirdQuarter\n      }\n\n      if(values.Science.fourthQuarter) {\n        fourthQuarter = values.Science.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[2].subjectGrade.fourthQuarter\n      }      \n\n      let newScienceGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[2].subjectGrade = newScienceGrade;\n    }\n\n    if(values.Math) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Math.firstQuarter) {\n        firstQuarter = values.Math.firstQuarter\n      } else {\n        firstQuarter = grade.Math[3].subjectGrade.firstQuarter\n      }\n\n      if(values.Math.secondQuarter) {\n        secondQuarter = values.Math.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[3].subjectGrade.secondQuarter\n      }\n\n      if(values.Math.thirdQuarter) {\n        thirdQuarter = values.Math.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[3].subjectGrade.thirdQuarter\n      }\n\n      if(values.Math.fourthQuarter) {\n        fourthQuarter = values.Math.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[3].subjectGrade.fourthQuarter\n      }      \n\n      let newMathGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[3].subjectGrade = newMathGrade;\n    }\n\n    if(values.MAPEH) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.MAPEH.firstQuarter) {\n        firstQuarter = values.MAPEH.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[4].subjectGrade.firstQuarter\n      }\n\n      if(values.MAPEH.secondQuarter) {\n        secondQuarter = values.MAPEH.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[4].subjectGrade.secondQuarter\n      }\n\n      if(values.MAPEH.thirdQuarter) {\n        thirdQuarter = values.MAPEH.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[4].subjectGrade.thirdQuarter\n      }\n\n      if(values.MAPEH.fourthQuarter) {\n        fourthQuarter = values.MAPEH.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[4].subjectGrade.fourthQuarter\n      }      \n\n      let newMAPEHGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[4].subjectGrade = newMAPEHGrade;\n    }\n\n    if(values.Values) {\n      let firstQuarter = 0;\n      let secondQuarter = 0;\n      let thirdQuarter = 0;\n      let fourthQuarter = 0;\n\n      if(values.Values.firstQuarter) {\n        firstQuarter = values.Values.firstQuarter\n      } else {\n        firstQuarter = grade.subjects[5].subjectGrade.firstQuarter\n      }\n\n      if(values.Values.secondQuarter) {\n        secondQuarter = values.Values.secondQuarter\n      } else {\n        secondQuarter = grade.subjects[5].subjectGrade.secondQuarter\n      }\n\n      if(values.Values.thirdQuarter) {\n        thirdQuarter = values.Values.thirdQuarter\n      } else {\n        thirdQuarter = grade.subjects[5].subjectGrade.thirdQuarter\n      }\n\n      if(values.Values.fourthQuarter) {\n        fourthQuarter = values.Values.fourthQuarter\n      } else {\n        fourthQuarter = grade.subjects[5].subjectGrade.fourthQuarter\n      }      \n\n      let newValuesGrade = {\n        firstQuarter: firstQuarter,\n        secondQuarter:secondQuarter,\n        thirdQuarter:thirdQuarter,\n        fourthQuarter:fourthQuarter\n      }\n      grade.subjects[5].subjectGrade = newValuesGrade;\n    }\n\n\n\n    let updateResult = await gradesService.update(grade);\n    window.location.reload();\n  };\n\n  const showGrade = () => {\n    setSelectedGrade({\n        schoolYear: \"\",\n        subjects: {},\n        grade: \"\",\n        student: {},\n        gradeLevel: \"\",\n        section: \"\",\n      })\n    setShowGradeVisible(true)\n  };\n\n  const loadGrade = (gradeObj, idNumber, level = '') => {\n    getCurrentGradeUser(idNumber, level)\n    setSelectedGrade({...gradeObj});\n    setShowGradeVisible(true);\n  };\n\n  const loadSelectedGrade = async (gradeId) => {\n    let response = await gradesService.findyById(gradeId);\n    setSelectedGrade({...response.data});\n    setShowGradeVisible(true);\n  };\n\n  const getListOfTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    setSelectedTeacher(result)\n  };\n\n  const filterCurrentGradeUser = async (gradeLevel) => {\n    setLoading(true)\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.gradeLevel === gradeLevel)\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      })\n      \n      let response = await advisoryService.findAllAdvisory()\n      let result1=[];\n      result1 = response.data.filter(user => user.gradeLevel === gradeLevel);\n    \n      setSelectedUser(result[0].student)\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([])\n    }\n    setLoading(false)\n  }\n\n  const currentGradeUser = async () => {\n    let response = await gradesService.findAllGrades();\n    let result = [];\n    if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === \"1\")\n    } else {\n      result = response.data.filter(user => user.student.idNumber === JSON.parse(sessionStorage.user).idNumber && user.student.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel)\n    }\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student)\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      })\n      \n      let response = await advisoryService.findAllAdvisory()\n      let result1=[];\n      if(JSON.parse(sessionStorage.user).gradeLevel === \"Graduate\") {\n        result1 = response.data.filter(user => user.gradeLevel === \"1\");\n      } else {\n        result1 = response.data.filter(user => user.gradeLevel === JSON.parse(sessionStorage.user).gradeLevel);\n      }\n      setStudentAdvisor(result1[0]);\n      setSelectedUserGrade(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedUserGrade([])\n    }\n\n  }\n\n  const getCurrentGradeUser = async (idNumber, level = '') => {\n    let response = await gradesService.findAllGrades(level);\n    let result = response.data.filter(user => user.student.idNumber === idNumber);\n    if(result.length >=1 && result[0].subjects && result[0].subjects.length >= 1) {\n      setSelectedUser(result[0].student);\n      let newArray = result[0].subjects.map((subject) => {\n        let remarks = \"\";\n        if((subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4 >=75){\n          remarks = \"Passed\"\n        } else {\n          remarks = \"Failed\"\n        }\n        return {\n          key: subject._id,\n          id: subject._id,\n          subject: subject.subjectName,\n          Quarter1st: subject.subjectGrade.firstQuarter,\n          Quarter2nd: subject.subjectGrade.secondQuarter,\n          Quarter3rd: subject.subjectGrade.thirdQuarter,\n          Quarter4th: subject.subjectGrade.fourthQuarter,\n          FinalGrade: (subject.subjectGrade.firstQuarter + subject.subjectGrade.secondQuarter + subject.subjectGrade.thirdQuarter + subject.subjectGrade.fourthQuarter)/4,\n          Remarks : remarks\n        }\n      });\n      setSelectedGradeUser(newArray);\n   \n    } else {\n      setSelectedUser({})\n      setSelectedGradeUser([])\n    }\n\n    \n   \n\n  }\n\n  const loadGrades = async () => {\n    let finalOffspring = [];\n    let response = await gradesService.findAllGrades();\n    let parent = await userService.findAllUser();\n    let result = parent.data.filter(user => user.parent);\n    let newArray = [];\n    let offspring = result.filter(user => user.parent._id === JSON.parse(sessionStorage.user).id);\n    await response.data.map((user) => {\n      offspring.map((off) => {\n        if(user.student.idNumber === off.idNumber){\n          finalOffspring.push(user)\n        }\n      });\n    });\n    newArray = finalOffspring.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.student.firstName,\n          lastName: user.student.lastName,\n          middleName: user.student.middleName,\n          idNumber: user.student.idNumber,\n          contactNumber: user.student.contactNumber,\n          email: user.student.email,\n          section: user.section,\n          gradeLevel: user.gradeLevel,\n          action: \n            <Button onClick={() => loadGrade(user,user.student.idNumber)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      setGradeDetails({\n        list: newArray\n      })\n  }\n\nconst loadGrades1 = async () => {\n    let response = await gradesService.findAllGrades('1');\n    let result = response.data.filter(user => user.gradeLevel === \"1\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '1')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade1Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades2 = async () => {\n    let response = await gradesService.findAllGrades('2');\n    let result = response.data.filter(user => user.gradeLevel === \"2\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '2')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade2Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades3 = async () => {\n    let response = await gradesService.findAllGrades('3');\n    let result = response.data.filter(user => user.gradeLevel === \"3\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '3')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade3Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades4 = async () => {\n    let response = await gradesService.findAllGrades('4');\n    let result = response.data.filter(user => user.gradeLevel === \"4\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '4')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade4Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades5 = async () => {\n    let response = await gradesService.findAllGrades('5');\n    let result = response.data.filter(user => user.gradeLevel === \"5\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '5')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade5Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades6 = async () => {\n    let response = await gradesService.findAllGrades('6');\n    let result = response.data.filter(user => user.gradeLevel === \"6\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '6')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade6Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades7 = async () => {\n    let response = await gradesService.findAllGrades('7');\n    let result = response.data.filter(user => user.gradeLevel === \"7\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '7')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade7Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades8 = async () => {\n    let response = await gradesService.findAllGrades('8');\n    let result = response.data.filter(user => user.gradeLevel === \"8\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '8')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade8Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades9 = async () => {\n    let response = await gradesService.findAllGrades('9');\n    let result = response.data.filter(user => user.gradeLevel === \"9\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '9')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade9Details({\n            list: newArray\n          })\n  }\n\n  const loadGrades10 = async () => {\n    let response = await gradesService.findAllGrades('10');\n    let result = response.data.filter(user => user.gradeLevel === \"10\" && user.status)\n        let newArray = result.map((user ) => {\n            return {\n              key: user._id,\n              id: user._id,\n              firstName: user.student.firstName,\n              lastName: user.student.lastName,\n              middleName: user.student.middleName,\n              idNumber: user.student.idNumber,\n              contactNumber: user.student.contactNumber,\n              email: user.student.email,\n              section: user.student.section,\n              action: \n                <Button onClick={() => loadGrade(user,user.student.idNumber, '10')} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n            }\n          })\n      \n          setGrade10Details({\n            list: newArray\n          })\n  }\n\n  useEffect(() => {\n    loadGrades1();\n    loadGrades2();\n    loadGrades3();\n    loadGrades4();\n    loadGrades5();\n    loadGrades6();\n    loadGrades7();\n    loadGrades8();\n    loadGrades9();\n    loadGrades10();\n    loadGrades();\n    currentGradeUser();\n    getListOfTeacher();\n  }, []);\n\n\n  return {\n    loadGrades1,\n    grade2Details,\n    grade3Details,\n    grade4Details,\n    grade5Details,\n    grade6Details,\n    grade7Details,\n    grade8Details,\n    grade9Details,\n    grade10Details,\n    showGradeVisible,\n    setShowGradeVisible,\n    showGrade,\n    grade1Details,\n    selectedGrade,\n    editGrade,\n    selectedTeacher,\n    gradeDetails,\n    selectedUserGrade,\n    showAllGradeVisible, \n    setShowAllGradeVisible,\n    selectedUser,\n    selectedGradeUser,\n    upgradeStudent,\n    setSelectedListOfStudent,\n    loading,\n    studentAdvisor,\n    filterCurrentGradeUser\n  }\n};\n\nexport default Grade1Action;\n","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/user.js",["189","190","191","192"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailAction.js",["193","194","195"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userAction.js",["196","197","198","199","200","201","202","203","204","205","206","207"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade7.js",["208","209","210"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userMenu.js",["211"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingAction.js",["212","213"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/baseService.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/teacherAction.js",["214","215"],{"ruleId":"216","severity":1,"message":"217","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":16},{"ruleId":"216","severity":1,"message":"220","line":2,"column":24,"nodeType":"218","messageId":"219","endLine":2,"endColumn":30},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"222","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":28},{"ruleId":"216","severity":1,"message":"223","line":3,"column":30,"nodeType":"218","messageId":"219","endLine":3,"endColumn":49},{"ruleId":"216","severity":1,"message":"224","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":16},{"ruleId":"216","severity":1,"message":"225","line":9,"column":8,"nodeType":"218","messageId":"219","endLine":9,"endColumn":21},{"ruleId":"216","severity":1,"message":"226","line":17,"column":5,"nodeType":"218","messageId":"219","endLine":17,"endColumn":24},{"ruleId":"216","severity":1,"message":"227","line":18,"column":5,"nodeType":"218","messageId":"219","endLine":18,"endColumn":27},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"228","line":21,"column":5,"nodeType":"218","messageId":"219","endLine":21,"endColumn":14},{"ruleId":"216","severity":1,"message":"229","line":47,"column":5,"nodeType":"218","messageId":"219","endLine":47,"endColumn":29},{"ruleId":"216","severity":1,"message":"230","line":4,"column":28,"nodeType":"218","messageId":"219","endLine":4,"endColumn":35},{"ruleId":"216","severity":1,"message":"231","line":11,"column":18,"nodeType":"218","messageId":"219","endLine":11,"endColumn":28},{"ruleId":"216","severity":1,"message":"232","line":12,"column":9,"nodeType":"218","messageId":"219","endLine":12,"endColumn":26},{"ruleId":"216","severity":1,"message":"233","line":12,"column":28,"nodeType":"218","messageId":"219","endLine":12,"endColumn":48},{"ruleId":"234","severity":1,"message":"235","line":73,"column":55,"nodeType":"236","messageId":"237","endLine":73,"endColumn":57},{"ruleId":"234","severity":1,"message":"235","line":89,"column":57,"nodeType":"236","messageId":"237","endLine":89,"endColumn":59},{"ruleId":"234","severity":1,"message":"235","line":113,"column":152,"nodeType":"236","messageId":"237","endLine":113,"endColumn":154},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"216","severity":1,"message":"242","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":33},{"ruleId":"216","severity":1,"message":"243","line":2,"column":35,"nodeType":"218","messageId":"219","endLine":2,"endColumn":41},{"ruleId":"238","replacedBy":"244"},{"ruleId":"240","replacedBy":"245"},{"ruleId":"216","severity":1,"message":"246","line":2,"column":16,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"242","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":33},{"ruleId":"216","severity":1,"message":"230","line":4,"column":28,"nodeType":"218","messageId":"219","endLine":4,"endColumn":35},{"ruleId":"216","severity":1,"message":"247","line":4,"column":43,"nodeType":"218","messageId":"219","endLine":4,"endColumn":47},{"ruleId":"216","severity":1,"message":"231","line":11,"column":18,"nodeType":"218","messageId":"219","endLine":11,"endColumn":28},{"ruleId":"216","severity":1,"message":"242","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":33},{"ruleId":"216","severity":1,"message":"230","line":4,"column":28,"nodeType":"218","messageId":"219","endLine":4,"endColumn":35},{"ruleId":"216","severity":1,"message":"248","line":6,"column":9,"nodeType":"218","messageId":"219","endLine":6,"endColumn":15},{"ruleId":"216","severity":1,"message":"231","line":10,"column":18,"nodeType":"218","messageId":"219","endLine":10,"endColumn":28},{"ruleId":"216","severity":1,"message":"221","line":2,"column":26,"nodeType":"218","messageId":"219","endLine":2,"endColumn":30},{"ruleId":"216","severity":1,"message":"249","line":3,"column":50,"nodeType":"218","messageId":"219","endLine":3,"endColumn":54},{"ruleId":"216","severity":1,"message":"250","line":52,"column":9,"nodeType":"218","messageId":"219","endLine":52,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":98,"column":25,"nodeType":"253","endLine":98,"endColumn":76},{"ruleId":"216","severity":1,"message":"254","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"230","line":2,"column":40,"nodeType":"218","messageId":"219","endLine":2,"endColumn":47},{"ruleId":"216","severity":1,"message":"255","line":8,"column":7,"nodeType":"218","messageId":"219","endLine":8,"endColumn":14},{"ruleId":"216","severity":1,"message":"256","line":19,"column":9,"nodeType":"218","messageId":"219","endLine":19,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":61,"column":17,"nodeType":"253","endLine":61,"endColumn":69},{"ruleId":"251","severity":1,"message":"252","line":76,"column":21,"nodeType":"253","endLine":76,"endColumn":66},{"ruleId":"251","severity":1,"message":"252","line":93,"column":21,"nodeType":"253","endLine":93,"endColumn":70},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"223","line":3,"column":30,"nodeType":"218","messageId":"219","endLine":3,"endColumn":49},{"ruleId":"216","severity":1,"message":"257","line":27,"column":5,"nodeType":"218","messageId":"219","endLine":27,"endColumn":10},{"ruleId":"238","replacedBy":"258"},{"ruleId":"240","replacedBy":"259"},{"ruleId":"216","severity":1,"message":"217","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":16},{"ruleId":"216","severity":1,"message":"220","line":2,"column":24,"nodeType":"218","messageId":"219","endLine":2,"endColumn":30},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"222","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":28},{"ruleId":"216","severity":1,"message":"260","line":3,"column":30,"nodeType":"218","messageId":"219","endLine":3,"endColumn":44},{"ruleId":"216","severity":1,"message":"248","line":9,"column":8,"nodeType":"218","messageId":"219","endLine":9,"endColumn":14},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"228","line":21,"column":5,"nodeType":"218","messageId":"219","endLine":21,"endColumn":14},{"ruleId":"216","severity":1,"message":"229","line":47,"column":5,"nodeType":"218","messageId":"219","endLine":47,"endColumn":29},{"ruleId":"216","severity":1,"message":"246","line":2,"column":16,"nodeType":"218","messageId":"219","endLine":2,"endColumn":21},{"ruleId":"216","severity":1,"message":"242","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":33},{"ruleId":"216","severity":1,"message":"230","line":4,"column":28,"nodeType":"218","messageId":"219","endLine":4,"endColumn":35},{"ruleId":"216","severity":1,"message":"247","line":4,"column":43,"nodeType":"218","messageId":"219","endLine":4,"endColumn":47},{"ruleId":"216","severity":1,"message":"231","line":11,"column":18,"nodeType":"218","messageId":"219","endLine":11,"endColumn":28},{"ruleId":"216","severity":1,"message":"261","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":14},{"ruleId":"216","severity":1,"message":"250","line":53,"column":11,"nodeType":"218","messageId":"219","endLine":53,"endColumn":19},{"ruleId":"216","severity":1,"message":"262","line":56,"column":11,"nodeType":"218","messageId":"219","endLine":56,"endColumn":20},{"ruleId":"216","severity":1,"message":"263","line":125,"column":9,"nodeType":"218","messageId":"219","endLine":125,"endColumn":18},{"ruleId":"216","severity":1,"message":"250","line":134,"column":11,"nodeType":"218","messageId":"219","endLine":134,"endColumn":19},{"ruleId":"216","severity":1,"message":"262","line":137,"column":11,"nodeType":"218","messageId":"219","endLine":137,"endColumn":20},{"ruleId":"216","severity":1,"message":"264","line":388,"column":9,"nodeType":"218","messageId":"219","endLine":388,"endColumn":21},{"ruleId":"216","severity":1,"message":"265","line":410,"column":9,"nodeType":"218","messageId":"219","endLine":410,"endColumn":26},{"ruleId":"266","severity":1,"message":"267","line":553,"column":36,"nodeType":"268","messageId":"269","endLine":553,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":554,"column":27,"nodeType":"268","messageId":"269","endLine":554,"endColumn":29},{"ruleId":"270","severity":1,"message":"271","line":836,"column":6,"nodeType":"272","endLine":836,"endColumn":8,"suggestions":"273"},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"223","line":3,"column":30,"nodeType":"218","messageId":"219","endLine":3,"endColumn":49},{"ruleId":"216","severity":1,"message":"274","line":19,"column":5,"nodeType":"218","messageId":"219","endLine":19,"endColumn":16},{"ruleId":"216","severity":1,"message":"257","line":28,"column":5,"nodeType":"218","messageId":"219","endLine":28,"endColumn":10},{"ruleId":"216","severity":1,"message":"275","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"220","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":16},{"ruleId":"216","severity":1,"message":"250","line":14,"column":9,"nodeType":"218","messageId":"219","endLine":14,"endColumn":17},{"ruleId":"216","severity":1,"message":"261","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"216","severity":1,"message":"276","line":21,"column":9,"nodeType":"218","messageId":"219","endLine":21,"endColumn":22},{"ruleId":"216","severity":1,"message":"250","line":30,"column":9,"nodeType":"218","messageId":"219","endLine":30,"endColumn":17},{"ruleId":"216","severity":1,"message":"250","line":99,"column":11,"nodeType":"218","messageId":"219","endLine":99,"endColumn":19},{"ruleId":"216","severity":1,"message":"276","line":117,"column":9,"nodeType":"218","messageId":"219","endLine":117,"endColumn":22},{"ruleId":"216","severity":1,"message":"250","line":125,"column":9,"nodeType":"218","messageId":"219","endLine":125,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":183,"column":33,"nodeType":"268","messageId":"269","endLine":183,"endColumn":35},{"ruleId":"216","severity":1,"message":"277","line":227,"column":11,"nodeType":"218","messageId":"219","endLine":227,"endColumn":30},{"ruleId":"216","severity":1,"message":"277","line":294,"column":11,"nodeType":"218","messageId":"219","endLine":294,"endColumn":30},{"ruleId":"216","severity":1,"message":"277","line":361,"column":11,"nodeType":"218","messageId":"219","endLine":361,"endColumn":30},{"ruleId":"216","severity":1,"message":"277","line":428,"column":11,"nodeType":"218","messageId":"219","endLine":428,"endColumn":30},{"ruleId":"270","severity":1,"message":"278","line":641,"column":6,"nodeType":"272","endLine":641,"endColumn":8,"suggestions":"279"},{"ruleId":"216","severity":1,"message":"221","line":2,"column":44,"nodeType":"218","messageId":"219","endLine":2,"endColumn":48},{"ruleId":"216","severity":1,"message":"228","line":21,"column":5,"nodeType":"218","messageId":"219","endLine":21,"endColumn":14},{"ruleId":"216","severity":1,"message":"229","line":47,"column":5,"nodeType":"218","messageId":"219","endLine":47,"endColumn":29},{"ruleId":"216","severity":1,"message":"280","line":12,"column":12,"nodeType":"218","messageId":"219","endLine":12,"endColumn":25},{"ruleId":"216","severity":1,"message":"275","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"281","line":5,"column":11,"nodeType":"218","messageId":"219","endLine":5,"endColumn":17},{"ruleId":"216","severity":1,"message":"275","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"250","line":54,"column":9,"nodeType":"218","messageId":"219","endLine":54,"endColumn":17},"no-unused-vars","'Drawer' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Icon' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'UserForm' is defined but never used.","'AdvisorAction' is defined but never used.","'showAllGradeVisible' is assigned a value but never used.","'setShowAllGradeVisible' is assigned a value but never used.","'showGrade' is assigned a value but never used.","'selectedAdvisoryAssgined' is assigned a value but never used.","'message' is defined but never used.","'setLoading' is assigned a value but never used.","'gradeLevelVisible' is assigned a value but never used.","'setGradeLevelVisible' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["282"],"no-negated-in-lhs",["283"],"'DatePicker' is defined but never used.","'Select' is defined but never used.",["282"],["283"],"'Input' is defined but never used.","'Card' is defined but never used.","'Option' is assigned a value but never used.","'Link' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'version' is assigned a value but never used.","'loginCounter' is assigned a value but never used.","'today' is assigned a value but never used.",["282"],["283"],"'DeleteOutlined' is defined but never used.","'moment' is defined but never used.","'response1' is assigned a value but never used.","'response2' is assigned a value but never used.","'updateResult' is assigned a value but never used.","'loadSelectedGrade' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadGrades', 'loadGrades1', 'loadGrades10', 'loadGrades2', 'loadGrades3', 'loadGrades4', 'loadGrades5', 'loadGrades6', 'loadGrades7', 'loadGrades8', and 'loadGrades9'. Either include them or remove the dependency array.","ArrayExpression",["284"],"'userDetails' is assigned a value but never used.","'React' is defined but never used.","'auditTrailObj' is assigned a value but never used.","'newArrayCredentials' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAdmin', 'loadParent', 'loadStudent', 'loadTeacher', and 'loadUsers'. Either include them or remove the dependency array.",["285"],"'setLoggedUser' is assigned a value but never used.","'locale' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",{"range":"290","text":"291"},"Update the dependencies array to be: [loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]",{"range":"292","text":"293"},[28512,28514],"[loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",[18970,18972],"[loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]"]