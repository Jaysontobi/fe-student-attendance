[{"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\App.js":"1","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\offspring\\offspring.js":"2","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userMenu.js":"3","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade5.js":"4","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade9.js":"5","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrail.js":"6","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeepingAction.js":"7","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\attendanceTable.js":"8","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\offspring\\offspringTable.js":"9","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradeForm.js":"10","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeepingService.js":"11","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\index.js":"12","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userSetting.js":"13","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\login\\login.js":"14","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\student.js":"15","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryForm.js":"16","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\clearance\\clearanceAction.js":"17","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\constants\\clearance.js":"18","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\attendanceService.js":"19","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\config.js":"20","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\dashboard\\dashboard.js":"21","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userService.js":"22","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\login\\loginForm.js":"23","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\dashboard\\dashboardAction.js":"24","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\baseService.js":"25","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradesService.js":"26","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\parent.js":"27","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade6.js":"28","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\quarter\\quarterService.js":"29","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeeping.js":"30","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userTable.js":"31","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\valuesTable.js":"32","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradeAction.js":"33","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradeInputAction.js":"34","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradesInput.js":"35","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\modelTemplate\\subjects.js":"36","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade4.js":"37","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade2.js":"38","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\userDetails.js":"39","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade8.js":"40","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade7.js":"41","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\shared\\customTable.js":"42","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrailTable.js":"43","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\reportWebVitals.js":"44","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\clearance\\clearance.js":"45","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userForm.js":"46","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\gradeTable.js":"47","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\shared\\editableTable.js":"48","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\clearance\\clearanceService.js":"49","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade1.js":"50","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userAction.js":"51","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrailAction.js":"52","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade10.js":"53","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade3.js":"54","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryGrades.js":"55","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\attendanceAction.js":"56","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherAction.js":"57","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\teacher.js":"58","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryService.js":"59","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\siderMenu.js":"60","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\userDetailsForm.js":"61","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\AttendanceAction.js":"62","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userContext.js":"63","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeepingTable.js":"64","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherForm.js":"65","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherSubjectAssigment.js":"66","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherService.js":"67","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\offspring\\offspringForm.js":"68","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrailService.js":"69","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryAction.js":"70","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\modelTemplate\\schoolDay.js":"71"},{"size":8426,"mtime":1620151443446,"results":"72","hashOfConfig":"73"},{"size":1332,"mtime":1620151443466,"results":"74","hashOfConfig":"73"},{"size":979,"mtime":1620151443609,"results":"75","hashOfConfig":"73"},{"size":7404,"mtime":1620804907650,"results":"76","hashOfConfig":"73"},{"size":7405,"mtime":1620807363641,"results":"77","hashOfConfig":"73"},{"size":2196,"mtime":1620151443449,"results":"78","hashOfConfig":"73"},{"size":933,"mtime":1620151443471,"results":"79","hashOfConfig":"73"},{"size":1120,"mtime":1620151443605,"results":"80","hashOfConfig":"73"},{"size":1276,"mtime":1620151443467,"results":"81","hashOfConfig":"73"},{"size":47136,"mtime":1620616423783,"results":"82","hashOfConfig":"73"},{"size":621,"mtime":1620151443549,"results":"83","hashOfConfig":"73"},{"size":517,"mtime":1620151443613,"results":"84","hashOfConfig":"73"},{"size":2407,"mtime":1620151443602,"results":"85","hashOfConfig":"73"},{"size":4397,"mtime":1620151443464,"results":"86","hashOfConfig":"73"},{"size":3943,"mtime":1620151443595,"results":"87","hashOfConfig":"73"},{"size":2110,"mtime":1620151443455,"results":"88","hashOfConfig":"73"},{"size":2841,"mtime":1620151443451,"results":"89","hashOfConfig":"73"},{"size":766,"mtime":1620569604493,"results":"90","hashOfConfig":"73"},{"size":450,"mtime":1620151443604,"results":"91","hashOfConfig":"73"},{"size":312,"mtime":1620675220823,"results":"92","hashOfConfig":"73"},{"size":4474,"mtime":1620151443453,"results":"93","hashOfConfig":"73"},{"size":850,"mtime":1620151443601,"results":"94","hashOfConfig":"73"},{"size":2144,"mtime":1620151443464,"results":"95","hashOfConfig":"73"},{"size":915,"mtime":1620151443453,"results":"96","hashOfConfig":"73"},{"size":1122,"mtime":1620151443448,"results":"97","hashOfConfig":"73"},{"size":747,"mtime":1620151443462,"results":"98","hashOfConfig":"73"},{"size":2120,"mtime":1620151443594,"results":"99","hashOfConfig":"73"},{"size":7401,"mtime":1620805045097,"results":"100","hashOfConfig":"73"},{"size":581,"mtime":1620151443468,"results":"101","hashOfConfig":"73"},{"size":3445,"mtime":1620151443470,"results":"102","hashOfConfig":"73"},{"size":1303,"mtime":1620151443603,"results":"103","hashOfConfig":"73"},{"size":2142,"mtime":1620151443609,"results":"104","hashOfConfig":"73"},{"size":37803,"mtime":1620755713040,"results":"105","hashOfConfig":"73"},{"size":3245,"mtime":1620811064188,"results":"106","hashOfConfig":"73"},{"size":3908,"mtime":1620791855499,"results":"107","hashOfConfig":"73"},{"size":935,"mtime":1620792736549,"results":"108","hashOfConfig":"73"},{"size":7404,"mtime":1620804808878,"results":"109","hashOfConfig":"73"},{"size":7446,"mtime":1620803072839,"results":"110","hashOfConfig":"73"},{"size":6680,"mtime":1620151443608,"results":"111","hashOfConfig":"73"},{"size":7403,"mtime":1620805620387,"results":"112","hashOfConfig":"73"},{"size":8258,"mtime":1620807244661,"results":"113","hashOfConfig":"73"},{"size":680,"mtime":1620289676287,"results":"114","hashOfConfig":"73"},{"size":559,"mtime":1620151443450,"results":"115","hashOfConfig":"73"},{"size":375,"mtime":1620151443613,"results":"116","hashOfConfig":"73"},{"size":1589,"mtime":1620151443451,"results":"117","hashOfConfig":"73"},{"size":8748,"mtime":1620151443601,"results":"118","hashOfConfig":"73"},{"size":2374,"mtime":1620151443606,"results":"119","hashOfConfig":"73"},{"size":3592,"mtime":1620151443469,"results":"120","hashOfConfig":"73"},{"size":371,"mtime":1620151443452,"results":"121","hashOfConfig":"73"},{"size":8214,"mtime":1620804548238,"results":"122","hashOfConfig":"73"},{"size":21495,"mtime":1620753738120,"results":"123","hashOfConfig":"73"},{"size":2175,"mtime":1620151443449,"results":"124","hashOfConfig":"73"},{"size":7421,"mtime":1620807460628,"results":"125","hashOfConfig":"73"},{"size":7399,"mtime":1620811064159,"results":"126","hashOfConfig":"73"},{"size":5589,"mtime":1620662709662,"results":"127","hashOfConfig":"73"},{"size":1600,"mtime":1620151443604,"results":"128","hashOfConfig":"73"},{"size":7416,"mtime":1620805476289,"results":"129","hashOfConfig":"73"},{"size":2104,"mtime":1620151443597,"results":"130","hashOfConfig":"73"},{"size":788,"mtime":1620151443456,"results":"131","hashOfConfig":"73"},{"size":8092,"mtime":1620151443469,"results":"132","hashOfConfig":"73"},{"size":9711,"mtime":1620151443608,"results":"133","hashOfConfig":"73"},{"size":2311,"mtime":1620151443470,"results":"134","hashOfConfig":"73"},{"size":89,"mtime":1620151443603,"results":"135","hashOfConfig":"73"},{"size":619,"mtime":1620151443550,"results":"136","hashOfConfig":"73"},{"size":4515,"mtime":1620793199804,"results":"137","hashOfConfig":"73"},{"size":2422,"mtime":1620811064190,"results":"138","hashOfConfig":"73"},{"size":575,"mtime":1620151443463,"results":"139","hashOfConfig":"73"},{"size":12099,"mtime":1620151443466,"results":"140","hashOfConfig":"73"},{"size":604,"mtime":1620151443450,"results":"141","hashOfConfig":"73"},{"size":7917,"mtime":1620151443454,"results":"142","hashOfConfig":"73"},{"size":195,"mtime":1620151443465,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},"1pcapwy",{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"147"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"165"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"155"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"147"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"171"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"171"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"151"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"171"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"206"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"155"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"155"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"206"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"183"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"147"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\App.js",["321","322","323","324","325"],"import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Layout, Avatar, Icon, Dropdown, Typography, Select } from 'antd';\r\nimport { BrowserRouter, Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport Dashboard from \"./components/dashboard/dashboard\";\r\nimport User from \"./components/user/user.js\";\r\nimport Student from \"./components/user/student.js\";\r\nimport Parent from \"./components/user/parent.js\";\r\nimport Teacher from \"./components/user/teacher.js\";\r\nimport UserSetting from \"./components/user/userSetting.js\";\r\nimport UserDetail from \"./components/userDetails/userDetails.js\";\r\nimport AdvisoryGrades from \"./components/grade/advisoryGrades\";\r\nimport Grade1 from \"./components/grade/grade1\";\r\nimport Grade2 from \"./components/grade/grade2\";\r\nimport Grade3 from \"./components/grade/grade3\";\r\nimport Grade4 from \"./components/grade/grade4\";\r\nimport Grade5 from \"./components/grade/grade5\";\r\nimport Grade6 from \"./components/grade/grade6\";\r\nimport Grade7 from \"./components/grade/grade7\";\r\nimport Grade8 from \"./components/grade/grade8\";\r\nimport Grade9 from \"./components/grade/grade9\";\r\nimport Grade10 from \"./components/grade/grade10\";\r\nimport Offspring from \"./components/offspring/offspring.js\";\r\nimport Timekeeping from \"./components/timeKeeping/timeKeeping\";\r\nimport QuarterService from \"../src/components/quarter/quarterService\"\r\n// import Item from \"./components/item/item.js\";\r\nimport Login from \"./components/login/login.js\";\r\nimport SiderMenu from \"./components/siderMenu\"\r\nimport UserMenu from \"./components/userMenu\"\r\nimport AuditTrail from \"./components/auditTrail/auditTrail\"\r\nimport Clearance from './components/clearance/clearance';\r\n\r\nimport { UserContext } from './components/userContext'\r\n\r\nconst { Option } = Select;\r\n\r\nconst App = () => {\r\n  const { Content, Sider, Header } = Layout;\r\n  let [loggedUser, setLoggedUser] = useState(null);\r\n  let [collapsed, setCollapsed] = useState(false);\r\n  let [theme] = useState(\"dark\");\r\n\r\n  const providerValue = useMemo(() => ({ loggedUser, setLoggedUser }), [loggedUser, setLoggedUser]);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.user) {\r\n      setLoggedUser(JSON.parse(sessionStorage.user));\r\n    }\r\n  }, []);\r\n\r\n  const onChangeFunction = async (value) => {\r\n    // console.log(value)\r\n    let response = await QuarterService.update({ _id: sessionStorage._id, quarter: value })\r\n    sessionStorage.setItem(\"quarter\", value)\r\n    window.location.reload(false)\r\n    // console.log(sessionStorage._id)\r\n    // console.log(sessionStorage.quarter)\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={providerValue}>\r\n      {\r\n        loggedUser ?\r\n          <BrowserRouter>\r\n            <Layout>\r\n              <BrowserRouter>\r\n                {JSON.parse(sessionStorage.user).role !== \"Student\" && JSON.parse(sessionStorage.user).role !== \"Parent\" ?\r\n                  <Sider className=\"sider\" collapsed={collapsed}>\r\n                    <Header className=\"sideBarHeader text-white\">\r\n                      {!collapsed ? <b className=\"font\"> Grading System </b> : <b className=\"font\"> GS </b>}\r\n                    </Header>\r\n                    <Content className=\"mt-20\">\r\n                      <SiderMenu className=\"bg-greenSideBar\" theme={theme} collapsed={collapsed} />\r\n                    </Content>\r\n                  </Sider>\r\n                  : null}\r\n                <Layout>\r\n                  <Header className=\"bg-white\">\r\n                    <a href onClick={() => {\r\n                      setCollapsed(!collapsed)\r\n                    }}>\r\n                      {/* <Icon className=\"text-black\" type={collapsed ? 'menu-unfold' : 'menu-fold'} /> */}\r\n                    </a>\r\n                    {JSON.parse(sessionStorage.user).role === \"Admin\" ? <span className=\"left\">\r\n                      Quarter: &nbsp;\r\n                    <Select onChange={\r\n                        (value) =>\r\n                          onChangeFunction(value)\r\n                      } defaultValue={sessionStorage.quarter} name=\"quarter\">\r\n                        <Option value=\"1\">1</Option>\r\n                        <Option value=\"2\">2</Option>\r\n                        <Option value=\"3\">3</Option>\r\n                        <Option value=\"4\">4</Option>\r\n                      </Select>\r\n                    </span> : null}\r\n\r\n                    {JSON.parse(sessionStorage.user).role === \"Student\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                      <span>\r\n                        <img width={45} src=\"/logo.png\" className=\"mr-10\" />\r\n                        <b className=\"fs-20\">Sto. Niño The Shepherd School</b>\r\n                      </span>\r\n                      : null}\r\n\r\n\r\n                    <span className=\"right\">\r\n                      <Avatar className=\"avatar\" src=\"https://picsum.photos/id/237/200/300\" />\r\n                      <Dropdown overlay={<UserMenu />}>\r\n                        <Typography.Text className=\"user\">Sample User</Typography.Text>\r\n                      </Dropdown>\r\n                    </span>\r\n                  </Header>\r\n                  <Layout>\r\n                    <Content className=\"pt-30 pb-30\">\r\n                      <Switch>\r\n                        {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n                          <Redirect\r\n                            exact\r\n                            from=\"/login\"\r\n                            to=\"/dashboard\"\r\n                          /> :\r\n                          JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n                            <Redirect\r\n                              exact\r\n                              from=\"/login\"\r\n                              to=\"/offspring\"\r\n                            /> : JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n                              <Redirect\r\n                                exact\r\n                                from=\"/login\"\r\n                                to=\"/grade1\"\r\n                              /> : <Redirect\r\n                                exact\r\n                                from=\"/login\"\r\n                                to=\"/\"\r\n                              />}\r\n                        <Route path=\"/settings\" component={UserSetting} />\r\n                        <Route path=\"/admin\" component={User} />\r\n                        <Route path=\"/student\" component={Student} />\r\n                        <Route path=\"/parent\" component={Parent} />\r\n                        <Route path=\"/teacher\" component={Teacher} />\r\n                        <Route path=\"/dashboard\" component={Dashboard} />\r\n                        <Route path=\"/advisoryclass\" component={AdvisoryGrades} />\r\n                        <Route path=\"/grade1\" component={Grade1} />\r\n                        <Route path=\"/grade2\" component={Grade2} />\r\n                        <Route path=\"/grade3\" component={Grade3} />\r\n                        <Route path=\"/grade4\" component={Grade4} />\r\n                        <Route path=\"/grade5\" component={Grade5} />\r\n                        <Route path=\"/grade6\" component={Grade6} />\r\n                        <Route path=\"/grade7\" component={Grade7} />\r\n                        <Route path=\"/grade8\" component={Grade8} />\r\n                        <Route path=\"/grade9\" component={Grade9} />\r\n                        <Route path=\"/grade10\" component={Grade10} />\r\n                        <Route path=\"/offspring\" >\r\n                          <UserDetail isParent='true'/>\r\n                        </Route>\r\n                        <Route path=\"/timekeeping\" component={Timekeeping} />\r\n                        <Route path=\"/auditTrail\" component={AuditTrail} />\r\n                        <Route path=\"/clearance\" component={Clearance} />\r\n                        <Route path=\"/\" component={UserDetail} />\r\n                      </Switch>\r\n                    </Content>\r\n                  </Layout>\r\n                </Layout>\r\n              </BrowserRouter>\r\n            </Layout>\r\n            <Layout>\r\n            </Layout>\r\n          </BrowserRouter>\r\n          :\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Redirect from=\"*\" to=\"/login\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n      }\r\n    </UserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n",["326","327"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\offspring\\offspring.js",["328","329","330","331"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport GradeForm from '../offspring/offspringForm'\r\n\r\nimport GradeAction from '../grade/gradeAction'\r\n\r\nimport OffspringTable from '../offspring/offspringTable'\r\n\r\nconst OffspringPage = () => {\r\n\r\n\r\n  let {\r\n    selectedGrade,\r\n    showGradeVisible,\r\n    setShowGradeVisible,\r\n    gradeDetails\r\n  } = GradeAction({});\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 12 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 12 }}>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={{ span: \"24\" }}>\r\n          <OffspringTable details={gradeDetails.list} />\r\n        </Col>\r\n      </Row>\r\n      <Drawer\r\n        title={\r\n          <Typography.Title level={4}>\r\n\r\n          </Typography.Title>\r\n        }\r\n        width={700}\r\n        visible={showGradeVisible}\r\n        onClose={() => { setShowGradeVisible(false) }}\r\n        bodyStyle={{ paddingBottom: 80 }}\r\n      >\r\n        <GradeForm selectedOffspring={selectedGrade} />\r\n      </Drawer>\r\n\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default OffspringPage;\r\n\r\n",["332","333"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userMenu.js",["334"],"import React, { useContext } from 'react';\r\nimport {  Menu } from 'antd';\r\nimport { UserContext } from './userContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    LogoutOutlined,\r\n    SettingOutlined\r\n  } from '@ant-design/icons';\r\n\r\n\r\nconst UserMenu = () => {\r\n\r\n   const { setLoggedUser } = useContext(UserContext);\r\n\r\n   const logout = async () => {\r\n    sessionStorage.removeItem('user');\r\n    window.location.reload(false);\r\n    //   setLoggedUser(null);\r\n    //   sessionStorage.removeItem('token');\r\n    //   sessionStorage.removeItem('user');\r\n   }\r\n\r\n   return (\r\n      <Menu className=\"mt-20\">\r\n         <Menu.Item onClick={()=>logout()} className=\"dropdown-item\">\r\n            <LogoutOutlined />Logout\r\n         </Menu.Item>\r\n         <Menu.Item className=\"dropdown-item\">\r\n            <SettingOutlined /> Settings\r\n            <Link to={'/settings'} className=\"nav-link\" />\r\n         </Menu.Item>\r\n      </Menu>\r\n   );\r\n}\r\n\r\nexport default UserMenu;\r\n",["335","336"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade5.js",["337","338","339","340","341","342","343","344"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade9.js",["345","346","347","348","349","350","351","352"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrail.js",["353","354","355","356","357"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeepingAction.js",["358","359"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n// import TimeKeepingService from \"../timeKeeping/timeKeepingService\";\r\nconst TimeKeepingAction = (initial = { searchRequest: {} }) => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a')); // Save the current date to be able to trigger an update\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'));\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n  }, []);\r\n\r\n\r\n  return {\r\n    today\r\n  }\r\n};\r\n\r\nexport default TimeKeepingAction;",["360","361"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\attendanceTable.js",[],["362","363"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\offspring\\offspringTable.js",[],["364","365"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradeForm.js",["366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card, Collapse } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\n\r\nconst Grade1EditForm = ({ upgradeStudent, add, update, selectedGrade, selectedTeacher, selectedTeacherAssignedGrade, gradeLevel, isAdviser = false }) => {\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  const userRole = JSON.parse(sessionStorage.user).role;\r\n\r\n  let lowestGrade = 50;\r\n  const hasUpdate = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n\r\n    if (subject && subject.recommendedGrade && subject.recommendedGrade[quarter] && subject.recommendedGrade[quarter] !== subject.subjectGrade[quarter]) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  let updatesHolder = {};\r\n  let mapehObj = {\r\n    MAPEH1: 0,\r\n    MAPEH2: 0,\r\n    MAPEH3: 0,\r\n    MAPEH4: 0\r\n  };\r\n\r\n  const autoFillGrade = (subjectName = '', quarter = '', field = '', isDefault = false, quarterNum = 0) => {\r\n    let activeQuarter = sessionStorage.quarter;\r\n    let index = selectedGrade.subjects.findIndex(subject => subject.subjectName === subjectName);\r\n    let value = (selectedGrade.subjects[index] && selectedGrade.subjects[index].recommendedGrade) ? selectedGrade.subjects[index].recommendedGrade[quarter] : null;\r\n    let dafaultVal = (selectedGrade.subjects[index]) ? selectedGrade.subjects[index].subjectGrade[quarter] : lowestGrade;\r\n    dafaultVal = (dafaultVal && dafaultVal >= 50) ? dafaultVal : (activeQuarter === quarterNum) ? lowestGrade : 0;\r\n    value = (isDefault) ? dafaultVal : value;\r\n    let holder = {\r\n      [field]: value\r\n    };\r\n    updatesHolder = Object.assign(updatesHolder, holder);\r\n    return value;\r\n  };\r\n\r\n  //used to get the confirmed grades\r\n  const getGrade = (subjectName = '', quarter = '') => {\r\n    let subject = selectedGrade.subjects.find(subject => subject.subjectName === subjectName);\r\n    if (subject) {\r\n      return subject.subjectGrade[quarter];\r\n    } else {\r\n      return '0';\r\n    };\r\n  };\r\n\r\n  // const getMAPEHGrades = (quarter) => {\r\n  //   let q1 = document.getElementbyId('Music' + quarter).value;\r\n  //   let q2 = document.getElementbyId('Art' + quarter).value;\r\n  //   let q3 = document.getElementbyId('PE' + quarter).value;\r\n  //   let q4 = document.getElementbyId('Health' + quarter).value;\r\n  //   let average = (q1 + q2 + q3 + q4) / 4;\r\n  //   let key = 'MAPEH' + quarter;\r\n  //   mapehObj[key] = average;\r\n  // };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={selectedGrade}\r\n      enableReinitialize={true}\r\n      onSubmit={async inputValues => {\r\n\r\n        let values = {};\r\n        values = Object.assign(values, updatesHolder);\r\n        values = Object.assign(values, inputValues);\r\n\r\n        let newValues = {\r\n          _id: values._id\r\n        };\r\n        let English = {};\r\n        let Filipino = {};\r\n        let Science = {};\r\n        let Math = {};\r\n        let MAPEH = {};\r\n        let Values = {};\r\n        let Music = {};\r\n        let Art = {};\r\n        let PE = {};\r\n        let Health = {};\r\n\r\n        if (values.English1 || values.English2 || values.English3 || values.English4) {\r\n          English = {\r\n            firstQuarter: values.English1,\r\n            secondQuarter: values.English2,\r\n            thirdQuarter: values.English3,\r\n            fourthQuarter: values.English4\r\n          }\r\n          newValues.English = English;\r\n        }\r\n        if (values.Filipino1 || values.Filipino2 || values.Filipino3 || values.Filipino4) {\r\n          Filipino = {\r\n            firstQuarter: values.Filipino1,\r\n            secondQuarter: values.Filipino2,\r\n            thirdQuarter: values.Filipino3,\r\n            fourthQuarter: values.Filipino4\r\n          }\r\n          newValues.Filipino = Filipino;\r\n        }\r\n        if (values.Science1 || values.Science2 || values.Science3 || values.Science4) {\r\n          Science = {\r\n            firstQuarter: values.Science1,\r\n            secondQuarter: values.Science2,\r\n            thirdQuarter: values.Science3,\r\n            fourthQuarter: values.Science4\r\n          }\r\n          newValues.Science = Science;\r\n        }\r\n        if (values.Math1 || values.Math2 || values.Math3 || values.Math4) {\r\n          Math = {\r\n            firstQuarter: values.Math1,\r\n            secondQuarter: values.Math2,\r\n            thirdQuarter: values.Math3,\r\n            fourthQuarter: values.Math4\r\n          }\r\n          newValues.Math = Math;\r\n        }\r\n        if (values.MAPEH1 || values.MAPEH2 || values.MAPEH3 || values.MAPEH4) {\r\n          MAPEH = {\r\n            firstQuarter: values.MAPEH1,\r\n            secondQuarter: values.MAPEH2,\r\n            thirdQuarter: values.MAPEH3,\r\n            fourthQuarter: values.MAPEH4\r\n          }\r\n          newValues.MAPEH = MAPEH;\r\n        }\r\n        if (values.Values1 || values.Values2 || values.Values3 || values.Values4) {\r\n          Values = {\r\n            firstQuarter: values.Values1,\r\n            secondQuarter: values.Values2,\r\n            thirdQuarter: values.Values3,\r\n            fourthQuarter: values.Values4\r\n          }\r\n          newValues.Values = Values;\r\n        };\r\n\r\n        if (values.Music1 || values.Music2 || values.Music3 || values.Music4) {\r\n          Music = {\r\n            firstQuarter: values.Music1,\r\n            secondQuarter: values.Music2,\r\n            thirdQuarter: values.Music3,\r\n            fourthQuarter: values.Music4\r\n          }\r\n          newValues.Music = Music;\r\n        };\r\n\r\n        if (values.Art1 || values.Art2 || values.Art3 || values.Art4) {\r\n          Art = {\r\n            firstQuarter: values.Art1,\r\n            secondQuarter: values.Art2,\r\n            thirdQuarter: values.Art3,\r\n            fourthQuarter: values.Art4\r\n          }\r\n          newValues.Art = Art;\r\n        };\r\n\r\n        if (values.PE1 || values.PE2 || values.PE3 || values.PE4) {\r\n          PE = {\r\n            firstQuarter: values.PE1,\r\n            secondQuarter: values.PE2,\r\n            thirdQuarter: values.PE3,\r\n            fourthQuarter: values.PE4\r\n          }\r\n          newValues.PE = PE;\r\n        };\r\n\r\n        if (values.Health1 || values.Health2 || values.Health3 || values.Health4) {\r\n          Health = {\r\n            firstQuarter: values.Health1,\r\n            secondQuarter: values.Health2,\r\n            thirdQuarter: values.Health3,\r\n            fourthQuarter: values.Health4\r\n          }\r\n          newValues.Health = Health;\r\n        };\r\n        update(newValues, isAdviser);\r\n      }}\r\n      render={({ values, touched, setFieldValue }) => (\r\n\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form className=\"p-30\" >\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"ID Number\" name=\"idNumber\">\r\n                  <Input disabled={true} value={values.student.idNumber} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"Name\" name=\"name\">\r\n                  <Input disabled={true} value={values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={16}>\r\n                <Form.Item label=\"School Year\" name=\"schoolYear\">\r\n                  <Input disabled={true} name=\"schoolYear\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects[0] &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[0].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"English\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"English1\"\r\n                              defaultValue={hasUpdate('English', 'firstQuarter') ?\r\n                                autoFillGrade('English', 'firstQuarter', 'English1') :\r\n                                autoFillGrade('English', 'firstQuarter', 'English1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"English2\"\r\n                              defaultValue={hasUpdate('English', 'secondQuarter') ?\r\n                                autoFillGrade('English', 'secondQuarter', 'English2') :\r\n                                autoFillGrade('English', 'secondQuarter', 'English2', true, '2')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"English3\"\r\n                              defaultValue={hasUpdate('English', 'thirdQuarter') ?\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3') :\r\n                                autoFillGrade('English', 'thirdQuarter', 'English3', true, '3')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('English', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"English4\"\r\n                              defaultValue={hasUpdate('English', 'fourthQuarter') ?\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4') :\r\n                                autoFillGrade('English', 'fourthQuarter', 'English4', true, '4')} />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[1] &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[1].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Filipino\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Filipino1\"\r\n                              defaultValue={hasUpdate('Filipino', 'firstQuarter') ?\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1') :\r\n                                autoFillGrade('Filipino', 'firstQuarter', 'Filipino1', true, '1')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Filipino2\"\r\n                              defaultValue={hasUpdate('Filipino', 'secondQuarter') ?\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2') :\r\n                                autoFillGrade('Filipino', 'secondQuarter', 'Filipino2', true, '2')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Filipino3\"\r\n                              defaultValue={hasUpdate('Filipino', 'thirdQuarter') ?\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3') :\r\n                                autoFillGrade('Filipino', 'thirdQuarter', 'Filipino3', true, '3')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Filipino', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Filipino4\"\r\n                              defaultValue={hasUpdate('Filipino', 'fourthQuarter') ?\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4') :\r\n                                autoFillGrade('Filipino', 'fourthQuarter', 'Filipino4', true, '4')}\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade &&\r\n                  selectedTeacherAssignedGrade.subjects &&\r\n                  selectedTeacherAssignedGrade.subjects != undefined &&\r\n                  selectedTeacherAssignedGrade.subjects.length !== 0 &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2] &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[2].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Science\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Science1\"\r\n                              defaultValue={hasUpdate('Science', 'firstQuarter') ?\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1') :\r\n                                autoFillGrade('Science', 'firstQuarter', 'Science1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Science2\"\r\n                              defaultValue={hasUpdate('Science', 'secondQuarter') ?\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2') :\r\n                                autoFillGrade('Science', 'secondQuarter', 'Science2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Science3\"\r\n                              defaultValue={hasUpdate('Science', 'thirdQuarter') ?\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3') :\r\n                                autoFillGrade('Science', 'thirdQuarter', 'Science3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Science', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Science4\"\r\n                              defaultValue={hasUpdate('Science', 'fourthQuarter') ?\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4') :\r\n                                autoFillGrade('Science', 'fourthQuarter', 'Science4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[3] &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[3].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Math\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Math1\"\r\n                              defaultValue={hasUpdate('Math', 'firstQuarter') ?\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1') :\r\n                                autoFillGrade('Math', 'firstQuarter', 'Math1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Math2\"\r\n                              defaultValue={hasUpdate('Math', 'secondQuarter') ?\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2') :\r\n                                autoFillGrade('Math', 'secondQuarter', 'Math2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Math3\"\r\n                              defaultValue={hasUpdate('Math', 'thirdQuarter') ?\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3') :\r\n                                autoFillGrade('Math', 'thirdQuarter', 'Math3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Math', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Math4\"\r\n                              defaultValue={hasUpdate('Math', 'fourthQuarter') ?\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4') :\r\n                                autoFillGrade('Math', 'fourthQuarter', 'Math4', true, 4)\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              <Row gutter={16}>\r\n                {/* {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[4] &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"MAPEH\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"MAPEH1\"\r\n                              defaultValue={hasUpdate('MAPEH', 'firstQuarter') ?\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1') :\r\n                                autoFillGrade('MAPEH', 'firstQuarter', 'MAPEH1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"MAPEH2\"\r\n                              defaultValue={hasUpdate('MAPEH', 'secondQuarter') ?\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2') :\r\n                                autoFillGrade('MAPEH', 'secondQuarter', 'MAPEH2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"MAPEH3\"\r\n                              defaultValue={hasUpdate('MAPEH', 'thirdQuarter') ?\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3') :\r\n                                autoFillGrade('MAPEH', 'thirdQuarter', 'MAPEH3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('MAPEH', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole === 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"MAPEH4\"\r\n                              defaultValue={hasUpdate('MAPEH', 'fourthQuarter') ?\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4') :\r\n                                autoFillGrade('MAPEH', 'fourthQuarter', 'MAPEH4', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col> :\r\n                  null} */}\r\n                {(isAdviser ||\r\n                  selectedTeacherAssignedGrade.subjects[5] &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher &&\r\n                  selectedTeacherAssignedGrade.subjects[5].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                  ?\r\n                  <Col span={12}>\r\n                    <Card title=\"Values\" disabled={true} style={{ width: 300 }}>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"1st Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'firstQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                              name=\"Values1\"\r\n                              defaultValue={hasUpdate('Values', 'firstQuarter') ?\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1') :\r\n                                autoFillGrade('Values', 'firstQuarter', 'Values1', true, '1')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"2nd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'secondQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                              name=\"Values2\"\r\n                              defaultValue={hasUpdate('Values', 'secondQuarter') ?\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2') :\r\n                                autoFillGrade('Values', 'secondQuarter', 'Values2', true, '2')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={16}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"3rd Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                              name=\"Values3\"\r\n                              defaultValue={hasUpdate('Values', 'thirdQuarter') ?\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '3')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"4th Q\" name=\"values\">\r\n                            <Input\r\n                              style={{ border: hasUpdate('Values', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                              disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                              name=\"Values4\"\r\n                              defaultValue={hasUpdate('Values', 'fourthQuarter') ?\r\n                                autoFillGrade('Values', 'fourthQuarter', 'Values4') :\r\n                                autoFillGrade('Values', 'thirdQuarter', 'Values3', true, '4')\r\n                              }\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  </Col>\r\n                  : null}\r\n\r\n              </Row>\r\n              {/*============================================================================ */}\r\n              {(isAdviser ||\r\n                selectedTeacherAssignedGrade.subjects[4] &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher &&\r\n                selectedTeacherAssignedGrade.subjects[4].teacher.idNumber === JSON.parse(sessionStorage.user).idNumber)\r\n                ? (\r\n                  <React.Fragment>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"Music\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Music1\"\r\n                                  defaultValue={hasUpdate('Music', 'firstQuarter') ?\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1') :\r\n                                    autoFillGrade('Music', 'firstQuarter', 'Music1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Music2\"\r\n                                  defaultValue={hasUpdate('Music', 'secondQuarter') ?\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2') :\r\n                                    autoFillGrade('Music', 'secondQuarter', 'Music2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Music3\"\r\n                                  defaultValue={hasUpdate('Music', 'thirdQuarter') ?\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3') :\r\n                                    autoFillGrade('Music', 'thirdQuarter', 'Music3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Music', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Music4\"\r\n                                  defaultValue={hasUpdate('Music', 'fourthQuarter') ?\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4') :\r\n                                    autoFillGrade('Music', 'fourthQuarter', 'Music4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Art\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Art1\"\r\n                                  defaultValue={hasUpdate('Art', 'firstQuarter') ?\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1') :\r\n                                    autoFillGrade('Art', 'firstQuarter', 'Art1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Art2\"\r\n                                  defaultValue={hasUpdate('Art', 'secondQuarter') ?\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2') :\r\n                                    autoFillGrade('Art', 'secondQuarter', 'Art2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Art3\"\r\n                                  defaultValue={hasUpdate('Art', 'thirdQuarter') ?\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Art', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Art4\"\r\n                                  defaultValue={hasUpdate('Art', 'fourthQuarter') ?\r\n                                    autoFillGrade('Art', 'fourthQuarter', 'Art4') :\r\n                                    autoFillGrade('Art', 'thirdQuarter', 'Art4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                      <Col span={12}>\r\n                        <Card title=\"PE\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"PE1\"\r\n                                  defaultValue={hasUpdate('PE', 'firstQuarter') ?\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1') :\r\n                                    autoFillGrade('PE', 'firstQuarter', 'PE1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"PE2\"\r\n                                  defaultValue={hasUpdate('PE', 'secondQuarter') ?\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2') :\r\n                                    autoFillGrade('PE', 'secondQuarter', 'PE2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"PE3\"\r\n                                  defaultValue={hasUpdate('PE', 'thirdQuarter') ?\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3') :\r\n                                    autoFillGrade('PE', 'thirdQuarter', 'PE3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('PE', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"PE4\"\r\n                                  defaultValue={hasUpdate('PE', 'fourthQuarter') ?\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4') :\r\n                                    autoFillGrade('PE', 'fourthQuarter', 'PE4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Card title=\"Health\" disabled={true} style={{ width: 300 }}>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"1st Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'firstQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"1\"}\r\n                                  name=\"Health1\"\r\n                                  defaultValue={hasUpdate('Health', 'firstQuarter') ?\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1') :\r\n                                    autoFillGrade('Health', 'firstQuarter', 'Health1', true, '1')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"2nd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'secondQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"2\"}\r\n                                  name=\"Health2\"\r\n                                  defaultValue={hasUpdate('Health', 'secondQuarter') ?\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2') :\r\n                                    autoFillGrade('Health', 'secondQuarter', 'Health2', true, '2')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row gutter={16}>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"3rd Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'thirdQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"3\"}\r\n                                  name=\"Health3\"\r\n                                  defaultValue={hasUpdate('Health', 'thirdQuarter') ?\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3') :\r\n                                    autoFillGrade('Health', 'thirdQuarter', 'Health3', true, '3')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                              <Form.Item label=\"4th Q\" name=\"values\">\r\n                                <Input\r\n                                  style={{ border: hasUpdate('Health', 'fourthQuarter') ? '1px solid red' : '' }}\r\n                                  disabled={userRole !== 'Teacher' || sessionStorage.quarter !== \"4\"}\r\n                                  name=\"Health4\"\r\n                                  defaultValue={hasUpdate('Health', 'fourthQuarter') ?\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4') :\r\n                                    autoFillGrade('Health', 'fourthQuarter', 'Health4', true, '4')\r\n                                  }\r\n                                />\r\n                              </Form.Item>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </React.Fragment>\r\n                ) : ('')}\r\n              {/*============================================================================ */}\r\n            </>\r\n            {userRole === 'Teacher' ? (\r\n              <Button className=\"btn-save\" htmlType=\"submit\">\r\n                <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\" : \"Save\"}\r\n              </Button>\r\n            ) : ('')}\r\n          </Form>\r\n        </Spin>\r\n      )}\r\n    />\r\n\r\n  );\r\n}\r\n\r\nexport default Grade1EditForm;\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeepingService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\index.js",[],["387","388"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userSetting.js",["389","390"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Space, message } from 'antd';\r\n\r\nimport userService from './userService';\r\n\r\nconst Settings = () => {\r\n  let password = '';\r\n  let newPassword = '';\r\n  let confirmPassword = '';\r\n  \r\n  const changePassword = async () => {\r\n    if (password === '' || newPassword === '' || confirmPassword === '') {\r\n      return message.error('All fields are required.', 3);\r\n    };\r\n    \r\n     if (newPassword !== confirmPassword) {\r\n      return message.error('New password and confirm must match.', 3);\r\n    };\r\n    \r\n    let user = JSON.parse(sessionStorage.user);\r\n    let body = {\r\n      idNumber: user.idNumber,\r\n      currentPassword: password,\r\n      newPassword: newPassword\r\n    };\r\n    try {\r\n      let response = await userService.updatePassword(body);\r\n      if (response && response.status === 200) {\r\n        return message.success('Password updated', 3);\r\n      };\r\n    } catch (error) {\r\n      return message.error('Unable to update password', 3);\r\n    };\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\" style={{textAlign: 'center'}}>\r\n     <Row className=\"mt-15\">\r\n       <Col lg={{ span: 6, offset: 9  }}>\r\n         <Typography.Title level={3} className=\"ml-15\">Setting</Typography.Title>\r\n       </Col>\r\n     </Row>\r\n      <form onSubmit={() => changePassword()}>\r\n        <Row className=\"mt-15\">\r\n          <Col lg={{ span: 6, offset: 9 }}>\r\n            <Input placeholder=\"Old Password\" type=\"password\" onChange={(e) => password = e.target.value}/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n           <Input placeholder=\"New Password\" type=\"password\" onChange={(e) => newPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row className=\"mt-15\">\r\n         <Col lg={{ span: 6, offset: 9 }}>\r\n          <Input placeholder=\"Confirm Password\" type=\"password\" onChange={(e) => confirmPassword = e.target.value}/>\r\n         </Col>\r\n       </Row>\r\n       <Row style={{marginTop: '15px'}}>\r\n        <Col lg={{ span: 6, offset: 9 }}>\r\n         <Space align=\"center\">\r\n           <Button  className=\"addUser btn-add\" onClick={()=> changePassword()}>\r\n            Change Password\r\n          </Button>\r\n         </Space>\r\n        </Col>\r\n       </Row>\r\n      </form>\r\n    </Card>     \r\n  );\r\n}\r\n\r\nexport default Settings;\r\n",["391","392"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\login\\login.js",["393","394","395","396","397","398","399"],"import React, { useState, useEffect } from 'react';\r\nimport { Layout, Row, Col, Typography, message, Button } from 'antd';\r\n\r\nimport '../../App.css';\r\nimport LoginForm from './loginForm';\r\nimport UserAction from '../user/userAction'\r\n\r\nconst version = process.env.REACT_APP_VERSION\r\n\r\n\r\nconst Login = () => {\r\n    let [showLogin, setShowLogin] = useState(false);\r\n    let [showContact, setShowContact] = useState(false);\r\n    let [showAboutUs, setShowAboutUs] = useState(false);\r\n    let [showHome, setShowHome] = useState(true);\r\n    const {Content} = Layout;\r\n    let {\r\n        login,\r\n        loginCounter\r\n      } = UserAction({});\r\n    \r\n    const loginUser = async (credentials) => {\r\n        login(credentials);\r\n    }\r\n\r\n    const loginFunction = async () => {\r\n        setShowHome(false)\r\n        setShowLogin(true)\r\n    }\r\n\r\n    const contactFunction = async () => {\r\n        setShowHome(false)\r\n        setShowContact(true)\r\n    }\r\n\r\n    const aboutUsFunction = async () => {\r\n        setShowHome(false)\r\n        setShowAboutUs(true)\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"login\">\r\n            {/* Landing Page */}\r\n            {showHome ? <Content className=\"contentLogin bg-homepage\">\r\n                <Row className=\"center\">\r\n                    <Col>\r\n                        <Button className=\"btn-home mr-10\">HOME</Button>\r\n                        <Button className=\"btn-about mr-10\" onClick={()=> aboutUsFunction()}>ABOUT US</Button>\r\n                        <Button className=\"btn-contact mr-10\" onClick={()=>contactFunction()}>CONTACT</Button>\r\n                        <Button className=\"btnLogin\" onClick={()=>loginFunction()}>LOGIN</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Content> : null}\r\n            \r\n\r\n            {/* Login Page */}\r\n            {showLogin \r\n            \r\n            ?             <Content className=\"contentLogin mt-5P\">\r\n            <div className=\"center mb-15\">\r\n                <img className=\"center\" width={120} src=\"./ts.png\"/><br/>\r\n            </div>\r\n            <b className=\"center fs-20\">WELCOME TO</b><br/>\r\n            <Typography.Title className=\"text-center\">THE STO. NINO THE SHEPHERD SCHOOL</Typography.Title>\r\n            <Row className=\"mt-10 center\">\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 4 }} lg={{ span: 4 }}>\r\n                    <LoginForm login={loginUser}/>\r\n                </Col>\r\n            </Row>\r\n        </Content> : null}\r\n\r\n\r\n             {/* Contact Page */}\r\n            {showContact ?            <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center mb-40\">\r\n                    <img className=\"center\" src=\"./contact.png\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    <b>Telephone Number:</b> 8 245 4148<br/>\r\n                    <b>FB Page:</b> SnssYour HomeSchool<br/>\r\n                    <b>Email Address: </b>\r\n                    <u className=\"blue\">\r\n                        admission.snss@gmail.com\r\n                    </u>\r\n                </Typography>\r\n            </Content>:null}\r\n \r\n\r\n\r\n            {/* About Page */}\r\n            {showAboutUs ?  <Content className=\"contentLogin mt-35\">\r\n                <div className=\"center h-70 mb-35\">\r\n                    <img className=\"center w-90P\" src=\"./about.jpg\"/><br/>\r\n                </div>\r\n                <Typography className=\"text-center\">\r\n                    In 1987 St. Niño the shepherd school was established by Mrs. Garcia Villaafuerte, it is the school's aim<br/>\r\n                    that each student reaches his/her full potential academically but also personally, socially, emotionally<br/>\r\n                    physically and spiritually in preparation for becoming responsible cetizens of the future. This is achieved <br/>\r\n                    by giving pupils equal access to a program of education that is tailored to meet their individual needs. <br/>\r\n                    And giving them access to a wide range of extra-curricular activities. Central to the school's vision is the<br/>\r\n                    belief that students must be taught respect for themselves, for others and for the invironment in which they live. \r\n                </Typography>\r\n            </Content> : null}\r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\student.js",["400","401","402","403","404","405"],"import React, { useState } from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input, Upload } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined, PlusOutlined, LoadingOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm';\r\nimport AdvisoryAction from '../grade/advisoryAction';\r\n\r\nimport UserAction from './userAction';\r\nimport AdditionalService from './additionalService';\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction';\r\nimport UploadImageAction from './imageUpload';\r\n\r\nimport UserTable from './userTable';\r\n\r\nconst EmployeePage = ({ isAdvisory }) => {\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    studentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterStudent\r\n  } = UserAction({});\r\n\r\n  let {\r\n    advisoryStudents,\r\n    loadAdvisoryStudents\r\n  } = AdvisoryAction({});\r\n\r\n  let {\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  let {\r\n    handleChange,\r\n    saveUpload,\r\n    profileSrc,\r\n    beforeUpload,\r\n    uploadSrc,\r\n    loading,\r\n    processing,\r\n    setProfileSrc,\r\n    setUploadSrc\r\n  } = UploadImageAction();\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  if ( showUserVisible && selectedUser && selectedUser.profileImgSrc) { profileSrc = selectedUser.profileImgSrc};\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\r\n        </Col>\r\n        {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n          <>\r\n            <Col lg={{ span: 6 }}>\r\n              <Input placeholder=\"Search\" onChange={(e) => filterStudent(e.target.value)} />\r\n              {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n          </Button> */}\r\n            </Col>\r\n            <Button className=\"addUser btn-add\" onClick={() => showUser()}>\r\n              <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n        </Button>\r\n          </>\r\n          : null}\r\n\r\n      </Row>\r\n      <Row>\r\n        <Col lg={{ span: \"24\" }}>\r\n          <UserTable details={isAdvisory ? advisoryStudents : studentList} />\r\n        </Col>\r\n      </Row>\r\n      <Drawer\r\n        title={\r\n          <Typography.Title level={4}>\r\n            {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n          </Typography.Title>\r\n        }\r\n        width={550}\r\n        visible={showUserVisible}\r\n        onClose={() => { setShowUserVisible(false); setProfileSrc(''); setUploadSrc(''); }}\r\n        bodyStyle={{ paddingBottom: 80 }}\r\n      >\r\n        <div style={{ textAlign: \"right\", marginRight: \"23px\" }}>\r\n          <Upload\r\n            name=\"avatar\"\r\n            listType=\"picture-card\"\r\n            className=\"avatar-uploader\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={(info) => handleChange(info)}\r\n          >\r\n            {(uploadSrc || profileSrc) ? <img src={uploadSrc !== '' ? uploadSrc : profileSrc} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n          </Upload>\r\n          {uploadSrc ?\r\n            <Button\r\n              onClick={() => { saveUpload(selectedUser.idNumber) }}\r\n              style={{ marginRight: \"7px\" }}\r\n              icon={processing ? <LoadingOutlined /> : <UploadOutlined />}\r\n            >Save</Button> : ''}\r\n        </div>\r\n        <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Student' isNewData=\"false\" />\r\n      </Drawer>\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryForm.js",["406","407","408","409","410"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\clearance\\clearanceAction.js",["411","412"],"import React, { useState, useEffect } from 'react';\r\nimport clearanceService from './clearanceService';\r\nimport gradesService from '../grade/gradesService';\r\nimport { CLEARANCE_DROPDOWN } from '../../constants/clearance';\r\n\r\n\r\nconst ClearanceAction = (initial = {}) => {\r\n  let [levelClearance, setLevelClearance] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let [levelToEdit, setLevelToEdit] = useState('');\r\n\r\n  const getIndividualRec = async (list = [], idNumber = '') => {\r\n    if (list.length === 0) return null;\r\n    let record = await list.find(item => item.idNumber === idNumber);\r\n    return record;\r\n  };\r\n\r\n  const getClearance = async ({ level }) => {\r\n    try {\r\n      setLevelToEdit(level);\r\n      setLoading(true);\r\n      let responseGradeRecords = await gradesService.findAllGrades(level);\r\n      responseGradeRecords = responseGradeRecords.data;\r\n      let responseClearance = await clearanceService.getClearance(level);\r\n      let clearanceData = [];\r\n\r\n      if (responseGradeRecords.length > 0) {\r\n        await responseGradeRecords.map(async (item, key) => {\r\n          let record = await getIndividualRec(responseClearance.data?.students, item.student.idNumber);\r\n          console.log(record);\r\n          let studentName = `${item.student.lastName}, ${item.student.firstName} ${item.student.middleName}`;\r\n          let studentObj = {\r\n            key: 'student' + item.student.idNumber,\r\n            id: 'student' + item.student.idNumber,\r\n            studentName: studentName,\r\n            idNumber: item.student.idNumber,\r\n            firstQuarter: record ? record.firstQuarter : '',\r\n            secondQuarter: record ? record.secondQuarter : '',\r\n            thirdQuarter: record ? record.thirdQuarter : '',\r\n            fourthQuarter: record ? record.fourthQuarter : '',\r\n            dropdownList: CLEARANCE_DROPDOWN\r\n          };\r\n\r\n          clearanceData.push(studentObj);\r\n        });\r\n      };\r\n\r\n      setTimeout(() => {\r\n        setLevelClearance(clearanceData);\r\n        setLoading(false);\r\n      }, 1000);\r\n    } catch (error) { };\r\n  };\r\n\r\n  const addUpdateLvlClearance = async (values) => {\r\n    setLevelClearance(values);\r\n    setLoading(true);\r\n    let students = values.map(item => {\r\n      return {\r\n        idNumber: item.idNumber,\r\n        firstQuarter: item.firstQuarter,\r\n        secondQuarter: item.secondQuarter,\r\n        thirdQuarter: item.thirdQuarter,\r\n        fourthQuarter: item.fourthQuarter,\r\n      }\r\n    })\r\n    let paramsObj = {\r\n      gradeLevel: levelToEdit,\r\n      students: students\r\n    };\r\n\r\n    let data = await clearanceService.addUpdateClearance(paramsObj);\r\n    console.log(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  return {\r\n    getClearance,\r\n    loading,\r\n    levelClearance,\r\n    addUpdateLvlClearance\r\n  }\r\n};\r\n\r\nexport default ClearanceAction;","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\constants\\clearance.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\attendanceService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\config.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\dashboard\\dashboard.js",["413","414","415","416","417","418","419","420"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Modal, Form, Input, message } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport DashboardAtion from \"../dashboard/dashboardAction\";\r\nimport { SchoolDaysTmp } from '../modelTemplate/schoolDay';\r\nimport AttendanceAction from '../userDetails/attendanceAction';\r\n\r\nconst DashboardPage = () => {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [form] = Form.useForm();\r\n  const { getSchoolDays, schoolDays, saveSchoolDays } = AttendanceAction();\r\n  let schoolDaysObj = JSON.parse(JSON.stringify(SchoolDaysTmp));\r\n\r\n  getSchoolDays();\r\n\r\n  const loadSchoolDays = () => { \r\n    let daysOfSchool = (schoolDays) ?\r\n      Object.assign(schoolDaysObj, schoolDays) :\r\n      schoolDaysObj;\r\n\r\n      return daysOfSchool;\r\n  }; \r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  let {\r\n    userDetails\r\n  } = DashboardAtion({});\r\n\r\n\r\n  const getFields = () => {\r\n    const count = 12;\r\n    const children = [];\r\n\r\n    Object.keys(SchoolDaysTmp).map((month, key)=> {\r\n      children.push(\r\n        <Col span={8} key={key}>\r\n          <Form.Item\r\n            name={month}\r\n            label={month}\r\n          >\r\n            <Input placeholder=\"\"/>\r\n          </Form.Item>\r\n        </Col>,\r\n      );\r\n    });\r\n\r\n    return children;\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Received values of form: ', values);\r\n\r\n    if (Object.values(values).length > 0) {\r\n      let total = Object.values(values).map(monthDays => { \r\n        return parseInt(monthDays)\r\n      }).reduce((a,b) => a + b, 0);\r\n      \r\n      let newValues = Object.assign(values, { total: total });\r\n      console.log(newValues);\r\n\r\n      await saveSchoolDays(newValues);\r\n      setTimeout(() => {setVisible(false)}, 2000);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"site-card-wrapper\">\r\n      <Row gutter={16}>\r\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }}>\r\n          <Card className=\"bg-gray\" title=\"Total Number Of Students\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfStudents}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card className=\"bg-skyblue\" title=\"Total Number Of Parents\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfParents}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card className=\"bg-orange\" title=\"Total Number Of Teachers\" bordered={false}>\r\n            <span className=\"dashboard-padding\">\r\n              {userDetails.numberOfTeachers}\r\n            </span>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={{ span: 8 }} sm={{ span: 8 }} md={{ span: 8 }} lg={{ span: 8 }} >\r\n          <Card title=\"School Days\" bordered={false} style={{ width: '98%', marginTop: '20px' }}>\r\n            <Button type=\"primary\" onClick={showModal} style={{ marginLeft: '10px', marginBottom: '5px', marginTop: '5px' }}>\r\n              Input School Days\r\n            </Button>\r\n            <Modal\r\n              title=\"School Days\"\r\n              visible={visible}\r\n              onCancel={handleCancel}\r\n              footer={null}\r\n            >\r\n              <Form\r\n                form={form}\r\n                name=\"advanced_search\"\r\n                className=\"ant-advanced-search-form\"\r\n                onFinish={onFinish}\r\n                initialValues={loadSchoolDays()}\r\n              >\r\n                <Row gutter={24}>{getFields()}</Row>\r\n                <Row>\r\n                  <Col span={24} style={{textAlign: 'center'}} >\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      style={{ margin: '0 8px'}}\r\n                      onClick={() => {\r\n                        form.resetFields();\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Modal>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userService.js",[],["421","422"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\login\\loginForm.js",["423","424"],"import React from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\n\r\nconst LoginForm = ({login}) => {\r\n   return (\r\n      <Formik\r\n         initialValues={{\r\n            username: \"\",\r\n            password: \"\"\r\n         }}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values, actions) => {\r\n             login(values)\r\n            // await login(values)\r\n            // actions.setSubmitting(false);\r\n         }}\r\n         render={\r\n            ({ values, errors, touched, setFieldValue, isSubmitting }) => (\r\n               <Spin spinning={isSubmitting}>\r\n                  <Form className=\"mt-10P\">\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              USERNAME:\r\n                           </b>\r\n                           <Form.Item name=\"username\">\r\n                              <Input name=\"username\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <b className=\"center\">\r\n                              PASSWORD:\r\n                           </b>\r\n                           <Form.Item name=\"password\">\r\n                              <Input.Password name=\"password\" />\r\n                           </Form.Item>\r\n                        </Col>\r\n                     </Row>\r\n                     <Row>\r\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }}>\r\n                           <Button type=\"dark\" className=\"btn-login\" htmlType=\"Submit\">\r\n                              Login\r\n                        </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </Spin>\r\n            )}\r\n      />\r\n   );\r\n}\r\n\r\nexport default LoginForm;",["425","426"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\dashboard\\dashboardAction.js",["427"],"import React, { useState, useEffect } from 'react';\r\nimport userService from '../user/userService';\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( \r\n      {numberOfStudents : 0, \r\n      numberOfTeachers: 0,\r\n      numberOfParents : 0}\r\n      );\r\n\r\n  const getListOfUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let parent = response.data.filter(user => user.role === \"Parent\");\r\n    let student = response.data.filter(user => user.role === \"Student\");\r\n    let teacher = response.data.filter(user => user.role === \"Teacher\");\r\n    setUserDetails({\r\n        numberOfParents: parent.length,\r\n        numberOfStudents : student.length, \r\n        numberOfTeachers: teacher.length\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListOfUsers();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    userDetails\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\baseService.js",[],["428","429"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradesService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\parent.js",["430","431","432"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    parentList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterParent\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Parent List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterParent(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col className=\"userTable\" lg={{ span: \"24\" }}>\r\n        <UserTable details={parentList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Parent' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade6.js",["433","434","435","436","437","438","439","440"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\quarter\\quarterService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeeping.js",["441","442","443","444","445","446"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport TimekeepingTable from './timeKeepingTable'\r\nimport AttendanceAction from './AttendanceAction'\r\nconst {Option} = Select;\r\n\r\nconst TimekeepingPage = () => {\r\n    let{\r\n        userDetails  ,\r\n        filterUsers\r\n    } = AttendanceAction({});\r\n  \r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Row className=\"mt-15\">\r\n        <Col lg={{ span: 14 }}>\r\n          <Typography.Title level={3} className=\"ml-15\">Student Attendance</Typography.Title>\r\n        </Col>\r\n        <Col lg={{ span: 6 }}>\r\n        <DatePicker className=\"w-100P\" placeholder={\"Input Date Here\"} onChange={(date, dateString)=>filterUsers(date)} />\r\n        {/* <Select name=\"Month\" placeholder=\"Month\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"January\">January</Option>\r\n          <Option value=\"Febuary\">Febuary</Option>\r\n          <Option value=\"March\">March</Option>\r\n          <Option value=\"April\">April</Option>\r\n          <Option value=\"May\">May</Option>\r\n          <Option value=\"June\">June</Option>\r\n          <Option value=\"July\">July</Option>\r\n          <Option value=\"August\">August</Option>\r\n          <Option value=\"September\">September</Option>\r\n          <Option value=\"October\">October</Option>\r\n          <Option value=\"November\">November</Option>\r\n          <Option value=\"December\">December</Option>\r\n        </Select>\r\n        <Select name=\"Day\" placeholder=\"Day\" onChange={(value)=> console.log(value)}>\r\n          <Option value=\"1\">1</Option>\r\n          <Option value=\"2\">2</Option>\r\n          <Option value=\"3\">3</Option>\r\n          <Option value=\"4\">4</Option>\r\n          <Option value=\"5\">5</Option>\r\n          <Option value=\"6\">6</Option>\r\n          <Option value=\"7\">7</Option>\r\n          <Option value=\"8\">8</Option>\r\n          <Option value=\"9\">9</Option>\r\n          <Option value=\"10\">10</Option>\r\n          <Option value=\"11\">11</Option>\r\n          <Option value=\"12\">12</Option>\r\n          <Option value=\"13\">13</Option>\r\n          <Option value=\"14\">14</Option>\r\n          <Option value=\"15\">15</Option>\r\n          <Option value=\"16\">16</Option>\r\n          <Option value=\"17\">17</Option>\r\n          <Option value=\"18\">18</Option>\r\n          <Option value=\"19\">19</Option>\r\n          <Option value=\"20\">20</Option>\r\n          <Option value=\"21\">21</Option>\r\n          <Option value=\"22\">22</Option>\r\n          <Option value=\"23\">23</Option>\r\n          <Option value=\"24\">24</Option>\r\n          <Option value=\"25\">25</Option>\r\n          <Option value=\"26\">26</Option>\r\n          <Option value=\"27\">27</Option>\r\n          <Option value=\"28\">28</Option>\r\n          <Option value=\"29\">29</Option>\r\n          <Option value=\"30\">30</Option>\r\n          <Option value=\"31\">31</Option>\r\n        </Select>\r\n        <Input placeholder=\"Year\" name=\"Year\" onChange={(e)=>console.log(e.target.value)}></Input> */}\r\n        </Col>\r\n        {/* <Button className=\"right ml-10\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <DeleteOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <TimekeepingTable details={userDetails.list} />\r\n      </Col>\r\n    </Row>\r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default TimekeepingPage;\r\n\r\n",["447","448"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userTable.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\valuesTable.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradeAction.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradeInputAction.js",["465","466","467","468"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\gradesInput.js",["469","470"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\modelTemplate\\subjects.js",["471"],"const G_1_To_3 = [\r\n  'Mother Tongue',\r\n  'Filipino',\r\n  'English',\r\n  'Mathematics',\r\n  'Science',\r\n  'Araling Panlipunan',\r\n  'Music',\r\n  'Art',\r\n  'PE',\r\n  'Health'\r\n];\r\n\r\nconst G_4_To_10 = [\r\n  'Filipino',\r\n  'English',\r\n  'Mathematics',\r\n  'Science',\r\n  'Araling Panlipunan',\r\n  'TLE',\r\n  'Music',\r\n  'Art',\r\n  'PE',\r\n  'Health'\r\n];\r\n\r\nlet quartersObj = {\r\n  firstQuarter: 0,\r\n  secondQuarter: 0,\r\n  thirdQuarter: 0,\r\n  fourthQuarter: 0\r\n};\r\n\r\nconst buildLevelSubjects = (levelNum, schoolYear) => {\r\n  let subjectList = (levelNum > 3) ? G_4_To_10 : G_1_To_3;\r\n\r\n  let subjects = subjectList.map(topic => {\r\n    return {\r\n      subjectName: topic,\r\n      subjectGrade: quartersObj,\r\n      recommendedGrade: {}\r\n    };\r\n  });\r\n\r\n  return subjects;\r\n};\r\n\r\nconst getSubjects = levelNum => {\r\n  let subjectList = (levelNum > 3) ? G_4_To_10 : G_1_To_3;\r\n  return subjectList;\r\n};\r\n\r\nexport default { buildLevelSubjects,  getSubjects};\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade4.js",["472","473","474","475","476","477","478","479"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade2.js",["480","481","482","483","484","485","486","487","488","489"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\userDetails.js",["490","491","492","493","494","495","496","497","498","499"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, Spin, notification } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport UserForm from './userDetailsForm'\r\nimport UserTable from './gradeTable'\r\nimport GradeAction from '../grade/gradeAction'\r\nimport AdvisorAction from '../grade/advisoryAction'\r\nimport AttendanceTable from './attendanceTable';\r\nimport AttendanceAction from './attendanceAction';\r\nimport ValuesTable from './valuesTable';\r\nimport CustomTable from '../shared/customTable';\r\nimport {\r\n  DESCRIPTOR_TABLE,\r\n  MARKING_TABLE,\r\n  OBSERVED_VALUES_HEADER\r\n} from '../modelTemplate/observedValues';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst EmployeePage = ({ isParent = false }) => {\r\n\r\n  let {\r\n    selectedGrade,\r\n    gradeDetails, //child or children list\r\n    selectedUserGrade,\r\n    selectedUser,\r\n    studentAdvisor,\r\n    filterCurrentGradeUser,\r\n    loading,\r\n    overAllGrade,\r\n    observedValues,\r\n  } = GradeAction({});\r\n\r\n  let { getAttendance, attendances } = AttendanceAction();\r\n\r\n  let loadAttendance = async () => {\r\n    let user = JSON.parse(sessionStorage.user);\r\n    await getAttendance(user.idNumber);\r\n  };\r\n\r\n  if (attendances.length === 0) loadAttendance();\r\n\r\n  const filterChild = async ({idNumber='', gradeLevel=''}) => {\r\n    let student = (idNumber !=='') ? gradeDetails.list.find(student => student.idNumber === idNumber) : selectedUser;\r\n    let level = (gradeLevel !=='') ? gradeLevel : student.gradeLevel;\r\n    await filterCurrentGradeUser({ gradeLevel: level, studentObj: student });\r\n  };\r\n\r\n  const renderChildrenDropdown = () => {\r\n    return gradeDetails.list.map((child) => {\r\n      return <Option value={child.idNumber} key={child.idNumber}>\r\n        {child.firstName + \" \" + child.lastName}\r\n      </Option>\r\n    })\r\n  };\r\n\r\n  const renderChildLevels = () => {\r\n    return selectedUser.gradeLevelList.map((level) => {\r\n      return <Option value={level} key={level} >{level}</Option>\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n      <Spin spinning={loading} delay={0}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Student Details</Typography.Title>\r\n            }>\r\n              <Row>\r\n                <Col span={12}>\r\n                  <p>\r\n             \r\n                    <b>Full Name: </b>\r\n                    {isParent ?\r\n                      (\r\n                        <Select\r\n                          id=\"studentSelect\"\r\n                          className=\"ml-15\"\r\n                          placeholder=\"\"\r\n                          value={selectedUser.idNumber}\r\n                          onChange={(value) => { filterChild({idNumber: value}) }}\r\n                          style={{ width: '300px' }}>\r\n                          { renderChildrenDropdown()}\r\n                        </Select>\r\n                      ) :\r\n                      <>\r\n                        {selectedUser.firstName ? selectedUser.firstName + \" \" + selectedUser.lastName : null}\r\n                      </>\r\n                    }\r\n                  </p>\r\n                  <p>\r\n                    <b>Grade Level: </b>{selectedUser.gradeLevel ? selectedUser.gradeLevel : JSON.parse(sessionStorage.user).gradeLevel}\r\n                  </p>\r\n                  <p>\r\n                    <b>Section: </b>{selectedUser ? selectedUser.section : null}\r\n                  </p>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <p>\r\n                    <b>Advisor Name: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.firstName + \" \" + studentAdvisor.teacher.lastName : null}\r\n                  </p>\r\n                  <p>\r\n                    <b>Advisor Contact Number: </b>{studentAdvisor && studentAdvisor.teacher ? studentAdvisor.teacher.contactNumber : null}\r\n                  </p>\r\n                  <b>Yr./Lvl: </b>\r\n                  <Select \r\n                    className=\"ml-15\"\r\n                    value={selectedUser.gradeLevel}\r\n                    style={{ width: '70px' }}\r\n                    onChange={(value) => filterCurrentGradeUser({studentObj: selectedUser, gradeLevel: value })}>\r\n                    { selectedUser.gradeLevelList ? renderChildLevels() : ''}\r\n                  </Select>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <UserTable details={selectedUserGrade ? selectedUserGrade : []} />\r\n          </Col>\r\n          <Row>\r\n            <Typography.Title level={5}\r\n              style={{ marginLeft: '20px', paddingBottom: '50px', marginTop: '15px', textAlign: 'left' }} lg={{ span: \"24\" }}>\r\n              General Average :\r\n              {overAllGrade ? (\r\n                <>\r\n                  <span style={{\r\n                    marginLeft: '15px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.finalGrade}</span>\r\n                  <span style={{\r\n                    marginLeft: '10px', color: (overAllGrade.finalGrade < 75) ?\r\n                      'red' : ''\r\n                  }}>{overAllGrade.remarks}</span>\r\n                </>\r\n              ) : ('')}\r\n            </Typography.Title>\r\n          </Row>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Attendance Record</Typography.Title>\r\n            }>\r\n              <AttendanceTable details={attendances}></AttendanceTable>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }}>\r\n            <Card className=\"ml-15\" title={\r\n              <Typography.Title>Learner's Observed Values</Typography.Title>\r\n            }>\r\n              <CustomTable details={observedValues ? observedValues : []} headers={OBSERVED_VALUES_HEADER}></CustomTable>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: \"24\" }} className=\"mt-15\">\r\n            <Row>\r\n              <Col lg={{ span: \"12\" }}>\r\n                <Card className=\"ml-15\">\r\n                  <CustomTable details={DESCRIPTOR_TABLE.body} headers={DESCRIPTOR_TABLE.headers}></CustomTable>\r\n                </Card>\r\n              </Col>\r\n              <Col lg={{ span: \"12\" }}>\r\n                <Card className=\"ml-15\">\r\n                  <CustomTable details={MARKING_TABLE.body} headers={MARKING_TABLE.headers}></CustomTable>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    </Card >\r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade8.js",["500","501","502","503","504","505","506","507"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade7.js",["508","509","510","511","512","513","514","515"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\shared\\customTable.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrailTable.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\reportWebVitals.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\clearance\\clearance.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userForm.js",["516","517","518","519","520"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\gradeTable.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\shared\\editableTable.js",["521","522","523"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './custom.css';\r\nimport { Table, Popconfirm, Form, Typography, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const renderMarkings = (list=[]) => {\r\n    return list.map((mark) => {\r\n      return <Option value={mark} key={mark} >{mark}</Option>\r\n    });\r\n  };\r\n  const inputNode = (list=[]) => {\r\n    return (\r\n      <Select style={{ minWidth: \"65.8px\", maxWidth: \"150px\" }}>\r\n        {renderMarkings(list)};\r\n      </Select>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n        >\r\n          {inputNode(record?.dropdownList)}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = ({ details = [], headers = [], setData }) => {\r\n  const [form] = Form.useForm();\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      q1: '',\r\n      q2: '',\r\n      q3: '',\r\n      q4: '',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...details];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        await setData(newData);\r\n\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        await setData(newData);\r\n\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const operationColumn = {\r\n    title: 'operation',\r\n    dataIndex: 'operation',\r\n    render: (_, record) => {\r\n      const editable = isEditing(record);\r\n      return editable ? (\r\n        <span>\r\n          <a\r\n            href=\"javascript:;\"\r\n            onClick={() => save(record.key)}\r\n            style={{\r\n              marginRight: 8,\r\n            }}\r\n          >\r\n            Save\r\n          </a>\r\n          <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n            <a>Cancel</a>\r\n          </Popconfirm>\r\n        </span>\r\n      ) : (\r\n        <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n          Edit\r\n        </Typography.Link>\r\n      );\r\n    },\r\n  };\r\n\r\n  const columns = headers.concat([operationColumn]);\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    };\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n        style: { color: (col.withCondition) ? col.withCondition(record[col.dataIndex]) : '' }\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={details}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditableTable;","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\clearance\\clearanceService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade1.js",["524","525","526","527","528","529","530","531","532"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\userAction.js",["533","534","535","536","537","538","539","540","541","542","543","544","545"],"import React, { useState, useEffect } from 'react';\r\nimport userService from './userService';\r\nimport gradesService from '../grade/gradesService';\r\nimport quarterService from '../quarter/quarterService'\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport AdditionalService from './additionalService';\r\n\r\nconst UserAction = (initial = { searchRequest: {} }) => {\r\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\r\n  let [adminList, setAdminList] = useState([])\r\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\r\n  let [parentList, setParentList] = useState([])\r\n  let [studentList, setStudentList] = useState([])\r\n  let [teacherList, setTeacherList] = useState([])\r\n  let [showUserVisible, setShowUserVisible] = useState(false);\r\n  let [selectedUser, setSelectedUser] = useState({});\r\n  let [selectedParent, setSelectedParent] = useState([]);\r\n\r\n  let [loginCounter, setLoginCounter] = useState(false);\r\n\r\n  const addUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Add User\",\r\n      date:new Date()\r\n    }\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.add(values)\r\n    .then(function (res) {\r\n      if(values.role === \"Student\"){\r\n        let gradeObj = {\r\n          status: true,\r\n          student: values,\r\n          gradeLevel: values.gradeLevel,\r\n          section: values.section,\r\n          schoolYear : values.schoolYear,\r\n          subjects: [{\r\n              subjectName: \"English\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Filipino\",\r\n              subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Science\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Math\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"MAPEH\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          },\r\n          {\r\n            schoolYear : values.schoolYear,\r\n              subjectName: \"Values\",\r\n                subjectGrade: {\r\n                firstQuarter: 0,\r\n                secondQuarter: 0,\r\n                thirdQuarter: 0,\r\n                fourthQuarter: 0\r\n            }\r\n          }]\r\n      }\r\n      let response = gradesService.add(gradeObj)\r\n      }\r\n    \r\n        \r\n        setSelectedUser({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            employeeNumber: \"\",\r\n            department: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n        window.location.reload(false);\r\n    })\r\n  };\r\n\r\n  const editUser = async values => {\r\n    let auditTrailObj = {\r\n      user: JSON.parse(sessionStorage.user),\r\n      activity : \"Edit User\",\r\n      date:new Date()}\r\n    if(values.parentId){\r\n      let parent = await userService.findyById(values.parentId)\r\n      values.parent = parent.data;\r\n    }\r\n    let response = await userService.update(values)\r\n    .then(function (res) {\r\n        setSelectedUser({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          middleName: \"\",\r\n          idNumber: \"\",\r\n          gender: \"\",\r\n          birthDate: \"\",\r\n          birthPlace: \"\",\r\n          age: \"\",\r\n          contactNumber: \"\",\r\n          email: \"\",\r\n          status: \"\",\r\n          })\r\n        setShowUserVisible(false)\r\n        loadUsers()\r\n    })\r\n  };\r\n\r\n  const getListOfParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    setSelectedParent(result)\r\n  };\r\n\r\n  const showUser = () => {\r\n    setSelectedUser({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n        idNumber: \"\",\r\n        gender: \"\",\r\n        birthDate: \"\",\r\n        birthPlace: \"\",\r\n        age: \"\",\r\n        contactNumber: \"\",\r\n        email: \"\",\r\n        status: \"\",\r\n      });\r\n    setShowUserVisible(true)\r\n  };\r\n\r\n  const loadUser = (userObj) => {\r\n    setSelectedUser({...userObj});\r\n    setShowUserVisible(true);\r\n  };\r\n\r\n  const loadQuarter = async () => {\r\n    let response = await quarterService.findAllQuarter();\r\n    if (response.data && response.data.length > 0) {\r\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\r\n    };\r\n  }\r\n\r\n  const login = async (credentials) => {\r\n    let ctr = 0;\r\n    let loggedInUser = {};\r\n    userDetails.list.map((user) => {\r\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\r\n            ctr = ctr + 1;\r\n            loggedInUser = user;\r\n        }\r\n    })\r\n    if(ctr === 0) {\r\n        setLoginCounter(false)\r\n    } else {\r\n         //if user is parent log in audit trail\r\n        if (loggedInUser && loggedInUser.role === \"Parent\") {\r\n          let loggedDate =  new Date().toISOString();\r\n          let details = {\r\n            user: loggedInUser,\r\n            activity: 'Parent logged in',\r\n            date: loggedDate\r\n          };\r\n          await auditTrailService.add(details);\r\n        };\r\n    \r\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\r\n        sessionStorage.setItem(\"_id\", quarter._id);\r\n        window.location.reload(false);\r\n        setLoginCounter(true);\r\n    }\r\n  };\r\n\r\n  const filterStudent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setStudentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Student\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList( newArray)\r\n    }\r\n  } \r\n  \r\n  const filterTeacher = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setTeacherList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Teacher\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterParent = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setParentList(newArray)\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Parent\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList( newArray)\r\n    }\r\n  }  \r\n\r\n  const filterAdmin = async (name) => {\r\n    if(name !== \"\") {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          middleName: user.middleName,\r\n          idNumber: user.idNumber,\r\n          gender: user.gender,\r\n          birthDate: user.birthDate,\r\n          birthPlace: user.birthPlace,\r\n          age: user.age,\r\n          contactNumber: user.contactNumber,\r\n          email: user.email,\r\n          role: user.role,\r\n          password: user.password,\r\n          gradeLevel: user.gradeLevel,\r\n          section: user.section,\r\n          action: \r\n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n        }\r\n      })\r\n  \r\n      let newArrayCredentials = response.data.map((user) => {\r\n          return {\r\n            key: user._id,\r\n            id: user._id,\r\n            idNumber: user.idNumber,\r\n            password: user.password,\r\n          }\r\n        })\r\n  \r\n        setAdminList(\r\n        newArray\r\n      )\r\n    } else {\r\n      let response = await userService.findAllUser();\r\n      let result = response.data.filter(user => user.role === \"Admin\");\r\n      let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(\r\n      newArray\r\n    )\r\n    }\r\n  }\r\n\r\n  const loadTeacher = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Teacher\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setTeacherList(newArray)\r\n\r\n  }  \r\n\r\n  const loadStudent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Student\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setStudentList(newArray)\r\n\r\n  }  \r\n\r\n  const loadParent = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Parent\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setParentList(newArray)\r\n\r\n  }\r\n\r\n  const loadAdmin = async () => {\r\n    let response = await userService.findAllUser();\r\n    let result = response.data.filter(user => user.role === \"Admin\");\r\n    let newArray = result.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    setAdminList(newArray)\r\n\r\n  }\r\n  \r\nconst getNewGenId = async (role) => {\r\n      let response = await userService.getGenIdNumber(role);\r\n      return response;\r\n    }\r\n\r\nconst loadUsers = async () => {\r\n    let response = await userService.findAllUser();\r\n    let newArray = response.data.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    })\r\n\r\n    let newArrayCredentials = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          idNumber: user.idNumber,\r\n          password: user.password,\r\n        }\r\n      })\r\n\r\n    setUserDetails({\r\n      list: newArray,\r\n      credentials: newArrayCredentials\r\n    })\r\n  \r\n    \r\n\r\n  };\r\n  \r\n  const buildStudentList = (list) => {\r\n    let newlist = list.map((user) => {\r\n      return {\r\n        key: user._id,\r\n        id: user._id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        middleName: user.middleName,\r\n        idNumber: user.idNumber,\r\n        gender: user.gender,\r\n        birthDate: user.birthDate,\r\n        birthPlace: user.birthPlace,\r\n        age: user.age,\r\n        contactNumber: user.contactNumber,\r\n        email: user.email,\r\n        role: user.role,\r\n        password: user.password,\r\n        gradeLevel: user.gradeLevel,\r\n        section: user.section,\r\n        action: \r\n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\r\n      }\r\n    });\r\n    return newlist;\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadUsers();\r\n    getListOfParent();\r\n    loadAdmin();\r\n    loadStudent();\r\n    loadTeacher();\r\n    loadParent();\r\n    loadQuarter();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    loadUsers,\r\n    addUser,\r\n    loginCounter,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    userDetails,\r\n    selectedUser,\r\n    editUser,\r\n    login,\r\n    selectedParent,\r\n    filterAdmin,\r\n    filterStudent,\r\n    filterParent,\r\n    filterTeacher,\r\n    adminList,\r\n    studentList,\r\n    parentList,\r\n    teacherList,\r\n    getNewGenId,\r\n    buildStudentList\r\n  }\r\n};\r\n\r\nexport default UserAction;\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrailAction.js",["546","547","548"],"import React, { useState, useEffect } from 'react';\r\nimport auditTrailService from '../auditTrail/auditTrailService';\r\nimport { Button} from 'antd';\r\nimport moment from 'moment';\r\nconst AuditTrailAction = (initial = { searchRequest: {} }) => {\r\n  let [auditTrailDetails, setAuditTrailDetails] = useState( {list : []});\r\n\r\n    const addAudit = async values => {\r\n    let finalAudit = {\r\n        user : values.user,\r\n        activity: values.activity,\r\n        date: values.date,\r\n    }\r\n    let response = auditTrailService.add(finalAudit)\r\n    };\r\n    \r\n    const getListOfAudit = async () => {\r\n      let response = await auditTrailService.findAllAudit();\r\n      let newArray = response.data.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format('MMMM Do YYYY'),\r\n          role: user.user.role,\r\n          activity: user.activity,\r\n        }\r\n      })\r\n      setAuditTrailDetails({list: newArray})\r\n    };\r\n\r\n    const filterAudit = async ({date, role}) => {\r\n      let datas = [];\r\n      if (date) {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = await response.data.filter(\r\n          (user) =>\r\n            moment(user.date).format(\"MMMM Do YYYY\") ===\r\n            moment(date).format(\"MMMM Do YYYY\")\r\n        );\r\n      } else {\r\n        let response = await auditTrailService.findAllAudit();\r\n        datas = response.data;\r\n      };\r\n\r\n      if (role) {\r\n        datas = datas.filter(data => data.user.role === role);\r\n      };\r\n\r\n      let newArray = await datas.map((user) => {\r\n        return {\r\n          key: user._id,\r\n          id: user._id,\r\n          name: user.user.firstName + \" \" + user.user.lastName,\r\n          date: moment(user.date).format(\"MMMM Do YYYY\"),\r\n          role: user.user.role,\r\n          activity: user.activity\r\n        };\r\n      });\r\n\r\n    setAuditTrailDetails({ list: newArray });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getListOfAudit();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    addAudit,\r\n    auditTrailDetails,\r\n    filterAudit\r\n  }\r\n};\r\n\r\nexport default AuditTrailAction;\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade10.js",["549","550","551","552","553","554","555","556"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\grade3.js",["557","558","559","560","561","562","563","564"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryGrades.js",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\attendanceAction.js",["592"],"import React, { useState, useEffect } from 'react';\r\nimport AttendanceService from './attendanceService';\r\n\r\nconst AttendanceAction = () => {\r\n\r\n  let [ attendances, setattendances ] = useState([]);\r\n  let [ schoolDays, setSchoolDays ] = useState({});\r\n\r\n  const getAttendance = async (id) => {\r\n    let attendanceDatas = [];\r\n    let response = await AttendanceService.getAttendance(id);\r\n    let schoolDays = response.data.schoolDays;\r\n    schoolDays.key = 'schoolDays123';\r\n    schoolDays.id = 'schoolDays123';\r\n    schoolDays.tag = \"No. of School Days\";\r\n    let attendedDays = response.data.attendedDays;\r\n    attendedDays.key = 'attendedDays1123';\r\n    attendedDays.id = 'attendedDays1123';\r\n    attendedDays.tag= \"No. of School Days Present\";\r\n    let absences = response.data.absences;\r\n    absences.key = 'absences1123';\r\n    absences.id = 'absences1123';\r\n    absences.tag = 'No. of Days Absent';\r\n    attendanceDatas.push(schoolDays);\r\n    attendanceDatas.push(attendedDays);\r\n    attendanceDatas.push(absences);\r\n\r\n    setattendances(attendanceDatas);\r\n    return attendanceDatas;\r\n  };\r\n\r\n  const getSchoolDays = async () => {\r\n    let response = await AttendanceService.getSchooldays();\r\n    setSchoolDays(response.data[0]);\r\n    return response;\r\n  };\r\n\r\n\r\n  const saveSchoolDays = async obj => {\r\n    let response = await AttendanceService.saveSchoolDays(obj);\r\n    console.log(response);\r\n  };  \r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return {\r\n    getAttendance,\r\n    attendances,\r\n    getSchoolDays,\r\n    schoolDays,\r\n    saveSchoolDays\r\n  }\r\n};\r\n\r\nexport default AttendanceAction;","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherAction.js",["593","594","595","596"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\user\\teacher.js",["597","598","599"],"import React from 'react';\r\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport UserForm from './userForm'\r\n\r\nimport UserAction from './userAction'\r\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\r\n\r\nimport UserTable from './userTable'\r\n\r\nconst EmployeePage = () => {\r\n\r\n\r\n  let {\r\n    addUser,\r\n    showUserVisible,\r\n    setShowUserVisible,\r\n    showUser,\r\n    teacherList,\r\n    selectedUser,\r\n    editUser,\r\n    selectedParent,\r\n    filterTeacher\r\n  } = UserAction({});\r\n\r\n  let{\r\n    today\r\n  } = TimeKeepingAction({});\r\n\r\n  return (\r\n    <Card className=\"h-82 p-70\">\r\n    <Row className=\"mt-15\">\r\n      <Col lg={{ span: 14 }}>\r\n        <Typography.Title level={3} className=\"ml-15\">Teacher List</Typography.Title>\r\n      </Col>\r\n      <Col lg={{ span: 6 }}>\r\n        <Input placeholder=\"Search\" onChange={(e)=> filterTeacher(e.target.value)}/>\r\n        {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\r\n          <MinusCircleOutlined type=\"minus-circle\" /> Delete User\r\n        </Button> */}\r\n      </Col>\r\n      <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\r\n        <PlusCircleOutlined type=\"plus-circle\" /> Add User\r\n      </Button>\r\n    </Row>\r\n    <Row>\r\n      <Col lg={{ span: \"24\" }}>\r\n        <UserTable details={teacherList} />\r\n      </Col>\r\n    </Row>\r\n    <Drawer\r\n              title={\r\n                  <Typography.Title level={4}>\r\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\r\n                  </Typography.Title>\r\n              }\r\n              width={550}\r\n              visible={showUserVisible}\r\n              onClose={()=> { setShowUserVisible(false)}}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n          >\r\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent} role='Teacher' isNewData=\"false\"/>\r\n          </Drawer>\r\n    \r\n  </Card>\r\n\t\r\n      \r\n  );\r\n}\r\n\r\nexport default EmployeePage;\r\n\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\siderMenu.js",["600","601"],"import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n// import { FaRegBuilding, FaUserFriends, FaChalkboardTeacher, FaUniversity } from \"react-icons/fa\";\r\n\r\nimport {\r\n  UserOutlined, DashboardOutlined, AuditOutlined, TeamOutlined, BarChartOutlined,\r\n} from '@ant-design/icons';\r\nconst { SubMenu } = Menu;\r\nconst SiderMenu = ({ theme, collapsed }) => {\r\n  return (\r\n    <Menu theme={theme} mode=\"inline\" className=\"pointer bg-greenSideBar\" >\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <SubMenu key=\"grade/level\" icon={<BarChartOutlined />} title=\"Grade And Level\">\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade1\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 1 Management</span>\r\n              <Link to={'/grade1'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade2\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 2 Management</span>\r\n              <Link to={'/grade2'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade3\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 3 Management</span>\r\n              <Link to={'/grade3'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade4\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 4 Management</span>\r\n              <Link to={'/grade4'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade5\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 5 Management</span>\r\n              <Link to={'/grade5'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade6\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 6 Management</span>\r\n              <Link to={'/grade6'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade7\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 7 Management</span>\r\n              <Link to={'/grade7'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade8\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 8 Management</span>\r\n              <Link to={'/grade8'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade9\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 9 Management</span>\r\n              <Link to={'/grade9'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"grade10\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">Grade 10 Management</span>\r\n              <Link to={'/grade10'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n        </SubMenu> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n        <Menu.Item key=\"dashboard\" className=\"menus\">\r\n          <DashboardOutlined />\r\n          <span className=\"fs-13\">Dashboard</span>\r\n          <Link to={'/dashboard'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <SubMenu key=\"userManagement\" icon={<TeamOutlined />} title=\"User Management\">\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n            <Menu.Item key=\"admin\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Admin</span>\r\n              <Link to={'/admin'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n            <Menu.Item key=\"parent\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Parent</span>\r\n              <Link to={'/parent'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n            <Menu.Item key=\"student\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Student</span>\r\n              <Link to={'/student'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n          {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n            <Menu.Item key=\"teacher\" className=\"menus bg-greenSubMenu\">\r\n              <UserOutlined />\r\n              <span className=\"fs-13\">List Of Teacher</span>\r\n              <Link to={'/teacher'} className=\"nav-link\" />\r\n            </Menu.Item> : null}\r\n        </SubMenu> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" || JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <Menu.Item key=\"timekeeping\" className=\"menus\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Student Attendance</span>\r\n          <Link to={'/timekeeping'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Parent\" || JSON.parse(sessionStorage.user).role === \"Parent\" ?\r\n        <Menu.Item key=\"offspring\" className=\"menus bg-greenSubMenu\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Student Grade</span>\r\n          <Link to={'/offspring'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n        <Menu.Item key=\"auditTrail\" className=\"menus\">\r\n          <AuditOutlined />\r\n          <span className=\"fs-13\">Audit Trail</span>\r\n          <Link to={'/auditTrail'} className=\"nav-link\" />\r\n        </Menu.Item> : null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Teacher\" ?\r\n        <Menu.Item key=\"advisoryClass\" className=\"menus\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Advisory Class</span>\r\n          <Link to={'/advisoryclass'} className=\"nav-link\" />\r\n        </Menu.Item> :\r\n        null}\r\n\r\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\r\n        <Menu.Item key=\"clearance\" className=\"menus\">\r\n          <UserOutlined />\r\n          <span className=\"fs-13\">Clearance</span>\r\n          <Link to={'/clearance'} className=\"nav-link\" />\r\n        </Menu.Item> :\r\n        null}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default SiderMenu;\r\n","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userDetails\\userDetailsForm.js",["602","603","604","605","606","607","608"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\AttendanceAction.js",["609","610","611","612","613"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\userContext.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\timeKeeping\\timeKeepingTable.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherForm.js",["614","615","616","617","618"],"import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\r\nimport { Formik } from 'formik';\r\nimport { Row, Col, Button, message, Spin, Card } from 'antd';\r\nimport { CheckCircleFilled } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\n\r\nconst TeacherForm = ({ selectedTeacher, add, gradeLevel, selectedTeacherAssgined }) => {\r\n\r\n   let [loading, setLoading] = useState(false);\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{}}\r\n         enableReinitialize={true}\r\n         onSubmit={async (values) => {\r\n            add(values, gradeLevel) \r\n         }}\r\n         render={({ values, touched, setFieldValue }) => (\r\n             \r\n            <Spin spinning={loading} delay={500}>\r\n               <Form className=\"p-30\">\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"English\" name=\"english\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[0] ? selectedTeacherAssgined[0].teacher.firstName + \" \" + selectedTeacherAssgined[0].teacher.lastName : null} name=\"english\">\r\n                  {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n                  \r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Filipino\" name=\"filipino\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[1] ? selectedTeacherAssgined[1].teacher.firstName + \" \" + selectedTeacherAssgined[1].teacher.lastName : null} name=\"filipino\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Science\" name=\"science\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[2] ? selectedTeacherAssgined[2].teacher.firstName + \" \" + selectedTeacherAssgined[2].teacher.lastName : null} name=\"science\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Math\" name=\"math\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[3] ? selectedTeacherAssgined[3].teacher.firstName + \" \" + selectedTeacherAssgined[3].teacher.lastName : null} name=\"math\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n\r\n         <Row gutter={16}>\r\n         <Col span={12}>\r\n            <Form.Item label=\"MAPEH\" name=\"mapeh\">\r\n            <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[4] ? selectedTeacherAssgined[4].teacher.firstName + \" \" + selectedTeacherAssgined[4].teacher.lastName : null} name=\"mapeh\">\r\n            {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         <Col span={12}>\r\n            <Form.Item label=\"Values\" name=\"values\">\r\n               <Select defaultValue={selectedTeacherAssgined && selectedTeacherAssgined[5] ? selectedTeacherAssgined[5].teacher.firstName + \" \" + selectedTeacherAssgined[5].teacher.lastName : null}name=\"values\">\r\n               {selectedTeacher.map(teacher => {\r\n                     return <Option value={teacher._id}>{teacher.firstName + \" \" + teacher.lastName}</Option>\r\n                  })}\r\n               </Select>\r\n            </Form.Item>\r\n         </Col>\r\n         </Row>\r\n                  <Button className=\"btn-save\" htmlType=\"submit\">\r\n                     <CheckCircleFilled type=\"check-circle\" /> {values._id ? \"Update\": \"Save\"}\r\n                  </Button>\r\n               </Form>\r\n            </Spin>\r\n         )}\r\n      />\r\n\r\n   );\r\n}\r\n\r\nexport default TeacherForm;","C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherSubjectAssigment.js",["619"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\teacherService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\offspring\\offspringForm.js",["620","621","622","623","624","625"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\auditTrail\\auditTrailService.js",[],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\grade\\advisoryAction.js",["626","627","628","629","630","631"],"C:\\Users\\servant_warrior_07\\Documents\\projects\\jayson - student app\\fe-student-attendance\\src\\components\\modelTemplate\\schoolDay.js",[],{"ruleId":"632","severity":1,"message":"633","line":2,"column":26,"nodeType":"634","messageId":"635","endLine":2,"endColumn":30},{"ruleId":"632","severity":1,"message":"636","line":3,"column":50,"nodeType":"634","messageId":"635","endLine":3,"endColumn":54},{"ruleId":"632","severity":1,"message":"637","line":25,"column":8,"nodeType":"634","messageId":"635","endLine":25,"endColumn":17},{"ruleId":"632","severity":1,"message":"638","line":55,"column":9,"nodeType":"634","messageId":"635","endLine":55,"endColumn":17},{"ruleId":"639","severity":1,"message":"640","line":101,"column":25,"nodeType":"641","endLine":101,"endColumn":77},{"ruleId":"642","replacedBy":"643"},{"ruleId":"644","replacedBy":"645"},{"ruleId":"632","severity":1,"message":"646","line":2,"column":24,"nodeType":"634","messageId":"635","endLine":2,"endColumn":30},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"647","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":28},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"642","replacedBy":"649"},{"ruleId":"644","replacedBy":"650"},{"ruleId":"632","severity":1,"message":"651","line":14,"column":12,"nodeType":"634","messageId":"635","endLine":14,"endColumn":25},{"ruleId":"642","replacedBy":"652"},{"ruleId":"644","replacedBy":"653"},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":29},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":29},{"ruleId":"632","severity":1,"message":"661","line":2,"column":10,"nodeType":"634","messageId":"635","endLine":2,"endColumn":16},{"ruleId":"632","severity":1,"message":"646","line":2,"column":24,"nodeType":"634","messageId":"635","endLine":2,"endColumn":30},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"647","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":28},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"663","line":5,"column":11,"nodeType":"634","messageId":"635","endLine":5,"endColumn":17},{"ruleId":"642","replacedBy":"664"},{"ruleId":"644","replacedBy":"665"},{"ruleId":"642","replacedBy":"666"},{"ruleId":"644","replacedBy":"667"},{"ruleId":"642","replacedBy":"668"},{"ruleId":"644","replacedBy":"669"},{"ruleId":"632","severity":1,"message":"670","line":2,"column":23,"nodeType":"634","messageId":"635","endLine":2,"endColumn":33},{"ruleId":"632","severity":1,"message":"671","line":4,"column":28,"nodeType":"634","messageId":"635","endLine":4,"endColumn":35},{"ruleId":"632","severity":1,"message":"672","line":6,"column":9,"nodeType":"634","messageId":"635","endLine":6,"endColumn":15},{"ruleId":"632","severity":1,"message":"673","line":7,"column":9,"nodeType":"634","messageId":"635","endLine":7,"endColumn":14},{"ruleId":"632","severity":1,"message":"674","line":11,"column":17,"nodeType":"634","messageId":"635","endLine":11,"endColumn":27},{"ruleId":"632","severity":1,"message":"675","line":24,"column":7,"nodeType":"634","messageId":"635","endLine":24,"endColumn":15},{"ruleId":"632","severity":1,"message":"676","line":46,"column":9,"nodeType":"634","messageId":"635","endLine":46,"endColumn":17},{"ruleId":"677","severity":1,"message":"678","line":212,"column":29,"nodeType":"679","messageId":"680","endLine":212,"endColumn":31},{"ruleId":"681","severity":1,"message":"682","line":215,"column":57,"nodeType":"683","messageId":"684","endLine":215,"endColumn":59},{"ruleId":"677","severity":1,"message":"678","line":217,"column":68,"nodeType":"679","messageId":"680","endLine":217,"endColumn":70},{"ruleId":"677","severity":1,"message":"678","line":274,"column":29,"nodeType":"679","messageId":"680","endLine":274,"endColumn":31},{"ruleId":"677","severity":1,"message":"678","line":276,"column":68,"nodeType":"679","messageId":"680","endLine":276,"endColumn":70},{"ruleId":"677","severity":1,"message":"678","line":340,"column":29,"nodeType":"679","messageId":"680","endLine":340,"endColumn":31},{"ruleId":"681","severity":1,"message":"682","line":343,"column":57,"nodeType":"683","messageId":"684","endLine":343,"endColumn":59},{"ruleId":"677","severity":1,"message":"678","line":347,"column":68,"nodeType":"679","messageId":"680","endLine":347,"endColumn":70},{"ruleId":"677","severity":1,"message":"678","line":411,"column":29,"nodeType":"679","messageId":"680","endLine":411,"endColumn":31},{"ruleId":"677","severity":1,"message":"678","line":413,"column":68,"nodeType":"679","messageId":"680","endLine":413,"endColumn":70},{"ruleId":"677","severity":1,"message":"678","line":546,"column":29,"nodeType":"679","messageId":"680","endLine":546,"endColumn":31},{"ruleId":"677","severity":1,"message":"678","line":548,"column":68,"nodeType":"679","messageId":"680","endLine":548,"endColumn":70},{"ruleId":"677","severity":1,"message":"678","line":615,"column":27,"nodeType":"679","messageId":"680","endLine":615,"endColumn":29},{"ruleId":"677","severity":1,"message":"678","line":617,"column":66,"nodeType":"679","messageId":"680","endLine":617,"endColumn":68},{"ruleId":"642","replacedBy":"685"},{"ruleId":"644","replacedBy":"686"},{"ruleId":"632","severity":1,"message":"661","line":2,"column":10,"nodeType":"634","messageId":"635","endLine":2,"endColumn":16},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"642","replacedBy":"687"},{"ruleId":"644","replacedBy":"688"},{"ruleId":"632","severity":1,"message":"689","line":1,"column":27,"nodeType":"634","messageId":"635","endLine":1,"endColumn":36},{"ruleId":"632","severity":1,"message":"671","line":2,"column":40,"nodeType":"634","messageId":"635","endLine":2,"endColumn":47},{"ruleId":"632","severity":1,"message":"690","line":8,"column":7,"nodeType":"634","messageId":"635","endLine":8,"endColumn":14},{"ruleId":"632","severity":1,"message":"691","line":19,"column":9,"nodeType":"634","messageId":"635","endLine":19,"endColumn":21},{"ruleId":"639","severity":1,"message":"640","line":61,"column":17,"nodeType":"641","endLine":61,"endColumn":69},{"ruleId":"639","severity":1,"message":"640","line":76,"column":21,"nodeType":"641","endLine":76,"endColumn":66},{"ruleId":"639","severity":1,"message":"640","line":93,"column":21,"nodeType":"641","endLine":93,"endColumn":70},{"ruleId":"632","severity":1,"message":"692","line":1,"column":17,"nodeType":"634","messageId":"635","endLine":1,"endColumn":25},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"693","line":8,"column":8,"nodeType":"634","messageId":"635","endLine":8,"endColumn":25},{"ruleId":"632","severity":1,"message":"694","line":30,"column":5,"nodeType":"634","messageId":"635","endLine":30,"endColumn":25},{"ruleId":"632","severity":1,"message":"695","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":10},{"ruleId":"632","severity":1,"message":"696","line":2,"column":16,"nodeType":"634","messageId":"635","endLine":2,"endColumn":21},{"ruleId":"632","severity":1,"message":"670","line":2,"column":23,"nodeType":"634","messageId":"635","endLine":2,"endColumn":33},{"ruleId":"632","severity":1,"message":"671","line":4,"column":28,"nodeType":"634","messageId":"635","endLine":4,"endColumn":35},{"ruleId":"632","severity":1,"message":"697","line":4,"column":43,"nodeType":"634","messageId":"635","endLine":4,"endColumn":47},{"ruleId":"632","severity":1,"message":"674","line":15,"column":18,"nodeType":"634","messageId":"635","endLine":15,"endColumn":28},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"689","line":1,"column":27,"nodeType":"634","messageId":"635","endLine":1,"endColumn":36},{"ruleId":"632","severity":1,"message":"661","line":2,"column":10,"nodeType":"634","messageId":"635","endLine":2,"endColumn":16},{"ruleId":"632","severity":1,"message":"698","line":2,"column":32,"nodeType":"634","messageId":"635","endLine":2,"endColumn":42},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"671","line":2,"column":80,"nodeType":"634","messageId":"635","endLine":2,"endColumn":87},{"ruleId":"632","severity":1,"message":"647","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":28},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"699","line":38,"column":11,"nodeType":"634","messageId":"635","endLine":38,"endColumn":16},{"ruleId":"700","severity":1,"message":"701","line":41,"column":48,"nodeType":"702","messageId":"703","endLine":41,"endColumn":50},{"ruleId":"642","replacedBy":"704"},{"ruleId":"644","replacedBy":"705"},{"ruleId":"632","severity":1,"message":"670","line":2,"column":23,"nodeType":"634","messageId":"635","endLine":2,"endColumn":33},{"ruleId":"632","severity":1,"message":"706","line":2,"column":35,"nodeType":"634","messageId":"635","endLine":2,"endColumn":41},{"ruleId":"642","replacedBy":"707"},{"ruleId":"644","replacedBy":"708"},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"642","replacedBy":"709"},{"ruleId":"644","replacedBy":"710"},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"695","line":27,"column":5,"nodeType":"634","messageId":"635","endLine":27,"endColumn":10},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":29},{"ruleId":"632","severity":1,"message":"661","line":2,"column":10,"nodeType":"634","messageId":"635","endLine":2,"endColumn":16},{"ruleId":"632","severity":1,"message":"646","line":2,"column":24,"nodeType":"634","messageId":"635","endLine":2,"endColumn":30},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"647","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":28},{"ruleId":"632","severity":1,"message":"711","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":44},{"ruleId":"632","severity":1,"message":"672","line":9,"column":8,"nodeType":"634","messageId":"635","endLine":9,"endColumn":14},{"ruleId":"642","replacedBy":"712"},{"ruleId":"644","replacedBy":"713"},{"ruleId":"632","severity":1,"message":"714","line":9,"column":8,"nodeType":"634","messageId":"635","endLine":9,"endColumn":14},{"ruleId":"632","severity":1,"message":"715","line":50,"column":8,"nodeType":"634","messageId":"635","endLine":50,"endColumn":18},{"ruleId":"632","severity":1,"message":"716","line":50,"column":20,"nodeType":"634","messageId":"635","endLine":50,"endColumn":33},{"ruleId":"632","severity":1,"message":"638","line":73,"column":13,"nodeType":"634","messageId":"635","endLine":73,"endColumn":21},{"ruleId":"632","severity":1,"message":"717","line":76,"column":13,"nodeType":"634","messageId":"635","endLine":76,"endColumn":22},{"ruleId":"632","severity":1,"message":"718","line":185,"column":13,"nodeType":"634","messageId":"635","endLine":185,"endColumn":22},{"ruleId":"632","severity":1,"message":"638","line":194,"column":13,"nodeType":"634","messageId":"635","endLine":194,"endColumn":21},{"ruleId":"632","severity":1,"message":"717","line":197,"column":13,"nodeType":"634","messageId":"635","endLine":197,"endColumn":22},{"ruleId":"632","severity":1,"message":"719","line":603,"column":9,"nodeType":"634","messageId":"635","endLine":603,"endColumn":21},{"ruleId":"632","severity":1,"message":"720","line":672,"column":9,"nodeType":"634","messageId":"635","endLine":672,"endColumn":26},{"ruleId":"700","severity":1,"message":"701","line":694,"column":30,"nodeType":"702","messageId":"703","endLine":694,"endColumn":32},{"ruleId":"700","severity":1,"message":"701","line":752,"column":32,"nodeType":"702","messageId":"703","endLine":752,"endColumn":34},{"ruleId":"700","severity":1,"message":"701","line":922,"column":36,"nodeType":"702","messageId":"703","endLine":922,"endColumn":38},{"ruleId":"700","severity":1,"message":"701","line":923,"column":27,"nodeType":"702","messageId":"703","endLine":923,"endColumn":29},{"ruleId":"700","severity":1,"message":"701","line":949,"column":25,"nodeType":"702","messageId":"703","endLine":949,"endColumn":27},{"ruleId":"721","severity":1,"message":"722","line":1158,"column":6,"nodeType":"723","endLine":1158,"endColumn":8,"suggestions":"724"},{"ruleId":"700","severity":1,"message":"701","line":31,"column":31,"nodeType":"702","messageId":"703","endLine":31,"endColumn":33},{"ruleId":"632","severity":1,"message":"725","line":53,"column":9,"nodeType":"634","messageId":"635","endLine":53,"endColumn":23},{"ruleId":"700","severity":1,"message":"701","line":57,"column":30,"nodeType":"702","messageId":"703","endLine":57,"endColumn":32},{"ruleId":"721","severity":1,"message":"726","line":91,"column":6,"nodeType":"723","endLine":91,"endColumn":8,"suggestions":"727"},{"ruleId":"632","severity":1,"message":"728","line":32,"column":9,"nodeType":"634","messageId":"635","endLine":32,"endColumn":21},{"ruleId":"700","severity":1,"message":"701","line":63,"column":35,"nodeType":"702","messageId":"703","endLine":63,"endColumn":37},{"ruleId":"729","severity":1,"message":"730","line":53,"column":1,"nodeType":"731","endLine":53,"endColumn":52},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":29},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"732","line":3,"column":65,"nodeType":"634","messageId":"635","endLine":3,"endColumn":81},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":30,"column":5,"nodeType":"634","messageId":"635","endLine":30,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":33,"column":5,"nodeType":"634","messageId":"635","endLine":33,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":36,"column":5,"nodeType":"634","messageId":"635","endLine":36,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":50,"column":5,"nodeType":"634","messageId":"635","endLine":50,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":62,"column":5,"nodeType":"634","messageId":"635","endLine":62,"endColumn":29},{"ruleId":"632","severity":1,"message":"661","line":2,"column":10,"nodeType":"634","messageId":"635","endLine":2,"endColumn":16},{"ruleId":"632","severity":1,"message":"646","line":2,"column":24,"nodeType":"634","messageId":"635","endLine":2,"endColumn":30},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"733","line":2,"column":74,"nodeType":"634","messageId":"635","endLine":2,"endColumn":86},{"ruleId":"632","severity":1,"message":"647","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":28},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"734","line":6,"column":8,"nodeType":"634","messageId":"635","endLine":6,"endColumn":16},{"ruleId":"632","severity":1,"message":"735","line":9,"column":8,"nodeType":"634","messageId":"635","endLine":9,"endColumn":21},{"ruleId":"632","severity":1,"message":"736","line":12,"column":8,"nodeType":"634","messageId":"635","endLine":12,"endColumn":19},{"ruleId":"632","severity":1,"message":"737","line":26,"column":5,"nodeType":"634","messageId":"635","endLine":26,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":27,"column":5,"nodeType":"634","messageId":"635","endLine":27,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":30,"column":5,"nodeType":"634","messageId":"635","endLine":30,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":33,"column":5,"nodeType":"634","messageId":"635","endLine":33,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":47,"column":5,"nodeType":"634","messageId":"635","endLine":47,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":59,"column":5,"nodeType":"634","messageId":"635","endLine":59,"endColumn":29},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":29},{"ruleId":"632","severity":1,"message":"671","line":4,"column":28,"nodeType":"634","messageId":"635","endLine":4,"endColumn":35},{"ruleId":"632","severity":1,"message":"738","line":18,"column":7,"nodeType":"634","messageId":"635","endLine":18,"endColumn":15},{"ruleId":"632","severity":1,"message":"674","line":24,"column":17,"nodeType":"634","messageId":"635","endLine":24,"endColumn":27},{"ruleId":"632","severity":1,"message":"739","line":25,"column":8,"nodeType":"634","messageId":"635","endLine":25,"endColumn":25},{"ruleId":"632","severity":1,"message":"740","line":25,"column":27,"nodeType":"634","messageId":"635","endLine":25,"endColumn":47},{"ruleId":"741","severity":1,"message":"742","line":100,"column":11,"nodeType":"641","endLine":106,"endColumn":12},{"ruleId":"743","severity":1,"message":"744","line":101,"column":18,"nodeType":"745","messageId":"746","endLine":101,"endColumn":32},{"ruleId":"741","severity":1,"message":"747","line":110,"column":13,"nodeType":"641","endLine":110,"endColumn":16},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":29,"column":5,"nodeType":"634","messageId":"635","endLine":29,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":32,"column":5,"nodeType":"634","messageId":"635","endLine":32,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":35,"column":5,"nodeType":"634","messageId":"635","endLine":35,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":49,"column":5,"nodeType":"634","messageId":"635","endLine":49,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":61,"column":5,"nodeType":"634","messageId":"635","endLine":61,"endColumn":29},{"ruleId":"632","severity":1,"message":"714","line":6,"column":8,"nodeType":"634","messageId":"635","endLine":6,"endColumn":14},{"ruleId":"632","severity":1,"message":"693","line":8,"column":8,"nodeType":"634","messageId":"635","endLine":8,"endColumn":25},{"ruleId":"632","severity":1,"message":"748","line":24,"column":9,"nodeType":"634","messageId":"635","endLine":24,"endColumn":22},{"ruleId":"632","severity":1,"message":"638","line":33,"column":9,"nodeType":"634","messageId":"635","endLine":33,"endColumn":17},{"ruleId":"632","severity":1,"message":"638","line":102,"column":11,"nodeType":"634","messageId":"635","endLine":102,"endColumn":19},{"ruleId":"632","severity":1,"message":"748","line":120,"column":9,"nodeType":"634","messageId":"635","endLine":120,"endColumn":22},{"ruleId":"632","severity":1,"message":"638","line":128,"column":9,"nodeType":"634","messageId":"635","endLine":128,"endColumn":17},{"ruleId":"700","severity":1,"message":"701","line":186,"column":33,"nodeType":"702","messageId":"703","endLine":186,"endColumn":35},{"ruleId":"632","severity":1,"message":"749","line":241,"column":11,"nodeType":"634","messageId":"635","endLine":241,"endColumn":30},{"ruleId":"632","severity":1,"message":"749","line":308,"column":11,"nodeType":"634","messageId":"635","endLine":308,"endColumn":30},{"ruleId":"632","severity":1,"message":"749","line":375,"column":11,"nodeType":"634","messageId":"635","endLine":375,"endColumn":30},{"ruleId":"632","severity":1,"message":"749","line":442,"column":11,"nodeType":"634","messageId":"635","endLine":442,"endColumn":30},{"ruleId":"721","severity":1,"message":"750","line":688,"column":6,"nodeType":"723","endLine":688,"endColumn":8,"suggestions":"751"},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"646","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":16},{"ruleId":"632","severity":1,"message":"638","line":14,"column":9,"nodeType":"634","messageId":"635","endLine":14,"endColumn":17},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":29},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"656","line":27,"column":5,"nodeType":"634","messageId":"635","endLine":27,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":30,"column":5,"nodeType":"634","messageId":"635","endLine":30,"endColumn":14},{"ruleId":"632","severity":1,"message":"658","line":33,"column":5,"nodeType":"634","messageId":"635","endLine":33,"endColumn":14},{"ruleId":"632","severity":1,"message":"659","line":47,"column":5,"nodeType":"634","messageId":"635","endLine":47,"endColumn":8},{"ruleId":"632","severity":1,"message":"660","line":59,"column":5,"nodeType":"634","messageId":"635","endLine":59,"endColumn":29},{"ruleId":"632","severity":1,"message":"646","line":2,"column":24,"nodeType":"634","messageId":"635","endLine":2,"endColumn":30},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"647","line":3,"column":10,"nodeType":"634","messageId":"635","endLine":3,"endColumn":28},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"752","line":3,"column":51,"nodeType":"634","messageId":"635","endLine":3,"endColumn":63},{"ruleId":"632","severity":1,"message":"732","line":3,"column":65,"nodeType":"634","messageId":"635","endLine":3,"endColumn":81},{"ruleId":"632","severity":1,"message":"654","line":4,"column":8,"nodeType":"634","messageId":"635","endLine":4,"endColumn":17},{"ruleId":"632","severity":1,"message":"655","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":19},{"ruleId":"632","severity":1,"message":"753","line":6,"column":8,"nodeType":"634","messageId":"635","endLine":6,"endColumn":20},{"ruleId":"632","severity":1,"message":"656","line":28,"column":5,"nodeType":"634","messageId":"635","endLine":28,"endColumn":13},{"ruleId":"632","severity":1,"message":"657","line":31,"column":5,"nodeType":"634","messageId":"635","endLine":31,"endColumn":14},{"ruleId":"632","severity":1,"message":"754","line":32,"column":5,"nodeType":"634","messageId":"635","endLine":32,"endColumn":18},{"ruleId":"632","severity":1,"message":"658","line":34,"column":5,"nodeType":"634","messageId":"635","endLine":34,"endColumn":14},{"ruleId":"632","severity":1,"message":"755","line":35,"column":5,"nodeType":"634","messageId":"635","endLine":35,"endColumn":20},{"ruleId":"632","severity":1,"message":"756","line":37,"column":5,"nodeType":"634","messageId":"635","endLine":37,"endColumn":19},{"ruleId":"632","severity":1,"message":"757","line":47,"column":5,"nodeType":"634","messageId":"635","endLine":47,"endColumn":23},{"ruleId":"632","severity":1,"message":"758","line":48,"column":5,"nodeType":"634","messageId":"635","endLine":48,"endColumn":16},{"ruleId":"632","severity":1,"message":"759","line":49,"column":5,"nodeType":"634","messageId":"635","endLine":49,"endColumn":16},{"ruleId":"632","severity":1,"message":"659","line":50,"column":5,"nodeType":"634","messageId":"635","endLine":50,"endColumn":8},{"ruleId":"632","severity":1,"message":"760","line":51,"column":5,"nodeType":"634","messageId":"635","endLine":51,"endColumn":34},{"ruleId":"632","severity":1,"message":"761","line":52,"column":5,"nodeType":"634","messageId":"635","endLine":52,"endColumn":28},{"ruleId":"632","severity":1,"message":"762","line":56,"column":5,"nodeType":"634","messageId":"635","endLine":56,"endColumn":23},{"ruleId":"632","severity":1,"message":"763","line":57,"column":5,"nodeType":"634","messageId":"635","endLine":57,"endColumn":16},{"ruleId":"632","severity":1,"message":"764","line":58,"column":5,"nodeType":"634","messageId":"635","endLine":58,"endColumn":16},{"ruleId":"632","severity":1,"message":"765","line":59,"column":5,"nodeType":"634","messageId":"635","endLine":59,"endColumn":15},{"ruleId":"632","severity":1,"message":"766","line":60,"column":5,"nodeType":"634","messageId":"635","endLine":60,"endColumn":35},{"ruleId":"632","severity":1,"message":"660","line":61,"column":5,"nodeType":"634","messageId":"635","endLine":61,"endColumn":29},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"767","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":16},{"ruleId":"632","severity":1,"message":"638","line":56,"column":9,"nodeType":"634","messageId":"635","endLine":56,"endColumn":17},{"ruleId":"700","severity":1,"message":"701","line":65,"column":27,"nodeType":"702","messageId":"703","endLine":65,"endColumn":29},{"ruleId":"632","severity":1,"message":"633","line":2,"column":44,"nodeType":"634","messageId":"635","endLine":2,"endColumn":48},{"ruleId":"632","severity":1,"message":"648","line":3,"column":30,"nodeType":"634","messageId":"635","endLine":3,"endColumn":49},{"ruleId":"632","severity":1,"message":"695","line":27,"column":5,"nodeType":"634","messageId":"635","endLine":27,"endColumn":10},{"ruleId":"632","severity":1,"message":"768","line":1,"column":17,"nodeType":"634","messageId":"635","endLine":1,"endColumn":26},{"ruleId":"632","severity":1,"message":"633","line":2,"column":16,"nodeType":"634","messageId":"635","endLine":2,"endColumn":20},{"ruleId":"632","severity":1,"message":"670","line":2,"column":23,"nodeType":"634","messageId":"635","endLine":2,"endColumn":33},{"ruleId":"632","severity":1,"message":"646","line":4,"column":20,"nodeType":"634","messageId":"635","endLine":4,"endColumn":26},{"ruleId":"632","severity":1,"message":"671","line":4,"column":28,"nodeType":"634","messageId":"635","endLine":4,"endColumn":35},{"ruleId":"632","severity":1,"message":"769","line":4,"column":57,"nodeType":"634","messageId":"635","endLine":4,"endColumn":64},{"ruleId":"632","severity":1,"message":"770","line":5,"column":10,"nodeType":"634","messageId":"635","endLine":5,"endColumn":27},{"ruleId":"632","severity":1,"message":"672","line":6,"column":9,"nodeType":"634","messageId":"635","endLine":6,"endColumn":15},{"ruleId":"632","severity":1,"message":"674","line":11,"column":18,"nodeType":"634","messageId":"635","endLine":11,"endColumn":28},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"771","line":6,"column":8,"nodeType":"634","messageId":"635","endLine":6,"endColumn":14},{"ruleId":"632","severity":1,"message":"772","line":6,"column":16,"nodeType":"634","messageId":"635","endLine":6,"endColumn":25},{"ruleId":"632","severity":1,"message":"773","line":7,"column":8,"nodeType":"634","messageId":"635","endLine":7,"endColumn":15},{"ruleId":"632","severity":1,"message":"774","line":7,"column":17,"nodeType":"634","messageId":"635","endLine":7,"endColumn":27},{"ruleId":"632","severity":1,"message":"696","line":2,"column":16,"nodeType":"634","messageId":"635","endLine":2,"endColumn":21},{"ruleId":"632","severity":1,"message":"670","line":2,"column":23,"nodeType":"634","messageId":"635","endLine":2,"endColumn":33},{"ruleId":"632","severity":1,"message":"671","line":4,"column":28,"nodeType":"634","messageId":"635","endLine":4,"endColumn":35},{"ruleId":"632","severity":1,"message":"697","line":4,"column":43,"nodeType":"634","messageId":"635","endLine":4,"endColumn":47},{"ruleId":"632","severity":1,"message":"674","line":11,"column":18,"nodeType":"634","messageId":"635","endLine":11,"endColumn":28},{"ruleId":"700","severity":1,"message":"701","line":21,"column":39,"nodeType":"702","messageId":"703","endLine":21,"endColumn":41},{"ruleId":"632","severity":1,"message":"670","line":2,"column":23,"nodeType":"634","messageId":"635","endLine":2,"endColumn":33},{"ruleId":"632","severity":1,"message":"646","line":4,"column":20,"nodeType":"634","messageId":"635","endLine":4,"endColumn":26},{"ruleId":"632","severity":1,"message":"671","line":4,"column":28,"nodeType":"634","messageId":"635","endLine":4,"endColumn":35},{"ruleId":"632","severity":1,"message":"770","line":5,"column":10,"nodeType":"634","messageId":"635","endLine":5,"endColumn":27},{"ruleId":"632","severity":1,"message":"672","line":6,"column":9,"nodeType":"634","messageId":"635","endLine":6,"endColumn":15},{"ruleId":"632","severity":1,"message":"674","line":11,"column":18,"nodeType":"634","messageId":"635","endLine":11,"endColumn":28},{"ruleId":"632","severity":1,"message":"662","line":1,"column":8,"nodeType":"634","messageId":"635","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"775","line":5,"column":8,"nodeType":"634","messageId":"635","endLine":5,"endColumn":25},{"ruleId":"632","severity":1,"message":"755","line":9,"column":8,"nodeType":"634","messageId":"635","endLine":9,"endColumn":23},{"ruleId":"632","severity":1,"message":"748","line":31,"column":9,"nodeType":"634","messageId":"635","endLine":31,"endColumn":22},{"ruleId":"632","severity":1,"message":"638","line":165,"column":9,"nodeType":"634","messageId":"635","endLine":165,"endColumn":17},{"ruleId":"721","severity":1,"message":"776","line":184,"column":6,"nodeType":"723","endLine":184,"endColumn":8,"suggestions":"777"},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Offspring' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["778"],"no-negated-in-lhs",["779"],"'Button' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'MinusCircleOutlined' is defined but never used.",["778"],["779"],"'setLoggedUser' is assigned a value but never used.",["778"],["779"],"'GradeForm' is defined but never used.","'TeacherForm' is defined but never used.","'addGrade' is assigned a value but never used.","'showGrade' is assigned a value but never used.","'editGrade' is assigned a value but never used.","'add' is assigned a value but never used.","'selectedAdvisoryAssgined' is assigned a value but never used.","'Drawer' is defined but never used.","'React' is defined but never used.","'locale' is assigned a value but never used.",["778"],["779"],["778"],["779"],["778"],["779"],"'DatePicker' is defined but never used.","'message' is defined but never used.","'Option' is assigned a value but never used.","'Panel' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'mapehObj' is assigned a value but never used.","'getGrade' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["778"],["779"],["778"],["779"],"'useEffect' is defined but never used.","'version' is assigned a value but never used.","'loginCounter' is assigned a value but never used.","'useState' is defined but never used.","'AdditionalService' is defined but never used.","'loadAdvisoryStudents' is assigned a value but never used.","'today' is assigned a value but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'Typography' is defined but never used.","'count' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["778"],["779"],"'Select' is defined but never used.",["778"],["779"],["778"],["779"],"'DeleteOutlined' is defined but never used.",["778"],["779"],"'moment' is defined but never used.","'showUnpaid' is assigned a value but never used.","'setShowUnpaid' is assigned a value but never used.","'response1' is assigned a value but never used.","'response2' is assigned a value but never used.","'updateResult' is assigned a value but never used.","'loadSelectedGrade' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentGradeUser', 'loadAdvisoryGrades', 'loadGrades', 'loadGrades1', 'loadGrades10', 'loadGrades2', 'loadGrades3', 'loadGrades4', 'loadGrades5', 'loadGrades6', 'loadGrades7', 'loadGrades8', and 'loadGrades9'. Either include them or remove the dependency array.","ArrayExpression",["780"],"'currentQuarter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'buildInputArr'. Either include it or remove the dependency array.",["781"],"'lowestRating' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'UpSquareOutlined' is defined but never used.","'notification' is defined but never used.","'UserForm' is defined but never used.","'AdvisorAction' is defined but never used.","'ValuesTable' is defined but never used.","'selectedGrade' is assigned a value but never used.","'newGenId' is assigned a value but never used.","'gradeLevelVisible' is assigned a value but never used.","'setGradeLevelVisible' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'auditTrailObj' is assigned a value but never used.","'newArrayCredentials' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAdmin', 'loadParent', 'loadStudent', 'loadTeacher', and 'loadUsers'. Either include them or remove the dependency array.",["782"],"'RiseOutlined' is defined but never used.","'AdvisoryForm' is defined but never used.","'grade2Details' is assigned a value but never used.","'selectedTeacher' is assigned a value but never used.","'upgradeStudent' is assigned a value but never used.","'showTeacherVisible' is assigned a value but never used.","'hideTeacher' is assigned a value but never used.","'showTeacher' is assigned a value but never used.","'selectedTeacherAssignedGrade2' is assigned a value but never used.","'selectedTeacherAssgined' is assigned a value but never used.","'showAdvisorVisible' is assigned a value but never used.","'hideAdvisor' is assigned a value but never used.","'showAdvisor' is assigned a value but never used.","'addAdvisor' is assigned a value but never used.","'selectedAdvisoryAssignedGrade2' is assigned a value but never used.","'subjects' is defined but never used.","'Component' is defined but never used.","'AntForm' is defined but never used.","'CheckCircleFilled' is defined but never used.","'timeIn' is assigned a value but never used.","'setTimeIn' is assigned a value but never used.","'timeOut' is assigned a value but never used.","'setTimeOut' is assigned a value but never used.","'auditTrailService' is defined but never used.","React Hook useEffect has a missing dependency: 'loadAdvisoryStudents'. Either include it or remove the dependency array.",["783"],"no-global-assign","no-unsafe-negation",{"desc":"784","fix":"785"},{"desc":"786","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},"Update the dependencies array to be: [currentGradeUser, loadAdvisoryGrades, loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",{"range":"792","text":"793"},"Update the dependencies array to be: [buildInputArr]",{"range":"794","text":"795"},"Update the dependencies array to be: [loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]",{"range":"796","text":"797"},"Update the dependencies array to be: [loadAdvisoryStudents]",{"range":"798","text":"799"},[37027,37029],"[currentGradeUser, loadAdvisoryGrades, loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",[3107,3109],"[buildInputArr]",[21052,21054],"[loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]",[7258,7260],"[loadAdvisoryStudents]"]