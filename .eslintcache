[{"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/student.js":"1","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetailsForm.js":"2","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/AttendanceAction.js":"3","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeAction.js":"4","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/user.js":"5","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userTable.js":"6","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/dashboard/dashboardAction.js":"7","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userAction.js":"8","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeForm.js":"9","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailAction.js":"10","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/config.js":"11","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/offspring/offspring.js":"12","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userMenu.js":"13","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrail.js":"14","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade8.js":"15","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/offspring/offspringTable.js":"16","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailTable.js":"17","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryAction.js":"18","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryForm.js":"19","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/index.js":"20","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade1.js":"21","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade10.js":"22","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userForm.js":"23","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingService.js":"24"},{"size":2111,"mtime":1616172075137,"results":"25","hashOfConfig":"26"},{"size":9476,"mtime":1616172075137,"results":"27","hashOfConfig":"26"},{"size":2245,"mtime":1616172075137,"results":"28","hashOfConfig":"26"},{"size":29138,"mtime":1616172075137,"results":"29","hashOfConfig":"26"},{"size":2039,"mtime":1616172075137,"results":"30","hashOfConfig":"26"},{"size":1242,"mtime":1616172075137,"results":"31","hashOfConfig":"26"},{"size":882,"mtime":1616172075137,"results":"32","hashOfConfig":"26"},{"size":19345,"mtime":1616264952471,"results":"33","hashOfConfig":"26"},{"size":16309,"mtime":1616328091039,"results":"34","hashOfConfig":"26"},{"size":1127,"mtime":1616318613233,"results":"35","hashOfConfig":"26"},{"size":302,"mtime":1616331837674,"results":"36","hashOfConfig":"26"},{"size":1341,"mtime":1616172075137,"results":"37","hashOfConfig":"26"},{"size":710,"mtime":1616172075137,"results":"38","hashOfConfig":"26"},{"size":1060,"mtime":1616172075137,"results":"39","hashOfConfig":"26"},{"size":4230,"mtime":1616172075137,"results":"40","hashOfConfig":"26"},{"size":1219,"mtime":1616172075137,"results":"41","hashOfConfig":"26"},{"size":484,"mtime":1616172075137,"results":"42","hashOfConfig":"26"},{"size":6205,"mtime":1616331725467,"results":"43","hashOfConfig":"26"},{"size":1619,"mtime":1616331746375,"results":"44","hashOfConfig":"26"},{"size":500,"mtime":1616172075137,"results":"45","hashOfConfig":"26"},{"size":4219,"mtime":1616172075137,"results":"46","hashOfConfig":"26"},{"size":4248,"mtime":1616172075137,"results":"47","hashOfConfig":"26"},{"size":7923,"mtime":1616172075137,"results":"48","hashOfConfig":"26"},{"size":596,"mtime":1616172075137,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"d23pu8",{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/student.js",["107","108","109"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Input } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport UserForm from './userForm'\n\nimport UserAction from './userAction'\nimport TimeKeepingAction from '../timeKeeping/timeKeepingAction'\n\nimport UserTable from './userTable'\n\nconst EmployeePage = () => {\n\n\n  let {\n    addUser,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    studentList,\n    selectedUser,\n    editUser,\n    selectedParent,\n    filterStudent\n  } = UserAction({});\n\n  let{\n    today\n  } = TimeKeepingAction({});\n\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 14 }}>\n        <Typography.Title level={3} className=\"ml-15\">Student List</Typography.Title>\n      </Col>\n      {JSON.parse(sessionStorage.user).role === \"Admin\" ?\n      <>\n        <Col lg={{ span: 6 }}>\n          <Input placeholder=\"Search\" onChange={(e)=> filterStudent(e.target.value)}/>\n          {/* <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete User\n          </Button> */}\n        </Col>\n        <Button  className=\"addUser btn-add\" onClick={()=> showUser()}>\n          <PlusCircleOutlined type=\"plus-circle\" /> Add User\n        </Button>\n      </>\n        : null}\n\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <UserTable details={studentList} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  {selectedUser && selectedUser._id ? \"Update User\" : \"Add User\"}\n                  </Typography.Title>\n              }\n              width={550}\n              visible={showUserVisible}\n              onClose={()=> { setShowUserVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <UserForm add={addUser} update={editUser} selectedUser={selectedUser} selectedParent={selectedParent}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default EmployeePage;\n\n",["110","111"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userDetails/userDetailsForm.js",["112","113","114","115","116","117","118"],"import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Select } from 'formik-antd'\nimport { Formik } from 'formik';\nimport { Row, Col, Button, message, Spin, Card, Form as AntForm } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\nconst { Option } = Select;\n\n\nconst UserEditForm = ({ selectedUser }) => {\n\n   let [loading, setLoading] = useState(false);\n\n   return (\n      <Formik\n         initialValues={selectedUser}\n         enableReinitialize={true}\n         onSubmit={async (values) => {\n         }}\n         render={({ values, touched, setFieldValue }) => (\n            <Spin spinning={loading} delay={500}>\n               <Form className=\"p-30\">\n               <Card className=\"p-70\">\n               <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"ID Number\" name=\"idNumber\">\n                           <Input bordered={false} value={values.student && values.student.idNumber ? values.student.idNumber : null} name=\"idNumber\" />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Name\" name=\"name\">\n                           <Input bordered={false} value={values.student && values.student.firstName ? values.student.firstName + \" \" + values.student.middleName + \" \" + values.student.lastName : null}/>\n                        </Form.Item>\n                     </Col>\n                  </Row>\n                  <Row gutter={16}>\n                     <Col span={12}>\n                        <Form.Item label=\"Grade Level\" name=\"gradeLevel\">\n                           <Input bordered={false} value={values.student && values.student.gradeLevel ? values.student.gradeLevel : null} />\n                        </Form.Item>\n                     </Col>\n                     <Col span={12}>\n                        <Form.Item label=\"Section\" name=\"section\">\n                           <Input bordered={false} value={values.student && values.student.section ? values.student.section : null} name=\"section\" />\n                        </Form.Item>\n                     </Col>\n                  </Row>\n               </Card>\n                <br/>\n                {console.log(values)}\n               \n                <Row gutter={16}>\n\n{/* <Col span={12}>\n         <Card title=\"English\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[0].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Filipino\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[1].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Science\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[2].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n<Col span={12}>\n         <Card title=\"Math\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[3].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n \n   <Col span={12}>\n         <Card title=\"MAPEH\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[4].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col>\n\n   <Col span={12}>\n         <Card title=\"Values\" disabled = {true} style={{ width: 300 }}>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"1st Q\" name=\"values\">\n            <Input name=\"values\" disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.firstQuarter : null}/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"2nd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.secondQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n         <Row gutter={16}>\n         <Col span={12}>\n         <Form.Item label=\"3rd Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.thirdQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         <Col span={12}>\n         <Form.Item label=\"4th Q\" name=\"values\">\n            <Input   disabled={true} value={values.subjects ? values.subjects[5].subjectGrade.fourthQuarter : null} name=\"values\"/>\n         </Form.Item>\n         </Col>\n         </Row>\n      </Card>\n   </Col> */}\n</Row>\n             \n               </Form>\n            </Spin>\n         )}\n      />\n\n   );\n}\n\nexport default UserEditForm;",["119","120"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/AttendanceAction.js",["121","122","123","124","125"],"import React, { useState, useEffect } from 'react';\nimport TimekeepingService from './timeKeepingService';\nimport moment from 'moment';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( {list : [], credentials: []});\n  let [timeIn, setTimeIn] = useState(new Date());\n  let [timeOut, setTimeOut] = useState(new Date())\n\n  const filterUsers = async (date) => {\n    if(date){\n      let response = await TimekeepingService.findAllTimekeeping();\n      let result = await response.data.filter(user =>moment(user.timeIn).format('MMMM Do YYYY') === moment(date).format('MMMM Do YYYY'));\n      let newArray = await result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.student.firstName + \" \" + user.student.lastName,\n          idNumber: user.student.idNumber,\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n      }\n      })\n      setUserDetails({list: newArray});\n    } else {\n      let response = await TimekeepingService.findAllTimekeeping();\n      let newArray = await response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          name: user.student.firstName + \" \" + user.student.lastName,\n          idNumber: user.student.idNumber,\n          timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n          timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n      }\n      })\n      setUserDetails({list: newArray});\n    } \n\n  }\n\nconst loadUsers = async () => {\n    let response = await TimekeepingService.findAllTimekeeping();\n    let newArray = response.data.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        name: user.student.firstName + \" \" + user.student.lastName,\n        idNumber: user.student.idNumber,\n        timeIn: moment(user.timeIn).format('MMMM Do YYYY, h:mm:ss a'),\n        timeOut: moment(user.timeOut).format('MMMM Do YYYY, h:mm:ss a'),\n    }\n    })\n    setUserDetails({list: newArray});\n  }\n\n  useEffect(() => {\n    loadUsers();\n}, []);\n\n\n  return {\n    userDetails,\n    filterUsers\n  }\n};\n\nexport default UserAction;","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeAction.js",["126","127","128","129","130","131","132","133","134","135","136"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/user.js",["137","138","139","140"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userTable.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/dashboard/dashboardAction.js",["141"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userAction.js",["142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { useState, useEffect } from 'react';\nimport userService from './userService';\nimport gradesService from '../grade/gradesService';\nimport quarterService from '../quarter/quarterService'\nimport { Button} from 'antd';\nimport moment from 'moment';\nconst UserAction = (initial = { searchRequest: {} }) => {\n  let [userDetails, setUserDetails] = useState( {list : [],credentials: []});\n  let [adminList, setAdminList] = useState([])\n  let [quarter, setQuarter] = useState({_id : 0, quarter: 0})\n  let [parentList, setParentList] = useState([])\n  let [studentList, setStudentList] = useState([])\n  let [teacherList, setTeacherList] = useState([])\n  let [showUserVisible, setShowUserVisible] = useState(false);\n  let [selectedUser, setSelectedUser] = useState({});\n  let [selectedParent, setSelectedParent] = useState([]);\n\n  let [loginCounter, setLoginCounter] = useState(false);\n\n  const addUser = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Add User\",\n      date:new Date()\n    }\n    if(values.parentId){\n      let parent = await userService.findyById(values.parentId)\n      values.parent = parent.data;\n    }\n    let response = await userService.add(values)\n    .then(function (res) {\n      if(values.role === \"Student\"){\n        let gradeObj = {\n          status: true,\n          student: values,\n          gradeLevel: values.gradeLevel,\n          section: values.section,\n          schoolYear : values.schoolYear,\n          subjects: [{\n              subjectName: \"English\",\n              subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Filipino\",\n              subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Science\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Math\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"MAPEH\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          },\n          {\n            schoolYear : values.schoolYear,\n              subjectName: \"Values\",\n                subjectGrade: {\n                firstQuarter: 0,\n                secondQuarter: 0,\n                thirdQuarter: 0,\n                fourthQuarter: 0\n            }\n          }]\n      }\n      let response = gradesService.add(gradeObj)\n      }\n    \n        \n        setSelectedUser({\n            firstName: \"\",\n            lastName: \"\",\n            middleName: \"\",\n            employeeNumber: \"\",\n            department: \"\",\n          })\n        setShowUserVisible(false)\n        loadUsers()\n        window.location.reload(false);\n    })\n  };\n\n  const editUser = async values => {\n    let auditTrailObj = {\n      user: JSON.parse(sessionStorage.user),\n      activity : \"Edit User\",\n      date:new Date()}\n    if(values.parentId){\n      let parent = await userService.findyById(values.parentId)\n      values.parent = parent.data;\n    }\n    let response = await userService.update(values)\n    .then(function (res) {\n        setSelectedUser({\n          firstName: \"\",\n          lastName: \"\",\n          middleName: \"\",\n          idNumber: \"\",\n          gender: \"\",\n          birthDate: \"\",\n          birthPlace: \"\",\n          age: \"\",\n          contactNumber: \"\",\n          email: \"\",\n          status: \"\",\n          })\n        setShowUserVisible(false)\n        loadUsers()\n    })\n  };\n\n  const getListOfParent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Parent\");\n    setSelectedParent(result)\n  };\n\n  const showUser = () => {\n    setSelectedUser({\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        idNumber: \"\",\n        gender: \"\",\n        birthDate: \"\",\n        birthPlace: \"\",\n        age: \"\",\n        contactNumber: \"\",\n        email: \"\",\n        status: \"\",\n      });\n    setShowUserVisible(true)\n  };\n\n  const loadUser = (userObj) => {\n    setSelectedUser({...userObj});\n    setShowUserVisible(true);\n  };\n\n  const loadQuarter = async () => {\n    let response = await quarterService.findAllQuarter();\n    if (response.data && response.data.length > 0) {\n      setQuarter({quarter: response.data[0].quarter , _id: response.data[0]._id})\n    };\n  }\n\n  const login = (credentials) => {\n    let ctr = 0;\n    let loggedInUser = {};\n    userDetails.list.map((user) => {\n        if(user.idNumber === credentials.username && user.password === credentials.password) {\n            ctr = ctr + 1;\n            loggedInUser = user;\n        }\n    })\n    if(ctr === 0) {\n        setLoginCounter(false)\n    } else {\n        sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n        sessionStorage.setItem(\"quarter\", quarter.quarter)\n        sessionStorage.setItem(\"_id\", quarter._id)\n        window.location.reload(false);\n        setLoginCounter(true)\n    }\n  };\n\n  const filterStudent = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Student\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setStudentList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Student\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setStudentList( newArray)\n    }\n  } \n  \n  const filterTeacher = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Teacher\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setTeacherList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Teacher\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setTeacherList( newArray)\n    }\n  }  \n\n  const filterParent = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Parent\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setParentList(newArray)\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Parent\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setParentList( newArray)\n    }\n  }  \n\n  const filterAdmin = async (name) => {\n    if(name !== \"\") {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.idNumber === name && user.role === \"Admin\");\n      let newArray = result.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          middleName: user.middleName,\n          idNumber: user.idNumber,\n          gender: user.gender,\n          birthDate: user.birthDate,\n          birthPlace: user.birthPlace,\n          age: user.age,\n          contactNumber: user.contactNumber,\n          email: user.email,\n          role: user.role,\n          password: user.password,\n          gradeLevel: user.gradeLevel,\n          section: user.section,\n          action: \n            <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n        }\n      })\n  \n      let newArrayCredentials = response.data.map((user) => {\n          return {\n            key: user._id,\n            id: user._id,\n            idNumber: user.idNumber,\n            password: user.password,\n          }\n        })\n  \n        setAdminList(\n        newArray\n      )\n    } else {\n      let response = await userService.findAllUser();\n      let result = response.data.filter(user => user.role === \"Admin\");\n      let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setAdminList(\n      newArray\n    )\n    }\n  }\n\n  const loadTeacher = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Teacher\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setTeacherList(newArray)\n\n  }  \n\n  const loadStudent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Student\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setStudentList(newArray)\n\n  }  \n\n  const loadParent = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Parent\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setParentList(newArray)\n\n  }\n\n  const loadAdmin = async () => {\n    let response = await userService.findAllUser();\n    let result = response.data.filter(user => user.role === \"Admin\");\n    let newArray = result.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    setAdminList(newArray)\n\n  }\n\nconst loadUsers = async () => {\n    let response = await userService.findAllUser();\n    let newArray = response.data.map((user) => {\n      return {\n        key: user._id,\n        id: user._id,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        middleName: user.middleName,\n        idNumber: user.idNumber,\n        gender: user.gender,\n        birthDate: user.birthDate,\n        birthPlace: user.birthPlace,\n        age: user.age,\n        contactNumber: user.contactNumber,\n        email: user.email,\n        role: user.role,\n        password: user.password,\n        gradeLevel: user.gradeLevel,\n        section: user.section,\n        action: \n          <Button onClick={() => loadUser(user)} key={\"VIEW_\"+user._id}>View User&nbsp; </Button>,\n      }\n    })\n\n    let newArrayCredentials = response.data.map((user) => {\n        return {\n          key: user._id,\n          id: user._id,\n          idNumber: user.idNumber,\n          password: user.password,\n        }\n      })\n\n    setUserDetails({\n      list: newArray,\n      credentials: newArrayCredentials\n    })\n\n  }\n\n  useEffect(() => {\n    loadUsers();\n    getListOfParent();\n    loadAdmin();\n    loadStudent();\n    loadTeacher();\n    loadParent();\n    loadQuarter();\n  }, []);\n\n\n  return {\n    loadUsers,\n    addUser,\n    loginCounter,\n    showUserVisible,\n    setShowUserVisible,\n    showUser,\n    userDetails,\n    selectedUser,\n    editUser,\n    login,\n    selectedParent,\n    filterAdmin,\n    filterStudent,\n    filterParent,\n    filterTeacher,\n    adminList,\n    studentList,\n    parentList,\n    teacherList,\n  }\n};\n\nexport default UserAction;",["154","155"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/gradeForm.js",["156","157","158","159","160","161"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailAction.js",["162","163","164"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/config.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/offspring/offspring.js",["165","166","167","168"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport GradeForm from '../offspring/offspringForm'\n\nimport GradeAction from '../grade/gradeAction'\n\nimport OffspringTable from '../offspring/offspringTable'\n\nconst OffspringPage = () => {\n\n\n  let {\n    selectedGrade,\n    showGradeVisible,\n    setShowGradeVisible,\n    gradeDetails\n  } = GradeAction({});\n  return (\n    <Card className=\"h-82 p-70\">\n    <Row className=\"mt-15\">\n      <Col lg={{ span: 12 }}>\n        <Typography.Title level={3} className=\"ml-15\">Student Grade</Typography.Title>\n      </Col>\n      <Col lg={{ span: 12 }}>\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <OffspringTable details={gradeDetails.list} />\n      </Col>\n    </Row>\n    <Drawer\n              title={\n                  <Typography.Title level={4}>\n                  \n                  </Typography.Title>\n              }\n              width={700}\n              visible={showGradeVisible}\n              onClose={()=> { setShowGradeVisible(false)}}\n              bodyStyle={{ paddingBottom: 80 }}\n          >\n             <GradeForm selectedOffspring={selectedGrade}/>\n          </Drawer>\n    \n  </Card>\n\t\n      \n  );\n}\n\nexport default OffspringPage;\n\n","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/userMenu.js",["169"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrail.js",["170","171","172","173","174","175","176"],"import React from 'react';\nimport { Drawer, Card, Button, Typography, Icon, Row, Col, Select, DatePicker } from 'antd';\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\n\n\nimport AuditTrailTable from './auditTrailTable'\nimport AuditTrailAction from './auditTrailAction'\nconst {Option} = Select;\n\nconst AuditTrailPage = () => {\n    let{\n        auditTrailDetails,\n    } = AuditTrailAction({});\n  \n  return (\n    <Card className=\"h-82 p-70\">\n      <Row className=\"mt-15\">\n        <Col lg={{ span: 12 }}>\n          <Typography.Title level={3} className=\"ml-15\">Audit Trail</Typography.Title>\n        </Col>\n        {/* <Col lg={{ span: 24 }}>\n          <Button className=\"right\" type=\"danger \" onClick={() => console.log(\"lol\")}>\n            <MinusCircleOutlined type=\"minus-circle\" /> Delete Audit\n          </Button>\n        </Col> */}\n    </Row>\n    <Row>\n      <Col lg={{ span: \"24\" }}>\n        <AuditTrailTable details={auditTrailDetails.list} />\n      </Col>\n    </Row>\n  </Card>\n\t\n      \n  );\n}\n\nexport default AuditTrailPage;\n\n","/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade8.js",["177","178","179"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/offspring/offspringTable.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/auditTrail/auditTrailTable.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryAction.js",["180","181","182","183","184"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/advisoryForm.js",["185","186","187","188","189"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/index.js",[],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade1.js",["190","191","192","193"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/grade/grade10.js",["194","195","196"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/user/userForm.js",["197","198","199","200","201","202","203"],"/home/servant-warrior-07/Documents/projects/fe-student-attendance/src/components/timeKeeping/timeKeepingService.js",[],{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"208","line":3,"column":30,"nodeType":"206","messageId":"207","endLine":3,"endColumn":49},{"ruleId":"204","severity":1,"message":"209","line":27,"column":5,"nodeType":"206","messageId":"207","endLine":27,"endColumn":10},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"204","severity":1,"message":"214","line":2,"column":23,"nodeType":"206","messageId":"207","endLine":2,"endColumn":33},{"ruleId":"204","severity":1,"message":"215","line":4,"column":20,"nodeType":"206","messageId":"207","endLine":4,"endColumn":26},{"ruleId":"204","severity":1,"message":"216","line":4,"column":28,"nodeType":"206","messageId":"207","endLine":4,"endColumn":35},{"ruleId":"204","severity":1,"message":"217","line":4,"column":57,"nodeType":"206","messageId":"207","endLine":4,"endColumn":64},{"ruleId":"204","severity":1,"message":"218","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":27},{"ruleId":"204","severity":1,"message":"219","line":6,"column":9,"nodeType":"206","messageId":"207","endLine":6,"endColumn":15},{"ruleId":"204","severity":1,"message":"220","line":11,"column":18,"nodeType":"206","messageId":"207","endLine":11,"endColumn":28},{"ruleId":"210","replacedBy":"221"},{"ruleId":"212","replacedBy":"222"},{"ruleId":"204","severity":1,"message":"223","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":13},{"ruleId":"204","severity":1,"message":"224","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"225","line":6,"column":16,"nodeType":"206","messageId":"207","endLine":6,"endColumn":25},{"ruleId":"204","severity":1,"message":"226","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":15},{"ruleId":"204","severity":1,"message":"227","line":7,"column":17,"nodeType":"206","messageId":"207","endLine":7,"endColumn":27},{"ruleId":"204","severity":1,"message":"228","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":14},{"ruleId":"204","severity":1,"message":"229","line":53,"column":11,"nodeType":"206","messageId":"207","endLine":53,"endColumn":19},{"ruleId":"204","severity":1,"message":"230","line":56,"column":11,"nodeType":"206","messageId":"207","endLine":56,"endColumn":20},{"ruleId":"204","severity":1,"message":"231","line":125,"column":9,"nodeType":"206","messageId":"207","endLine":125,"endColumn":18},{"ruleId":"204","severity":1,"message":"229","line":134,"column":11,"nodeType":"206","messageId":"207","endLine":134,"endColumn":19},{"ruleId":"204","severity":1,"message":"230","line":137,"column":11,"nodeType":"206","messageId":"207","endLine":137,"endColumn":20},{"ruleId":"204","severity":1,"message":"232","line":388,"column":9,"nodeType":"206","messageId":"207","endLine":388,"endColumn":21},{"ruleId":"204","severity":1,"message":"233","line":410,"column":9,"nodeType":"206","messageId":"207","endLine":410,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":553,"column":36,"nodeType":"236","messageId":"237","endLine":553,"endColumn":38},{"ruleId":"234","severity":1,"message":"235","line":554,"column":27,"nodeType":"236","messageId":"237","endLine":554,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":836,"column":6,"nodeType":"240","endLine":836,"endColumn":8,"suggestions":"241"},{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"208","line":3,"column":30,"nodeType":"206","messageId":"207","endLine":3,"endColumn":49},{"ruleId":"204","severity":1,"message":"242","line":19,"column":5,"nodeType":"206","messageId":"207","endLine":19,"endColumn":16},{"ruleId":"204","severity":1,"message":"209","line":28,"column":5,"nodeType":"206","messageId":"207","endLine":28,"endColumn":10},{"ruleId":"204","severity":1,"message":"223","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":13},{"ruleId":"204","severity":1,"message":"228","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"243","line":21,"column":9,"nodeType":"206","messageId":"207","endLine":21,"endColumn":22},{"ruleId":"204","severity":1,"message":"229","line":30,"column":9,"nodeType":"206","messageId":"207","endLine":30,"endColumn":17},{"ruleId":"204","severity":1,"message":"229","line":99,"column":11,"nodeType":"206","messageId":"207","endLine":99,"endColumn":19},{"ruleId":"204","severity":1,"message":"243","line":117,"column":9,"nodeType":"206","messageId":"207","endLine":117,"endColumn":22},{"ruleId":"204","severity":1,"message":"229","line":125,"column":9,"nodeType":"206","messageId":"207","endLine":125,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":183,"column":33,"nodeType":"236","messageId":"237","endLine":183,"endColumn":35},{"ruleId":"204","severity":1,"message":"244","line":227,"column":11,"nodeType":"206","messageId":"207","endLine":227,"endColumn":30},{"ruleId":"204","severity":1,"message":"244","line":294,"column":11,"nodeType":"206","messageId":"207","endLine":294,"endColumn":30},{"ruleId":"204","severity":1,"message":"244","line":361,"column":11,"nodeType":"206","messageId":"207","endLine":361,"endColumn":30},{"ruleId":"204","severity":1,"message":"244","line":428,"column":11,"nodeType":"206","messageId":"207","endLine":428,"endColumn":30},{"ruleId":"238","severity":1,"message":"245","line":641,"column":6,"nodeType":"240","endLine":641,"endColumn":8,"suggestions":"246"},{"ruleId":"210","replacedBy":"247"},{"ruleId":"212","replacedBy":"248"},{"ruleId":"204","severity":1,"message":"214","line":2,"column":23,"nodeType":"206","messageId":"207","endLine":2,"endColumn":33},{"ruleId":"204","severity":1,"message":"216","line":4,"column":28,"nodeType":"206","messageId":"207","endLine":4,"endColumn":35},{"ruleId":"204","severity":1,"message":"219","line":6,"column":9,"nodeType":"206","messageId":"207","endLine":6,"endColumn":15},{"ruleId":"204","severity":1,"message":"220","line":10,"column":18,"nodeType":"206","messageId":"207","endLine":10,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":111,"column":134,"nodeType":"251","messageId":"252","endLine":111,"endColumn":136},{"ruleId":"249","severity":1,"message":"250","line":179,"column":113,"nodeType":"251","messageId":"252","endLine":179,"endColumn":115},{"ruleId":"204","severity":1,"message":"223","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":13},{"ruleId":"204","severity":1,"message":"215","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"229","line":14,"column":9,"nodeType":"206","messageId":"207","endLine":14,"endColumn":17},{"ruleId":"204","severity":1,"message":"215","line":2,"column":24,"nodeType":"206","messageId":"207","endLine":2,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"253","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":28},{"ruleId":"204","severity":1,"message":"208","line":3,"column":30,"nodeType":"206","messageId":"207","endLine":3,"endColumn":49},{"ruleId":"204","severity":1,"message":"254","line":12,"column":12,"nodeType":"206","messageId":"207","endLine":12,"endColumn":25},{"ruleId":"204","severity":1,"message":"255","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":2,"column":24,"nodeType":"206","messageId":"207","endLine":2,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"214","line":2,"column":68,"nodeType":"206","messageId":"207","endLine":2,"endColumn":78},{"ruleId":"204","severity":1,"message":"253","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":28},{"ruleId":"204","severity":1,"message":"208","line":3,"column":30,"nodeType":"206","messageId":"207","endLine":3,"endColumn":49},{"ruleId":"204","severity":1,"message":"219","line":9,"column":8,"nodeType":"206","messageId":"207","endLine":9,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"256","line":21,"column":5,"nodeType":"206","messageId":"207","endLine":21,"endColumn":14},{"ruleId":"204","severity":1,"message":"257","line":47,"column":5,"nodeType":"206","messageId":"207","endLine":47,"endColumn":29},{"ruleId":"204","severity":1,"message":"223","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":13},{"ruleId":"204","severity":1,"message":"258","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":25},{"ruleId":"204","severity":1,"message":"259","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":23},{"ruleId":"204","severity":1,"message":"243","line":22,"column":9,"nodeType":"206","messageId":"207","endLine":22,"endColumn":22},{"ruleId":"204","severity":1,"message":"229","line":31,"column":9,"nodeType":"206","messageId":"207","endLine":31,"endColumn":17},{"ruleId":"204","severity":1,"message":"260","line":2,"column":16,"nodeType":"206","messageId":"207","endLine":2,"endColumn":21},{"ruleId":"204","severity":1,"message":"214","line":2,"column":23,"nodeType":"206","messageId":"207","endLine":2,"endColumn":33},{"ruleId":"204","severity":1,"message":"216","line":4,"column":28,"nodeType":"206","messageId":"207","endLine":4,"endColumn":35},{"ruleId":"204","severity":1,"message":"261","line":4,"column":43,"nodeType":"206","messageId":"207","endLine":4,"endColumn":47},{"ruleId":"204","severity":1,"message":"220","line":11,"column":18,"nodeType":"206","messageId":"207","endLine":11,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"208","line":3,"column":30,"nodeType":"206","messageId":"207","endLine":3,"endColumn":49},{"ruleId":"204","severity":1,"message":"256","line":22,"column":5,"nodeType":"206","messageId":"207","endLine":22,"endColumn":14},{"ruleId":"204","severity":1,"message":"257","line":48,"column":5,"nodeType":"206","messageId":"207","endLine":48,"endColumn":29},{"ruleId":"204","severity":1,"message":"205","line":2,"column":44,"nodeType":"206","messageId":"207","endLine":2,"endColumn":48},{"ruleId":"204","severity":1,"message":"256","line":21,"column":5,"nodeType":"206","messageId":"207","endLine":21,"endColumn":14},{"ruleId":"204","severity":1,"message":"257","line":47,"column":5,"nodeType":"206","messageId":"207","endLine":47,"endColumn":29},{"ruleId":"204","severity":1,"message":"216","line":4,"column":28,"nodeType":"206","messageId":"207","endLine":4,"endColumn":35},{"ruleId":"204","severity":1,"message":"220","line":11,"column":18,"nodeType":"206","messageId":"207","endLine":11,"endColumn":28},{"ruleId":"204","severity":1,"message":"262","line":12,"column":9,"nodeType":"206","messageId":"207","endLine":12,"endColumn":26},{"ruleId":"204","severity":1,"message":"263","line":12,"column":28,"nodeType":"206","messageId":"207","endLine":12,"endColumn":48},{"ruleId":"249","severity":1,"message":"250","line":73,"column":55,"nodeType":"251","messageId":"252","endLine":73,"endColumn":57},{"ruleId":"249","severity":1,"message":"250","line":89,"column":57,"nodeType":"251","messageId":"252","endLine":89,"endColumn":59},{"ruleId":"249","severity":1,"message":"250","line":113,"column":152,"nodeType":"251","messageId":"252","endLine":113,"endColumn":154},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'MinusCircleOutlined' is defined but never used.","'today' is assigned a value but never used.","no-native-reassign",["264"],"no-negated-in-lhs",["265"],"'DatePicker' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","'AntForm' is defined but never used.","'CheckCircleFilled' is defined but never used.","'Option' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["264"],["265"],"'React' is defined but never used.","'timeIn' is assigned a value but never used.","'setTimeIn' is assigned a value but never used.","'timeOut' is assigned a value but never used.","'setTimeOut' is assigned a value but never used.","'moment' is defined but never used.","'response' is assigned a value but never used.","'response1' is assigned a value but never used.","'response2' is assigned a value but never used.","'updateResult' is assigned a value but never used.","'loadSelectedGrade' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadGrades', 'loadGrades1', 'loadGrades10', 'loadGrades2', 'loadGrades3', 'loadGrades4', 'loadGrades5', 'loadGrades6', 'loadGrades7', 'loadGrades8', and 'loadGrades9'. Either include them or remove the dependency array.","ArrayExpression",["266"],"'userDetails' is assigned a value but never used.","'auditTrailObj' is assigned a value but never used.","'newArrayCredentials' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAdmin', 'loadParent', 'loadStudent', 'loadTeacher', and 'loadUsers'. Either include them or remove the dependency array.",["267"],["264"],["265"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'PlusCircleOutlined' is defined but never used.","'setLoggedUser' is assigned a value but never used.","'Drawer' is defined but never used.","'showGrade' is assigned a value but never used.","'selectedAdvisoryAssgined' is assigned a value but never used.","'auditTrailService' is defined but never used.","'selectedTeacher' is assigned a value but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'gradeLevelVisible' is assigned a value but never used.","'setGradeLevelVisible' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",{"range":"272","text":"273"},"Update the dependencies array to be: [loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]",{"range":"274","text":"275"},[28512,28514],"[loadGrades, loadGrades1, loadGrades10, loadGrades2, loadGrades3, loadGrades4, loadGrades5, loadGrades6, loadGrades7, loadGrades8, loadGrades9]",[18970,18972],"[loadAdmin, loadParent, loadStudent, loadTeacher, loadUsers]"]